com.squareup.javapoet.AnnotatedTypeNameTest;annotatedInnerMultidimensionalArrayType;annotatedArrayElementType;annotatedOuterMultidimensionalArrayType;withoutAnnotationsOnAnnotatedEnclosingType;annotatedWildcardTypeNameWithExtends;annotatedArrayTypeInVarargsParameter;annotatedArgumentOfParameterizedType;annotated;withoutAnnotationsOnAnnotatedNestedType;annotatedNestedType;withoutAnnotationsOnAnnotatedEnclosingAndNestedType;annotatedTwice;annotatedType;annotatedEnclosingAndNestedType;annotatedArrayTypeVarargsParameter;annotatedParameterizedType;annotatedEquivalence;annotatedArrayType;annotatedNestedParameterizedType;annotatedWildcardTypeNameWithSuper
com.squareup.javapoet.TypesTest;typeVariable;arrayType;wildcardMirrorExtendsType;wildcardSuperType;wildcardMirrorNoBounds;wildcardMirrorSuperType;getArrayTypeMirror;box;parameterizedType;getBasicTypeMirror;getTypeVariableTypeMirror;unbox;getTypeVariableTypeMirrorRecursive;wildcardExtendsObject;getParameterizedTypeMirror;errorTypes;wildcardExtendsType
com.squareup.javapoet.TypeNameTest;isBoxedPrimitive;innerStaticInGenericType;equalsAndHashCodeTypeVariableName;equalsAndHashCodeWildcardTypeName;equalsAndHashCodeArrayTypeName;genericType;equalsAndHashCodeParameterizedTypeName;innerGenericInGenericType;equalsAndHashCodePrimitive;equalsAndHashCodeClassName;innerClassInGenericType
com.squareup.javapoet.TypesEclipseTest;typeVariable;arrayType;wildcardMirrorExtendsType;wildcardSuperType;wildcardMirrorNoBounds;wildcardMirrorSuperType;getArrayTypeMirror;box;parameterizedType;getBasicTypeMirror;getTypeVariableTypeMirror;unbox;getTypeVariableTypeMirrorRecursive;getParameterizedTypeMirror;wildcardExtendsObject;errorTypes;wildcardExtendsType
com.squareup.javapoet.TypeSpecTest;multilineStatementWithAnonymousClass;annotationWithFields;interfaceStaticMethods;parameterToString;annotationToString;multilineStrings;multipleSuperinterfaceAddition;initializerBlockInRightPlace;innerAnnotationInAnnotationDeclaration;multipleMethodAddition;defaultModifiersForInterfaceMembers;defaultModifiersForMemberInterfacesAndEnums;equalsAndHashCode;ifElse;varargs;annotationsAndJavaLangTypes;javadocEnsuresTrailingLine;lineWrappingWithZeroWidthSpace;arrayType;enumWithSubclassing;nameFromMethod;multipleTypeAddition;indexedElseIf;tryCatch;nameFromParameter;stringFromNull;simpleNameConflictsWithTypeVariable;interfaceExtends;annotatedClass;annotationsInAnnotations;enumImplements;inlineIndent;codeBlockAddStatementOfCodeBlockToString;multipleAnnotationAddition;annotationDeclarationToString;typeVariableWithBounds;doWhile;interfaceDefaultMethods;classImplementsNestedClass;elseIf;typeVariables;basic;interfaceClassToString;anonymousInnerClass;nameFromType;staticCodeBlock;nullStringLiteral;methodThrows;simpleNamesConflictInThisAndOtherPackage;annotatedParameters;intersectionType;multipleTypeVariableAddition;invalidSuperClass;anonymousClassToString;javadoc;literalFromAnything;codeBlockToString;constructorToString;referencedAndDeclaredSimpleNamesConflict;nestedClasses;annotatedField;membersOrdering;classImplementsExtends;typeFromTypeElement;javadocWithTrailingLineDoesNotAddAnother;enumWithAnnotatedValues;annotation;methodToString;enumsMayDefineAbstractMethods;initializersToBuilder;multipleFieldAddition;typeFromTypeMirror;interestingTypes;nameFromCharSequence;lineWrapping;codeBlocks;nativeMethods;fieldToString;classToString;nameFromField;enumWithMembersButNoConstructorCall;multilineStatement;typeFromReflectType;stringFromAnything;typeFromTypeName;retrofitStyleInterface
com.squareup.javapoet.JavaFileTest;singleImport;classAndSuperclassShareName;importStaticReadmeExample;importStaticUsingWildcards;packageClassConflictsWithSuperlass;importStaticOnce;importStaticForCrazyFormatsWorks;conflictingImports;conflictingTypeVariableBound;conflictingNameOutOfScope;defaultPackageTypesAreNotImported;importStaticTwice;annotatedTypeParam;conflictingParentName;modifyStaticImports;annotationIsNestedClass;importStaticNone;defaultPackage;emptyLinesInTopOfFileComment;skipJavaLangImportsWithConflictingClassFirst;packageClassConflictsWithNestedClass;topOfFileComment;noImports;conflictingChildName;conflictingAnnotation;skipJavaLangImportsWithConflictingClassLast;importStaticMixed;superclassReferencesSelf;conflictingAnnotationReferencedClass;nestedClassAndSuperclassShareName
com.squareup.javapoet.FileWritingTest;fileIsUtf8;filerPassesOriginatingElements;pathDefaultPackage;filerNestedClasses;fileDefaultPackage;filerClassesWithTabIndent;pathNestedClasses;fileNestedClasses;filerDefaultPackage
com.squareup.javapoet.FieldSpecTest;equalsAndHashCode
com.squareup.javapoet.AnnotationSpecTest;modifyMembers;defaultAnnotationWithImport;defaultAnnotationToBuilder;defaultAnnotation;reflectAnnotation;emptyArray;equalsAndHashCode;dynamicArrayOfEnumConstants;reflectAnnotationWithDefaults
com.squareup.javapoet.MethodSpecTest;overrideExtendsOthersWorksWithActualTypeParameters;overrideEverything;modifyMethodName;ensureTrailingNewline;withoutParameterJavaDoc;overrideDoesNotCopyOverrideAnnotation;withParameterJavaDoc;overrideDoesNotCopyDefaultModifier;withParameterJavaDocAndWithoutMethodJavadoc;equalsAndHashCode;duplicateExceptionsIgnored;overrideGenerics;ensureTrailingNewlineWithExistingNewline
com.squareup.javapoet.ParameterSpecTest;parameterVariableElement;equalsAndHashCode
com.squareup.javapoet.CodeBlockTest;joining;simpleNamedArgument;literalFormatCanBeIndexed;namedAndNoArgFormat;namedNewline;typeFormatCanBeIndexed;sameIndexCanBeUsedWithDifferentFormats;joiningSingle;of;multipleNamedArguments;stringFormatCanBeIndexed;join;equalsAndHashCode;nameFormatCanBeIndexed;joiningWithPrefixAndSuffix;repeatedNamedArgument
com.squareup.javapoet.ClassNameTest;peerClass;bestGuessForString_defaultPackage;classNameFromTypeElement;bestGuessForString_nestedClass;createNestedClass;bestGuessForString_simpleClass;classNameFromClass;classNameFromTypeElementDoesntUseGetKind
com.squareup.javapoet.FileReadingTest;javaFileObjectCharacterContent;javaFileObjectInputStreamIsUtf8;compileJavaFile
ClassNameNoPackageTest;shouldSupportClassInDefaultPackage