{
    "26": {
        "size": 2,
        "decision": "pass",
        "diff": "diff -ru src/main/java/org/jsoup/parser/HtmlTreeBuilder.java src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n--- src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\t2022-06-06 15:06:05.187642241 +0200\n+++ src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\t2022-06-06 15:06:05.151641940 +0200\n@@ -478,7 +478,7 @@\n \n         LOOP: for (int pos = bottom; pos >= upper; pos--) {\n             Element node = stack.get(pos);\n-            if (pos == 0) {\n+            if (pos == upper) {\n                 last = true;\n                 if (fragmentParsing)\n                     node = contextElement;\nOnly in src/test/resources/fuzztests: 1642.html.gz\n",
        "sha1": "2b22ef8",
        "sha2": "011e83f",
        "config": "STUDENTS_T_TEST_DIFF_COVERAGE_0.20"
    },
    "21": {
        "size": 6,
        "decision": "break",
        "diff": "diff -ru src/main/java/org/jsoup/parser/HtmlTreeBuilder.java src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n--- src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\t2022-06-06 15:06:05.099641507 +0200\n+++ src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\t2022-06-06 15:06:05.107641573 +0200\n@@ -10,7 +10,6 @@\n import org.jsoup.nodes.FormElement;\n import org.jsoup.nodes.Node;\n import org.jsoup.nodes.TextNode;\n-import org.jsoup.select.Elements;\n \n import javax.annotation.Nullable;\n import javax.annotation.ParametersAreNonnullByDefault;\n@@ -20,6 +19,7 @@\n import java.util.List;\n \n import static org.jsoup.internal.StringUtil.inSorted;\n+import static org.jsoup.parser.HtmlTreeBuilderState.Constants.InTableFoster;\n \n /**\n  * HTML Tree Builder; creates a DOM from Tokens.\n@@ -315,7 +315,7 @@\n         // if the stack hasn't been set up yet, elements (doctype, comments) go into the doc\n         if (stack.isEmpty())\n             doc.appendChild(node);\n-        else if (isFosterInserts())\n+        else if (isFosterInserts() && StringUtil.inSorted(currentElement().normalName(), InTableFoster))\n             insertInFosterParent(node);\n         else\n             currentElement().appendChild(node);\n",
        "sha1": "41932fe",
        "sha2": "e4ae6fa"
    }
}