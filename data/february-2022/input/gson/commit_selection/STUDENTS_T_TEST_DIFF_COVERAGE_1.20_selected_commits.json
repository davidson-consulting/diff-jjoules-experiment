{
    "285": {
        "size": 7,
        "decision": "pass",
        "diff": "diff -ru /tmp/v1/gson/src/main/java/com/google/gson/annotations/JsonAdapter.java /tmp/v2/gson/src/main/java/com/google/gson/annotations/JsonAdapter.java\n--- /tmp/v1/gson/src/main/java/com/google/gson/annotations/JsonAdapter.java\t2022-06-06 15:03:17.246229299 +0200\n+++ /tmp/v2/gson/src/main/java/com/google/gson/annotations/JsonAdapter.java\t2022-06-06 15:03:17.254229367 +0200\n@@ -94,4 +94,7 @@\n   /** Either a {@link TypeAdapter} or {@link TypeAdapterFactory}. */\n   Class<?> value();\n \n+  /** false, to be able to handle {@code null} values within the adapter, default value is true. */\n+  boolean nullSafe() default true;\n+\n }\ndiff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\n--- /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\t2022-06-06 15:03:17.246229299 +0200\n+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\t2022-06-06 15:03:16.874226135 +0200\n@@ -73,7 +73,7 @@\n               + \"JsonSerializer or JsonDeserializer reference.\");\n     }\n \n-    if (typeAdapter != null) {\n+    if (typeAdapter != null && annotation.nullSafe()) {\n       typeAdapter = typeAdapter.nullSafe();\n     }\n \n",
        "sha1": "f482f4a",
        "sha2": "193349f"
    },
    "212": {
        "size": 6,
        "decision": "break",
        "diff": "diff -ru /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java\n--- /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java\t2022-06-06 15:03:16.574223584 +0200\n+++ /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java\t2022-06-06 15:03:16.542223312 +0200\n@@ -562,8 +562,11 @@\n     List<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>(this.factories.size() + this.hierarchyFactories.size() + 3);\n     factories.addAll(this.factories);\n     Collections.reverse(factories);\n-    Collections.reverse(this.hierarchyFactories);\n-    factories.addAll(this.hierarchyFactories);\n+\n+    List<TypeAdapterFactory> hierarchyFactories = new ArrayList<TypeAdapterFactory>(this.hierarchyFactories);\n+    Collections.reverse(hierarchyFactories);\n+    factories.addAll(hierarchyFactories);\n+\n     addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, factories);\n \n     return new Gson(excluder, fieldNamingPolicy, instanceCreators,\n",
        "sha1": "afcb381",
        "sha2": "d9cc7bc"
    }
}