<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1651498841362" clover="4.4.1">
   <project name="Gson 2.8.9-SNAPSHOT" timestamp="1651498830866">
      <metrics coveredelements="5740" complexity="2037" loc="14936" methods="781" classes="94" statements="4097" packages="9" coveredconditionals="1484" coveredmethods="666" elements="6662" ncloc="8196" files="70" conditionals="1784" coveredstatements="3590"/>
      <package name="com.google.gson.internal">
         <metrics coveredelements="1599" complexity="595" loc="3357" methods="231" classes="29" statements="1152" coveredconditionals="474" coveredmethods="179" elements="1997" ncloc="2233" files="14" conditionals="614" coveredstatements="946"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java" name="$Gson$Preconditions.java">
            <metrics coveredelements="11" coveredconditionals="4" complexity="5" loc="49" coveredmethods="2" methods="3" elements="13" classes="1" ncloc="17" statements="6" conditionals="4" coveredstatements="5"/>
            <class name="$Gson$Preconditions">
               <metrics coveredelements="11" coveredconditionals="4" complexity="5" coveredmethods="2" methods="3" elements="13" statements="6" conditionals="4" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="$Gson$Preconditions()" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkNotNull(T) : T" num="37" count="8310" type="method"/>
            <line num="38" count="8315" type="stmt"/>
            <line falsecount="8313" truecount="6" num="38" type="cond"/>
            <line num="39" count="6" type="stmt"/>
            <line num="41" count="8317" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkArgument(boolean) : void" num="44" count="3429" type="method"/>
            <line num="45" count="3429" type="stmt"/>
            <line falsecount="3428" truecount="1" num="45" type="cond"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java" name="$Gson$Types.java">
            <metrics coveredelements="366" coveredconditionals="122" complexity="116" loc="634" coveredmethods="36" methods="40" elements="426" classes="4" ncloc="429" statements="236" conditionals="150" coveredstatements="208"/>
            <class name="$Gson$Types">
               <metrics coveredelements="304" coveredconditionals="111" complexity="88" coveredmethods="21" methods="22" elements="338" statements="186" conditionals="130" coveredstatements="172"/>
            </class>
            <class name="$Gson$Types.ParameterizedTypeImpl">
               <metrics coveredelements="27" coveredconditionals="5" complexity="12" coveredmethods="6" methods="7" elements="41" statements="24" conditionals="10" coveredstatements="16"/>
            </class>
            <class name="$Gson$Types.GenericArrayTypeImpl">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="$Gson$Types.WildcardTypeImpl">
               <metrics coveredelements="27" coveredconditionals="6" complexity="11" coveredmethods="5" methods="6" elements="37" statements="21" conditionals="10" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="private" signature="$Gson$Types()" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newParameterizedTypeWithOwner(Type,Type,Type) : ParameterizedType" num="57" count="220" type="method"/>
            <line num="59" count="220" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayOf(Type) : GenericArrayType" num="68" count="25" type="method"/>
            <line num="69" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="subtypeOf(Type) : WildcardType" num="78" count="28" type="method"/>
            <line num="79" count="28" type="stmt"/>
            <line num="80" count="28" type="stmt"/>
            <line falsecount="19" truecount="9" num="80" type="cond"/>
            <line num="81" count="9" type="stmt"/>
            <line num="83" count="19" type="stmt"/>
            <line num="85" count="28" type="stmt"/>
            <line complexity="2" visibility="public" signature="supertypeOf(Type) : WildcardType" num="93" count="18" type="method"/>
            <line num="94" count="18" type="stmt"/>
            <line num="95" count="18" type="stmt"/>
            <line falsecount="5" truecount="13" num="95" type="cond"/>
            <line num="96" count="13" type="stmt"/>
            <line num="98" count="5" type="stmt"/>
            <line num="100" count="18" type="stmt"/>
            <line complexity="6" visibility="public" signature="canonicalize(Type) : Type" num="108" count="8123" type="method"/>
            <line num="109" count="8126" type="stmt"/>
            <line falsecount="879" truecount="7247" num="109" type="cond"/>
            <line num="110" count="7238" type="stmt"/>
            <line num="111" count="7244" type="stmt"/>
            <line falsecount="7097" truecount="151" num="111" type="cond"/>
            <line num="113" count="879" type="stmt"/>
            <line falsecount="320" truecount="559" num="113" type="cond"/>
            <line num="114" count="559" type="stmt"/>
            <line num="115" count="559" type="stmt"/>
            <line num="118" count="320" type="stmt"/>
            <line falsecount="267" truecount="53" num="118" type="cond"/>
            <line num="119" count="53" type="stmt"/>
            <line num="120" count="53" type="stmt"/>
            <line num="122" count="267" type="stmt"/>
            <line falsecount="145" truecount="122" num="122" type="cond"/>
            <line num="123" count="122" type="stmt"/>
            <line num="124" count="122" type="stmt"/>
            <line num="128" count="145" type="stmt"/>
            <line complexity="7" visibility="public" signature="getRawType(Type) : Class&lt;?&gt;" num="132" count="6168" type="method"/>
            <line num="133" count="6173" type="stmt"/>
            <line falsecount="911" truecount="5267" num="133" type="cond"/>
            <line num="135" count="5264" type="stmt"/>
            <line num="137" count="911" type="stmt"/>
            <line falsecount="296" truecount="615" num="137" type="cond"/>
            <line num="138" count="615" type="stmt"/>
            <line num="143" count="615" type="stmt"/>
            <line num="144" count="615" type="stmt"/>
            <line num="145" count="615" type="stmt"/>
            <line num="147" count="296" type="stmt"/>
            <line falsecount="92" truecount="204" num="147" type="cond"/>
            <line num="148" count="204" type="stmt"/>
            <line num="149" count="204" type="stmt"/>
            <line num="151" count="92" type="stmt"/>
            <line falsecount="16" truecount="76" num="151" type="cond"/>
            <line num="154" count="76" type="stmt"/>
            <line num="156" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="156" type="cond"/>
            <line num="157" count="16" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="equal(Object,Object) : boolean" num="166" count="1228" type="method"/>
            <line num="167" count="1228" type="stmt"/>
            <line complexity="11" visibility="public" signature="equals(Type,Type) : boolean" num="173" count="3356" type="method"/>
            <line num="174" count="3359" type="stmt"/>
            <line falsecount="888" truecount="2472" num="174" type="cond"/>
            <line num="176" count="2476" type="stmt"/>
            <line num="178" count="888" type="stmt"/>
            <line falsecount="489" truecount="399" num="178" type="cond"/>
            <line num="180" count="399" type="stmt"/>
            <line num="182" count="489" type="stmt"/>
            <line falsecount="366" truecount="123" num="182" type="cond"/>
            <line num="183" count="123" type="stmt"/>
            <line falsecount="108" truecount="15" num="183" type="cond"/>
            <line num="184" count="15" type="stmt"/>
            <line num="188" count="108" type="stmt"/>
            <line num="189" count="108" type="stmt"/>
            <line num="190" count="108" type="stmt"/>
            <line num="194" count="366" type="stmt"/>
            <line falsecount="53" truecount="313" num="194" type="cond"/>
            <line num="195" count="313" type="stmt"/>
            <line falsecount="92" truecount="221" num="195" type="cond"/>
            <line num="196" count="221" type="stmt"/>
            <line num="199" count="92" type="stmt"/>
            <line num="200" count="92" type="stmt"/>
            <line num="201" count="92" type="stmt"/>
            <line num="203" count="53" type="stmt"/>
            <line falsecount="0" truecount="53" num="203" type="cond"/>
            <line num="204" count="53" type="stmt"/>
            <line falsecount="53" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="53" type="stmt"/>
            <line num="209" count="53" type="stmt"/>
            <line num="210" count="53" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="hashCodeOrZero(Object) : int" num="228" count="624" type="method"/>
            <line num="229" count="624" type="stmt"/>
            <line falsecount="501" truecount="123" num="229" type="cond"/>
            <line complexity="2" visibility="public" signature="typeToString(Type) : String" num="232" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="233" type="cond"/>
            <line complexity="10" visibility="package" signature="getGenericSupertype(Type,Class&lt;?&gt;,Class&lt;?&gt;) : Type" num="241" count="796" type="method"/>
            <line num="242" count="796" type="stmt"/>
            <line falsecount="378" truecount="418" num="242" type="cond"/>
            <line num="243" count="418" type="stmt"/>
            <line num="247" count="378" type="stmt"/>
            <line falsecount="33" truecount="345" num="247" type="cond"/>
            <line num="248" count="345" type="stmt"/>
            <line num="249" count="345" type="stmt"/>
            <line falsecount="39" truecount="354" num="249" type="cond"/>
            <line num="250" count="354" type="stmt"/>
            <line falsecount="125" truecount="229" num="250" type="cond"/>
            <line num="251" count="229" type="stmt"/>
            <line num="252" count="125" type="stmt"/>
            <line falsecount="48" truecount="77" num="252" type="cond"/>
            <line num="253" count="77" type="stmt"/>
            <line num="259" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="259" type="cond"/>
            <line num="260" count="72" type="stmt"/>
            <line falsecount="6" truecount="72" num="260" type="cond"/>
            <line num="261" count="72" type="stmt"/>
            <line num="262" count="72" type="stmt"/>
            <line falsecount="48" truecount="24" num="262" type="cond"/>
            <line num="263" count="24" type="stmt"/>
            <line num="264" count="48" type="stmt"/>
            <line falsecount="6" truecount="42" num="264" type="cond"/>
            <line num="265" count="42" type="stmt"/>
            <line num="267" count="6" type="stmt"/>
            <line num="272" count="6" type="stmt"/>
            <line complexity="2" visibility="package" signature="getSupertype(Type,Class&lt;?&gt;,Class&lt;?&gt;) : Type" num="282" count="272" type="method"/>
            <line num="283" count="272" type="stmt"/>
            <line falsecount="270" truecount="2" num="283" type="cond"/>
            <line num="285" count="2" type="stmt"/>
            <line num="287" count="272" type="stmt"/>
            <line num="288" count="272" type="stmt"/>
            <line complexity="2" visibility="public" signature="getArrayComponentType(Type) : Type" num="296" count="132" type="method"/>
            <line num="297" count="132" type="stmt"/>
            <line falsecount="0" truecount="132" num="297" type="cond"/>
            <line complexity="3" visibility="public" signature="getCollectionElementType(Type,Class&lt;?&gt;) : Type" num="306" count="161" type="method"/>
            <line num="307" count="161" type="stmt"/>
            <line num="309" count="161" type="stmt"/>
            <line falsecount="161" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="161" type="stmt"/>
            <line falsecount="2" truecount="159" num="312" type="cond"/>
            <line num="313" count="159" type="stmt"/>
            <line num="315" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMapKeyAndValueTypes(Type,Class&lt;?&gt;) : Type[]" num="322" count="115" type="method"/>
            <line num="328" count="115" type="stmt"/>
            <line falsecount="111" truecount="4" num="328" type="cond"/>
            <line num="329" count="4" type="stmt"/>
            <line num="332" count="111" type="stmt"/>
            <line num="334" count="111" type="stmt"/>
            <line falsecount="2" truecount="109" num="334" type="cond"/>
            <line num="335" count="109" type="stmt"/>
            <line num="336" count="109" type="stmt"/>
            <line num="338" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolve(Type,Class&lt;?&gt;,Type) : Type" num="341" count="1927" type="method"/>
            <line num="343" count="1927" type="stmt"/>
            <line complexity="22" visibility="private" signature="resolve(Type,Class&lt;?&gt;,Type,Map&lt;TypeVariable&lt;?&gt;, Type&gt;) : Type" num="346" count="3120" type="method"/>
            <line num="349" count="3120" type="stmt"/>
            <line num="350" count="3120" type="stmt"/>
            <line num="351" count="3437" type="stmt"/>
            <line falsecount="3026" truecount="411" num="351" type="cond"/>
            <line num="352" count="411" type="stmt"/>
            <line num="353" count="411" type="stmt"/>
            <line num="354" count="411" type="stmt"/>
            <line falsecount="405" truecount="6" num="354" type="cond"/>
            <line num="356" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="356" type="cond"/>
            <line num="360" count="405" type="stmt"/>
            <line num="361" count="405" type="stmt"/>
            <line falsecount="94" truecount="311" num="361" type="cond"/>
            <line num="362" count="311" type="stmt"/>
            <line num="365" count="405" type="stmt"/>
            <line num="366" count="405" type="stmt"/>
            <line falsecount="317" truecount="88" num="366" type="cond"/>
            <line num="367" count="88" type="stmt"/>
            <line num="370" count="3026" type="stmt"/>
            <line falsecount="2977" truecount="49" num="370" type="cond"/>
            <line num="371" count="49" type="stmt"/>
            <line num="372" count="49" type="stmt"/>
            <line num="373" count="49" type="stmt"/>
            <line num="374" count="49" type="stmt"/>
            <line falsecount="0" truecount="49" num="374" type="cond"/>
            <line num="377" count="49" type="stmt"/>
            <line num="379" count="2977" type="stmt"/>
            <line falsecount="2956" truecount="21" num="379" type="cond"/>
            <line num="380" count="21" type="stmt"/>
            <line num="381" count="21" type="stmt"/>
            <line num="382" count="21" type="stmt"/>
            <line num="383" count="21" type="stmt"/>
            <line falsecount="21" truecount="0" num="383" type="cond"/>
            <line num="386" count="21" type="stmt"/>
            <line num="388" count="2956" type="stmt"/>
            <line falsecount="2501" truecount="455" num="388" type="cond"/>
            <line num="389" count="455" type="stmt"/>
            <line num="390" count="455" type="stmt"/>
            <line num="391" count="455" type="stmt"/>
            <line num="392" count="455" type="stmt"/>
            <line num="394" count="455" type="stmt"/>
            <line num="395" count="455" type="stmt"/>
            <line falsecount="455" truecount="595" num="395" type="cond"/>
            <line num="396" count="595" type="stmt"/>
            <line num="397" count="595" type="stmt"/>
            <line falsecount="373" truecount="222" num="397" type="cond"/>
            <line num="398" count="222" type="stmt"/>
            <line falsecount="17" truecount="205" num="398" type="cond"/>
            <line num="399" count="205" type="stmt"/>
            <line num="400" count="205" type="stmt"/>
            <line num="402" count="222" type="stmt"/>
            <line num="406" count="455" type="stmt"/>
            <line falsecount="250" truecount="205" num="406" type="cond"/>
            <line num="409" count="455" type="stmt"/>
            <line num="411" count="2501" type="stmt"/>
            <line falsecount="2428" truecount="73" num="411" type="cond"/>
            <line num="412" count="73" type="stmt"/>
            <line num="413" count="73" type="stmt"/>
            <line num="414" count="73" type="stmt"/>
            <line num="416" count="73" type="stmt"/>
            <line falsecount="48" truecount="25" num="416" type="cond"/>
            <line num="417" count="25" type="stmt"/>
            <line num="418" count="25" type="stmt"/>
            <line falsecount="12" truecount="13" num="418" type="cond"/>
            <line num="419" count="13" type="stmt"/>
            <line num="420" count="13" type="stmt"/>
            <line num="422" count="48" type="stmt"/>
            <line falsecount="0" truecount="48" num="422" type="cond"/>
            <line num="423" count="48" type="stmt"/>
            <line num="424" count="48" type="stmt"/>
            <line falsecount="27" truecount="21" num="424" type="cond"/>
            <line num="425" count="21" type="stmt"/>
            <line num="426" count="21" type="stmt"/>
            <line num="429" count="39" type="stmt"/>
            <line num="430" count="39" type="stmt"/>
            <line num="433" count="2428" type="stmt"/>
            <line num="437" count="3114" type="stmt"/>
            <line falsecount="2803" truecount="311" num="437" type="cond"/>
            <line num="438" count="311" type="stmt"/>
            <line num="440" count="3114" type="stmt"/>
            <line complexity="3" visibility="package" signature="resolveTypeVariable(Type,Class&lt;?&gt;,TypeVariable&lt;?&gt;) : Type" num="443" count="405" type="method"/>
            <line num="444" count="405" type="stmt"/>
            <line num="447" count="405" type="stmt"/>
            <line falsecount="405" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="405" type="stmt"/>
            <line num="452" count="405" type="stmt"/>
            <line falsecount="88" truecount="317" num="452" type="cond"/>
            <line num="453" count="317" type="stmt"/>
            <line num="454" count="317" type="stmt"/>
            <line num="457" count="88" type="stmt"/>
            <line complexity="3" visibility="private" signature="indexOf(Object[],Object) : int" num="460" count="317" type="method"/>
            <line num="461" count="317" type="stmt"/>
            <line falsecount="0" truecount="365" num="461" type="cond"/>
            <line num="462" count="365" type="stmt"/>
            <line falsecount="48" truecount="317" num="462" type="cond"/>
            <line num="463" count="317" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="declaringClassOf(TypeVariable&lt;?&gt;) : Class&lt;?&gt;" num="473" count="405" type="method"/>
            <line num="474" count="405" type="stmt"/>
            <line num="475" count="405" type="stmt"/>
            <line falsecount="0" truecount="405" num="475" type="cond"/>
            <line complexity="1" visibility="package" signature="checkNotPrimitive(Type) : void" num="480" count="1146" type="method"/>
            <line num="481" count="1146" type="stmt"/>
            <line complexity="4" visibility="public" signature="ParameterizedTypeImpl(Type,Type,Type)" num="489" count="779" type="method"/>
            <line num="491" count="779" type="stmt"/>
            <line falsecount="0" truecount="779" num="491" type="cond"/>
            <line num="492" count="779" type="stmt"/>
            <line num="493" count="779" type="stmt"/>
            <line num="495" count="779" type="stmt"/>
            <line num="498" count="778" type="stmt"/>
            <line falsecount="131" truecount="647" num="498" type="cond"/>
            <line num="499" count="778" type="stmt"/>
            <line num="500" count="778" type="stmt"/>
            <line num="501" count="778" type="stmt"/>
            <line falsecount="778" truecount="978" num="501" type="cond"/>
            <line num="502" count="978" type="stmt"/>
            <line num="503" count="978" type="stmt"/>
            <line num="504" count="978" type="stmt"/>
            <line complexity="1" visibility="public" signature="getActualTypeArguments() : Type[]" num="508" count="1159" type="method"/>
            <line num="509" count="1159" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawType() : Type" num="512" count="1083" type="method"/>
            <line num="513" count="1083" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOwnerType() : Type" num="516" count="596" type="method"/>
            <line num="517" count="596" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="520" count="51" type="method"/>
            <line num="521" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="525" count="624" type="method"/>
            <line num="526" count="624" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="531" count="0" type="method"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="533" type="cond"/>
            <line num="534" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
            <line num="540" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericArrayTypeImpl(Type)" num="551" count="229" type="method"/>
            <line num="552" count="229" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGenericComponentType() : Type" num="555" count="568" type="method"/>
            <line num="556" count="568" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="559" count="3" type="method"/>
            <line num="560" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="564" count="195" type="method"/>
            <line num="565" count="195" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="568" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="WildcardTypeImpl(Type[],Type[])" num="584" count="168" type="method"/>
            <line num="585" count="168" type="stmt"/>
            <line num="586" count="168" type="stmt"/>
            <line num="588" count="168" type="stmt"/>
            <line falsecount="137" truecount="31" num="588" type="cond"/>
            <line num="589" count="31" type="stmt"/>
            <line num="590" count="31" type="stmt"/>
            <line num="591" count="31" type="stmt"/>
            <line num="592" count="31" type="stmt"/>
            <line num="593" count="31" type="stmt"/>
            <line num="596" count="137" type="stmt"/>
            <line num="597" count="137" type="stmt"/>
            <line num="598" count="137" type="stmt"/>
            <line num="599" count="137" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBounds() : Type[]" num="603" count="242" type="method"/>
            <line num="604" count="242" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLowerBounds() : Type[]" num="607" count="207" type="method"/>
            <line num="608" count="207" type="stmt"/>
            <line falsecount="165" truecount="42" num="608" type="cond"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="611" count="63" type="method"/>
            <line num="612" count="63" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="616" count="77" type="method"/>
            <line num="618" count="77" type="stmt"/>
            <line falsecount="65" truecount="12" num="618" type="cond"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="622" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="625" type="cond"/>
            <line num="626" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java" name="ConstructorConstructor.java">
            <metrics coveredelements="115" coveredconditionals="31" complexity="43" loc="238" coveredmethods="19" methods="20" elements="126" classes="1" ncloc="192" statements="72" conditionals="34" coveredstatements="65"/>
            <class name="ConstructorConstructor">
               <metrics coveredelements="115" coveredconditionals="31" complexity="43" coveredmethods="19" methods="20" elements="126" statements="72" conditionals="34" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstructorConstructor(Map&lt;Type, InstanceCreator&lt;?&gt;&gt;)" num="53" count="832" type="method"/>
            <line num="54" count="832" type="stmt"/>
            <line complexity="5" visibility="public" signature="get(TypeToken&lt;T&gt;) : ObjectConstructor&lt;T&gt;" num="57" count="767" type="method"/>
            <line num="58" count="767" type="stmt"/>
            <line num="59" count="770" type="stmt"/>
            <line num="63" count="768" type="stmt"/>
            <line num="65" count="769" type="stmt"/>
            <line falsecount="758" truecount="11" num="65" type="cond"/>
            <line num="66" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="67" count="10" type="method"/>
            <line num="68" count="10" type="stmt"/>
            <line num="74" count="757" type="stmt"/>
            <line num="77" count="758" type="stmt"/>
            <line falsecount="756" truecount="1" num="77" type="cond"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="79" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="85" count="756" type="stmt"/>
            <line num="86" count="757" type="stmt"/>
            <line falsecount="368" truecount="390" num="86" type="cond"/>
            <line num="87" count="389" type="stmt"/>
            <line num="90" count="368" type="stmt"/>
            <line num="91" count="368" type="stmt"/>
            <line falsecount="153" truecount="215" num="91" type="cond"/>
            <line num="92" count="215" type="stmt"/>
            <line num="96" count="153" type="stmt"/>
            <line complexity="3" visibility="private" signature="newDefaultConstructor(Class&lt;? super T&gt;) : ObjectConstructor&lt;T&gt;" num="99" count="755" type="method"/>
            <line num="100" count="757" type="stmt"/>
            <line num="101" count="756" type="stmt"/>
            <line num="102" count="389" type="stmt"/>
            <line falsecount="0" truecount="388" num="102" type="cond"/>
            <line num="103" count="388" type="stmt"/>
            <line num="105" count="390" type="stmt"/>
            <line complexity="4" visibility="public" signature="construct() : T" num="106" count="293" type="method"/>
            <line num="108" count="298" type="stmt"/>
            <line num="109" count="297" type="stmt"/>
            <line num="110" count="297" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="125" count="368" type="stmt"/>
            <line complexity="12" visibility="private" signature="newDefaultImplementationConstructor(Type,Class&lt;? super T&gt;) : ObjectConstructor&lt;T&gt;" num="133" count="368" type="method"/>
            <line num="136" count="368" type="stmt"/>
            <line falsecount="241" truecount="127" num="136" type="cond"/>
            <line num="137" count="127" type="stmt"/>
            <line falsecount="125" truecount="2" num="137" type="cond"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="139" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="143" count="125" type="stmt"/>
            <line falsecount="121" truecount="4" num="143" type="cond"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="construct() : T" num="145" count="1" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="147" type="cond"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="149" type="cond"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="121" type="stmt"/>
            <line falsecount="111" truecount="10" num="159" type="cond"/>
            <line num="160" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="161" count="6" type="method"/>
            <line num="162" count="6" type="stmt"/>
            <line num="165" count="111" type="stmt"/>
            <line falsecount="107" truecount="4" num="165" type="cond"/>
            <line num="166" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="167" count="2" type="method"/>
            <line num="168" count="2" type="stmt"/>
            <line num="172" count="107" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="173" count="60" type="method"/>
            <line num="174" count="60" type="stmt"/>
            <line num="180" count="241" type="stmt"/>
            <line falsecount="153" truecount="88" num="180" type="cond"/>
            <line num="181" count="88" type="stmt"/>
            <line falsecount="87" truecount="1" num="181" type="cond"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="183" count="1" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="187" count="87" type="stmt"/>
            <line falsecount="86" truecount="1" num="187" type="cond"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="189" count="1" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line num="193" count="86" type="stmt"/>
            <line falsecount="85" truecount="1" num="193" type="cond"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="195" count="1" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="199" count="85" type="stmt"/>
            <line falsecount="70" truecount="15" num="199" type="cond"/>
            <line num="201" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="202" count="12" type="method"/>
            <line num="203" count="12" type="stmt"/>
            <line num="207" count="70" type="stmt"/>
            <line complexity="1" visibility="public" signature="construct() : T" num="208" count="24" type="method"/>
            <line num="209" count="24" type="stmt"/>
            <line num="215" count="153" type="stmt"/>
            <line complexity="1" visibility="private" signature="newUnsafeAllocator(Type,Class&lt;? super T&gt;) : ObjectConstructor&lt;T&gt;" num="218" count="153" type="method"/>
            <line num="220" count="153" type="stmt"/>
            <line complexity="2" visibility="public" signature="construct() : T" num="222" count="48" type="method"/>
            <line num="224" count="48" type="stmt"/>
            <line num="225" count="48" type="stmt"/>
            <line num="226" count="48" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/Excluder.java" name="Excluder.java">
            <metrics coveredelements="158" coveredconditionals="50" complexity="53" loc="260" coveredmethods="20" methods="20" elements="162" classes="1" ncloc="194" statements="90" conditionals="52" coveredstatements="88"/>
            <class name="Excluder">
               <metrics coveredelements="158" coveredconditionals="50" complexity="53" coveredmethods="20" methods="20" elements="162" statements="90" conditionals="52" coveredstatements="88"/>
            </class>
            <line complexity="2" visibility="protected" signature="clone() : Excluder" num="61" count="50" type="method"/>
            <line num="62" count="50" type="stmt"/>
            <line num="63" count="50" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withVersion(double) : Excluder" num="69" count="18" type="method"/>
            <line num="70" count="18" type="stmt"/>
            <line num="71" count="18" type="stmt"/>
            <line num="72" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="withModifiers(int) : Excluder" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="disableInnerClassSerialization() : Excluder" num="84" count="6" type="method"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeFieldsWithoutExposeAnnotation() : Excluder" num="90" count="15" type="method"/>
            <line num="91" count="15" type="stmt"/>
            <line num="92" count="15" type="stmt"/>
            <line num="93" count="15" type="stmt"/>
            <line complexity="3" visibility="public" signature="withExclusionStrategy(ExclusionStrategy,boolean,boolean) : Excluder" num="96" count="9" type="method"/>
            <line num="98" count="9" type="stmt"/>
            <line num="99" count="9" type="stmt"/>
            <line falsecount="5" truecount="4" num="99" type="cond"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="103" count="9" type="stmt"/>
            <line falsecount="4" truecount="5" num="103" type="cond"/>
            <line num="104" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line num="108" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="111" count="2172" type="method"/>
            <line num="112" count="2172" type="stmt"/>
            <line num="113" count="2173" type="stmt"/>
            <line num="115" count="2173" type="stmt"/>
            <line num="116" count="2173" type="stmt"/>
            <line num="118" count="2174" type="stmt"/>
            <line falsecount="14" truecount="2160" num="118" type="cond"/>
            <line num="119" count="2160" type="stmt"/>
            <line num="122" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : T" num="126" count="4" type="method"/>
            <line num="127" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="127" type="cond"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,T) : void" num="134" count="8" type="method"/>
            <line num="135" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="135" type="cond"/>
            <line num="136" count="5" type="stmt"/>
            <line num="137" count="5" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="delegate() : TypeAdapter&lt;T&gt;" num="142" count="5" type="method"/>
            <line num="143" count="5" type="stmt"/>
            <line num="144" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="144" type="cond"/>
            <line complexity="15" visibility="public" signature="excludeField(Field,boolean) : boolean" num="151" count="3240" type="method"/>
            <line num="152" count="3240" type="stmt"/>
            <line falsecount="2327" truecount="912" num="152" type="cond"/>
            <line num="153" count="912" type="stmt"/>
            <line num="156" count="2327" type="stmt"/>
            <line falsecount="2310" truecount="17" num="156" type="cond"/>
            <line num="158" count="17" type="stmt"/>
            <line num="161" count="2310" type="stmt"/>
            <line falsecount="2290" truecount="20" num="161" type="cond"/>
            <line num="162" count="20" type="stmt"/>
            <line num="165" count="2291" type="stmt"/>
            <line falsecount="2228" truecount="62" num="165" type="cond"/>
            <line num="166" count="62" type="stmt"/>
            <line num="167" count="62" type="stmt"/>
            <line falsecount="22" truecount="22" num="167" type="cond"/>
            <line falsecount="25" truecount="37" num="167" type="cond"/>
            <line num="168" count="37" type="stmt"/>
            <line num="172" count="2253" type="stmt"/>
            <line falsecount="2252" truecount="1" num="172" type="cond"/>
            <line num="173" count="1" type="stmt"/>
            <line num="176" count="2249" type="stmt"/>
            <line falsecount="2252" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="2252" type="stmt"/>
            <line falsecount="1124" truecount="1129" num="180" type="cond"/>
            <line num="181" count="2252" type="stmt"/>
            <line falsecount="2235" truecount="16" num="181" type="cond"/>
            <line num="182" count="16" type="stmt"/>
            <line num="183" count="16" type="stmt"/>
            <line num="184" count="16" type="stmt"/>
            <line falsecount="11" truecount="5" num="184" type="cond"/>
            <line num="185" count="5" type="stmt"/>
            <line num="190" count="2247" type="stmt"/>
            <line complexity="6" visibility="private" signature="excludeClassChecks(Class&lt;?&gt;) : boolean" num="193" count="5406" type="method"/>
            <line num="194" count="5405" type="stmt"/>
            <line falsecount="5405" truecount="3" num="194" type="cond"/>
            <line num="195" count="3" type="stmt"/>
            <line num="198" count="5404" type="stmt"/>
            <line falsecount="5402" truecount="2" num="198" type="cond"/>
            <line num="199" count="2" type="stmt"/>
            <line num="202" count="5404" type="stmt"/>
            <line falsecount="5404" truecount="2" num="202" type="cond"/>
            <line num="203" count="2" type="stmt"/>
            <line num="206" count="5403" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeClass(Class&lt;?&gt;,boolean) : boolean" num="209" count="3234" type="method"/>
            <line num="210" count="3233" type="stmt"/>
            <line complexity="3" visibility="private" signature="excludeClassInStrategy(Class&lt;?&gt;,boolean) : boolean" num="214" count="7568" type="method"/>
            <line num="215" count="7569" type="stmt"/>
            <line falsecount="3784" truecount="3785" num="215" type="cond"/>
            <line num="216" count="7569" type="stmt"/>
            <line num="217" count="58" type="stmt"/>
            <line falsecount="44" truecount="14" num="217" type="cond"/>
            <line num="218" count="14" type="stmt"/>
            <line num="221" count="7554" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAnonymousOrNonStaticLocal(Class&lt;?&gt;) : boolean" num="224" count="7654" type="method"/>
            <line num="225" count="7656" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInnerClass(Class&lt;?&gt;) : boolean" num="229" count="5" type="method"/>
            <line num="230" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStatic(Class&lt;?&gt;) : boolean" num="233" count="7601" type="method"/>
            <line num="234" count="7602" type="stmt"/>
            <line complexity="1" visibility="private" signature="isValidVersion(Since,Until) : boolean" num="237" count="199" type="method"/>
            <line num="238" count="199" type="stmt"/>
            <line complexity="3" visibility="private" signature="isValidSince(Since) : boolean" num="241" count="199" type="method"/>
            <line num="242" count="199" type="stmt"/>
            <line falsecount="161" truecount="38" num="242" type="cond"/>
            <line num="243" count="38" type="stmt"/>
            <line num="244" count="38" type="stmt"/>
            <line falsecount="26" truecount="12" num="244" type="cond"/>
            <line num="245" count="12" type="stmt"/>
            <line num="248" count="187" type="stmt"/>
            <line complexity="3" visibility="private" signature="isValidUntil(Until) : boolean" num="251" count="187" type="method"/>
            <line num="252" count="187" type="stmt"/>
            <line falsecount="165" truecount="22" num="252" type="cond"/>
            <line num="253" count="22" type="stmt"/>
            <line num="254" count="22" type="stmt"/>
            <line falsecount="14" truecount="8" num="254" type="cond"/>
            <line num="255" count="8" type="stmt"/>
            <line num="258" count="179" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/JavaVersion.java" name="JavaVersion.java">
            <metrics coveredelements="41" coveredconditionals="9" complexity="15" loc="92" coveredmethods="6" methods="7" elements="43" classes="1" ncloc="54" statements="26" conditionals="10" coveredstatements="26"/>
            <class name="JavaVersion">
               <metrics coveredelements="41" coveredconditionals="9" complexity="15" coveredmethods="6" methods="7" elements="43" statements="26" conditionals="10" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="private" signature="determineMajorJavaVersion() : int" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="3" visibility="package" signature="getMajorJavaVersion(String) : int" num="34" count="18" type="method"/>
            <line num="35" count="18" type="stmt"/>
            <line num="36" count="18" type="stmt"/>
            <line falsecount="14" truecount="4" num="36" type="cond"/>
            <line num="37" count="4" type="stmt"/>
            <line num="39" count="18" type="stmt"/>
            <line falsecount="17" truecount="1" num="39" type="cond"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="17" type="stmt"/>
            <line complexity="4" visibility="private" signature="parseDotted(String) : int" num="46" count="18" type="method"/>
            <line num="47" count="18" type="stmt"/>
            <line num="48" count="18" type="stmt"/>
            <line num="49" count="18" type="stmt"/>
            <line num="50" count="14" type="stmt"/>
            <line falsecount="5" truecount="9" num="50" type="cond"/>
            <line num="51" count="9" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractBeginningInt(String) : int" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line falsecount="0" truecount="7" num="63" type="cond"/>
            <line num="64" count="7" type="stmt"/>
            <line num="65" count="7" type="stmt"/>
            <line falsecount="4" truecount="3" num="65" type="cond"/>
            <line num="66" count="3" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMajorJavaVersion() : int" num="80" count="3" type="method"/>
            <line num="81" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJava9OrLater() : boolean" num="87" count="60" type="method"/>
            <line num="88" count="60" type="stmt"/>
            <line complexity="1" visibility="private" signature="JavaVersion()" num="91" count="0" type="method"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java" name="JsonReaderInternalAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonReaderInternalAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java" name="LazilyParsedNumber.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="14" loc="96" coveredmethods="8" methods="9" elements="33" classes="1" ncloc="59" statements="20" conditionals="4" coveredstatements="14"/>
            <class name="LazilyParsedNumber">
               <metrics coveredelements="24" coveredconditionals="2" complexity="14" coveredmethods="8" methods="9" elements="33" statements="20" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="LazilyParsedNumber(String)" num="30" count="87" type="method"/>
            <line num="31" count="87" type="stmt"/>
            <line complexity="3" visibility="public" signature="intValue() : int" num="34" count="29" type="method"/>
            <line num="36" count="29" type="stmt"/>
            <line num="37" count="29" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="longValue() : long" num="47" count="18" type="method"/>
            <line num="49" count="18" type="stmt"/>
            <line num="50" count="18" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatValue() : float" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : double" num="61" count="14" type="method"/>
            <line num="63" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="4" type="method"/>
            <line num="68" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeReplace() : Object" num="76" count="3" type="method"/>
            <line num="77" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="80" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="85" count="1" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="90" type="cond"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java" name="LinkedHashTreeMap.java">
            <metrics coveredelements="421" coveredconditionals="120" complexity="155" loc="864" coveredmethods="37" methods="56" elements="574" classes="7" ncloc="593" statements="340" conditionals="178" coveredstatements="264"/>
            <class name="LinkedHashTreeMap">
               <metrics coveredelements="293" coveredconditionals="97" complexity="100" coveredmethods="19" methods="25" elements="374" statements="215" conditionals="134" coveredstatements="177"/>
            </class>
            <class name="LinkedHashTreeMap.Node">
               <metrics coveredelements="21" coveredconditionals="2" complexity="17" coveredmethods="5" methods="10" elements="58" statements="34" conditionals="14" coveredstatements="14"/>
            </class>
            <class name="LinkedHashTreeMap.AvlIterator">
               <metrics coveredelements="24" coveredconditionals="6" complexity="5" coveredmethods="2" methods="2" elements="24" statements="16" conditionals="6" coveredstatements="16"/>
            </class>
            <class name="LinkedHashTreeMap.AvlBuilder">
               <metrics coveredelements="58" coveredconditionals="12" complexity="12" coveredmethods="3" methods="3" elements="61" statements="44" conditionals="14" coveredstatements="43"/>
            </class>
            <class name="LinkedHashTreeMap.LinkedTreeMapIterator">
               <metrics coveredelements="17" coveredconditionals="3" complexity="7" coveredmethods="4" methods="4" elements="23" statements="13" conditionals="6" coveredstatements="10"/>
            </class>
            <class name="LinkedHashTreeMap.EntrySet">
               <metrics coveredelements="4" coveredconditionals="0" complexity="8" coveredmethods="2" methods="6" elements="22" statements="12" conditionals="4" coveredstatements="2"/>
            </class>
            <class name="LinkedHashTreeMap.KeySet">
               <metrics coveredelements="4" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="compare(Comparable,Comparable) : int" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LinkedHashTreeMap()" num="59" count="12" type="method"/>
            <line num="61" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="LinkedHashTreeMap(Comparator&lt;? super K&gt;)" num="71" count="12" type="method"/>
            <line num="73" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="73" type="cond"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line num="78" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="81" count="7" type="method"/>
            <line num="82" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(Object) : V" num="85" count="1010" type="method"/>
            <line num="86" count="1010" type="stmt"/>
            <line num="87" count="1010" type="stmt"/>
            <line falsecount="0" truecount="1010" num="87" type="cond"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="90" count="1003" type="method"/>
            <line num="91" count="1003" type="stmt"/>
            <line complexity="2" visibility="public" signature="put(K,V) : V" num="94" count="1026" type="method"/>
            <line num="95" count="1026" type="stmt"/>
            <line falsecount="1025" truecount="1" num="95" type="cond"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1025" type="stmt"/>
            <line num="99" count="1024" type="stmt"/>
            <line num="100" count="1024" type="stmt"/>
            <line num="101" count="1024" type="stmt"/>
            <line complexity="2" visibility="public" signature="clear() : void" num="104" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="111" type="cond"/>
            <line num="112" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove(Object) : V" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line complexity="13" visibility="package" signature="find(K,boolean) : Node&lt;K, V&gt;" num="131" count="3037" type="method"/>
            <line num="132" count="3037" type="stmt"/>
            <line num="133" count="3037" type="stmt"/>
            <line num="134" count="3037" type="stmt"/>
            <line num="135" count="3037" type="stmt"/>
            <line num="136" count="3037" type="stmt"/>
            <line num="137" count="3037" type="stmt"/>
            <line num="139" count="3037" type="stmt"/>
            <line falsecount="621" truecount="2416" num="139" type="cond"/>
            <line num="141" count="2416" type="stmt"/>
            <line falsecount="0" truecount="2416" num="142" type="cond"/>
            <line num="146" count="2415" type="stmt"/>
            <line num="147" count="2934" type="stmt"/>
            <line falsecount="0" truecount="2934" num="147" type="cond"/>
            <line num="152" count="2934" type="stmt"/>
            <line falsecount="922" truecount="2012" num="152" type="cond"/>
            <line num="153" count="2012" type="stmt"/>
            <line num="157" count="922" type="stmt"/>
            <line falsecount="613" truecount="309" num="157" type="cond"/>
            <line num="158" count="922" type="stmt"/>
            <line falsecount="519" truecount="403" num="158" type="cond"/>
            <line num="159" count="403" type="stmt"/>
            <line num="162" count="519" type="stmt"/>
            <line num="167" count="1024" type="stmt"/>
            <line falsecount="1024" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="1024" type="stmt"/>
            <line num="173" count="1024" type="stmt"/>
            <line num="174" count="1024" type="stmt"/>
            <line falsecount="403" truecount="621" num="174" type="cond"/>
            <line num="176" count="621" type="stmt"/>
            <line falsecount="620" truecount="1" num="176" type="cond"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="620" type="stmt"/>
            <line num="180" count="620" type="stmt"/>
            <line num="182" count="403" type="stmt"/>
            <line num="183" count="403" type="stmt"/>
            <line falsecount="224" truecount="179" num="183" type="cond"/>
            <line num="184" count="179" type="stmt"/>
            <line num="186" count="224" type="stmt"/>
            <line num="188" count="403" type="stmt"/>
            <line num="191" count="1023" type="stmt"/>
            <line falsecount="1016" truecount="7" num="191" type="cond"/>
            <line num="192" count="7" type="stmt"/>
            <line num="194" count="1023" type="stmt"/>
            <line num="196" count="1023" type="stmt"/>
            <line complexity="3" visibility="package" signature="findByObject(Object) : Node&lt;K, V&gt;" num="199" count="2013" type="method"/>
            <line num="201" count="2013" type="stmt"/>
            <line num="202" count="2013" type="stmt"/>
            <line falsecount="1" truecount="2012" num="202" type="cond"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="findByEntry(Entry&lt;?, ?&gt;) : Node&lt;K, V&gt;" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line complexity="1" visibility="private" signature="equal(Object,Object) : boolean" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="secondaryHash(int) : int" num="233" count="3037" type="method"/>
            <line num="235" count="3037" type="stmt"/>
            <line num="236" count="3037" type="stmt"/>
            <line complexity="9" visibility="package" signature="removeInternal(Node&lt;K, V&gt;,boolean) : void" num="245" count="1" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="246" type="cond"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="255" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="removeInternalByKey(Object) : Node&lt;K, V&gt;" num="303" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="replaceInParent(Node&lt;K, V&gt;,Node&lt;K, V&gt;) : void" num="311" count="68" type="method"/>
            <line num="312" count="68" type="stmt"/>
            <line num="313" count="68" type="stmt"/>
            <line num="314" count="68" type="stmt"/>
            <line falsecount="1" truecount="67" num="314" type="cond"/>
            <line num="315" count="67" type="stmt"/>
            <line num="318" count="68" type="stmt"/>
            <line falsecount="46" truecount="22" num="318" type="cond"/>
            <line num="319" count="22" type="stmt"/>
            <line falsecount="17" truecount="5" num="319" type="cond"/>
            <line num="320" count="5" type="stmt"/>
            <line falsecount="0" truecount="17" num="322" type="cond"/>
            <line num="323" count="17" type="stmt"/>
            <line num="326" count="46" type="stmt"/>
            <line num="327" count="46" type="stmt"/>
            <line complexity="25" visibility="private" signature="rebalance(Node&lt;K, V&gt;,boolean) : void" num="338" count="404" type="method"/>
            <line num="339" count="404" type="stmt"/>
            <line falsecount="333" truecount="470" num="339" type="cond"/>
            <line num="340" count="470" type="stmt"/>
            <line num="341" count="470" type="stmt"/>
            <line num="342" count="470" type="stmt"/>
            <line falsecount="253" truecount="217" num="342" type="cond"/>
            <line num="343" count="470" type="stmt"/>
            <line falsecount="171" truecount="299" num="343" type="cond"/>
            <line num="345" count="470" type="stmt"/>
            <line num="346" count="470" type="stmt"/>
            <line falsecount="431" truecount="39" num="346" type="cond"/>
            <line num="347" count="39" type="stmt"/>
            <line num="348" count="39" type="stmt"/>
            <line num="349" count="39" type="stmt"/>
            <line falsecount="16" truecount="23" num="349" type="cond"/>
            <line num="350" count="39" type="stmt"/>
            <line falsecount="22" truecount="17" num="350" type="cond"/>
            <line num="352" count="39" type="stmt"/>
            <line num="353" count="39" type="stmt"/>
            <line falsecount="16" truecount="23" num="353" type="cond"/>
            <line num="354" count="23" type="stmt"/>
            <line falsecount="0" truecount="16" num="356" type="cond"/>
            <line num="357" count="16" type="stmt"/>
            <line num="358" count="16" type="stmt"/>
            <line num="360" count="39" type="stmt"/>
            <line falsecount="0" truecount="39" num="360" type="cond"/>
            <line num="361" count="39" type="stmt"/>
            <line num="364" count="431" type="stmt"/>
            <line falsecount="424" truecount="7" num="364" type="cond"/>
            <line num="365" count="7" type="stmt"/>
            <line num="366" count="7" type="stmt"/>
            <line num="367" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="367" type="cond"/>
            <line num="368" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="368" type="cond"/>
            <line num="370" count="7" type="stmt"/>
            <line num="371" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="371" type="cond"/>
            <line num="372" count="2" type="stmt"/>
            <line falsecount="0" truecount="5" num="374" type="cond"/>
            <line num="375" count="5" type="stmt"/>
            <line num="376" count="5" type="stmt"/>
            <line num="378" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="378" type="cond"/>
            <line num="379" count="7" type="stmt"/>
            <line num="382" count="424" type="stmt"/>
            <line falsecount="399" truecount="25" num="382" type="cond"/>
            <line num="383" count="25" type="stmt"/>
            <line num="384" count="25" type="stmt"/>
            <line falsecount="0" truecount="25" num="384" type="cond"/>
            <line num="385" count="25" type="stmt"/>
            <line falsecount="0" truecount="399" num="389" type="cond"/>
            <line num="390" count="399" type="stmt"/>
            <line num="391" count="399" type="stmt"/>
            <line falsecount="399" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="rotateLeft(Node&lt;K, V&gt;) : void" num="401" count="44" type="method"/>
            <line num="402" count="44" type="stmt"/>
            <line num="403" count="44" type="stmt"/>
            <line num="404" count="44" type="stmt"/>
            <line num="405" count="44" type="stmt"/>
            <line num="408" count="44" type="stmt"/>
            <line num="409" count="44" type="stmt"/>
            <line falsecount="43" truecount="1" num="409" type="cond"/>
            <line num="410" count="1" type="stmt"/>
            <line num="413" count="44" type="stmt"/>
            <line num="416" count="44" type="stmt"/>
            <line num="417" count="44" type="stmt"/>
            <line num="420" count="44" type="stmt"/>
            <line falsecount="43" truecount="1" num="420" type="cond"/>
            <line falsecount="43" truecount="1" num="421" type="cond"/>
            <line num="422" count="44" type="stmt"/>
            <line falsecount="5" truecount="39" num="423" type="cond"/>
            <line complexity="5" visibility="private" signature="rotateRight(Node&lt;K, V&gt;) : void" num="429" count="23" type="method"/>
            <line num="430" count="23" type="stmt"/>
            <line num="431" count="23" type="stmt"/>
            <line num="432" count="23" type="stmt"/>
            <line num="433" count="23" type="stmt"/>
            <line num="436" count="23" type="stmt"/>
            <line num="437" count="23" type="stmt"/>
            <line falsecount="23" truecount="0" num="437" type="cond"/>
            <line num="438" count="0" type="stmt"/>
            <line num="441" count="23" type="stmt"/>
            <line num="444" count="23" type="stmt"/>
            <line num="445" count="23" type="stmt"/>
            <line num="448" count="23" type="stmt"/>
            <line falsecount="23" truecount="0" num="448" type="cond"/>
            <line falsecount="23" truecount="0" num="449" type="cond"/>
            <line num="450" count="23" type="stmt"/>
            <line falsecount="16" truecount="7" num="451" type="cond"/>
            <line complexity="2" visibility="public" signature="entrySet() : Set&lt;Entry&lt;K, V&gt;&gt;" num="457" count="6" type="method"/>
            <line num="458" count="6" type="stmt"/>
            <line num="459" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="459" type="cond"/>
            <line complexity="2" visibility="public" signature="keySet() : Set&lt;K&gt;" num="462" count="3" type="method"/>
            <line num="463" count="3" type="stmt"/>
            <line num="464" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="464" type="cond"/>
            <line complexity="1" visibility="package" signature="Node()" num="479" count="13" type="method"/>
            <line num="480" count="13" type="stmt"/>
            <line num="481" count="13" type="stmt"/>
            <line num="482" count="13" type="stmt"/>
            <line complexity="1" visibility="package" signature="Node(Node&lt;K, V&gt;,K,int,Node&lt;K, V&gt;,Node&lt;K, V&gt;)" num="486" count="1253" type="method"/>
            <line num="487" count="1253" type="stmt"/>
            <line num="488" count="1253" type="stmt"/>
            <line num="489" count="1253" type="stmt"/>
            <line num="490" count="1253" type="stmt"/>
            <line num="491" count="1253" type="stmt"/>
            <line num="492" count="1253" type="stmt"/>
            <line num="493" count="1253" type="stmt"/>
            <line num="494" count="1253" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKey() : K" num="497" count="31" type="method"/>
            <line num="498" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : V" num="501" count="11" type="method"/>
            <line num="502" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(V) : V" num="505" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line falsecount="0" truecount="0" num="516" type="cond"/>
            <line num="518" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="521" count="8" type="method"/>
            <line num="522" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="522" type="cond"/>
            <line falsecount="8" truecount="0" num="523" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="526" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="first() : Node&lt;K, V&gt;" num="533" count="0" type="method"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="last() : Node&lt;K, V&gt;" num="546" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="549" type="cond"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="doubleCapacity() : void" num="557" count="7" type="method"/>
            <line num="558" count="7" type="stmt"/>
            <line num="559" count="7" type="stmt"/>
            <line complexity="9" visibility="package" signature="doubleCapacity(Node&lt;K, V&gt;[]) : Node&lt;K, V&gt;[]" num="566" count="9" type="method"/>
            <line num="568" count="9" type="stmt"/>
            <line num="569" count="9" type="stmt"/>
            <line num="571" count="9" type="stmt"/>
            <line num="572" count="9" type="stmt"/>
            <line num="573" count="9" type="stmt"/>
            <line num="576" count="9" type="stmt"/>
            <line falsecount="9" truecount="2034" num="576" type="cond"/>
            <line num="577" count="2034" type="stmt"/>
            <line num="578" count="2034" type="stmt"/>
            <line falsecount="1113" truecount="921" num="578" type="cond"/>
            <line num="579" count="921" type="stmt"/>
            <line num="583" count="1113" type="stmt"/>
            <line num="584" count="1113" type="stmt"/>
            <line num="585" count="1113" type="stmt"/>
            <line num="586" count="1113" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="1548" type="stmt"/>
            <line falsecount="768" truecount="780" num="587" type="cond"/>
            <line num="588" count="780" type="stmt"/>
            <line num="590" count="768" type="stmt"/>
            <line num="595" count="1113" type="stmt"/>
            <line num="596" count="1113" type="stmt"/>
            <line num="597" count="1113" type="stmt"/>
            <line num="598" count="1113" type="stmt"/>
            <line falsecount="0" truecount="0" num="598" type="cond"/>
            <line num="599" count="1548" type="stmt"/>
            <line falsecount="768" truecount="780" num="599" type="cond"/>
            <line num="600" count="780" type="stmt"/>
            <line num="602" count="768" type="stmt"/>
            <line num="607" count="1113" type="stmt"/>
            <line falsecount="466" truecount="647" num="607" type="cond"/>
            <line num="608" count="1113" type="stmt"/>
            <line falsecount="463" truecount="650" num="608" type="cond"/>
            <line num="610" count="9" type="stmt"/>
            <line complexity="2" visibility="package" signature="reset(Node&lt;K, V&gt;) : void" num="626" count="2231" type="method"/>
            <line num="627" count="2231" type="stmt"/>
            <line num="628" count="2231" type="stmt"/>
            <line falsecount="2231" truecount="2582" num="628" type="cond"/>
            <line num="629" count="2582" type="stmt"/>
            <line num="630" count="2582" type="stmt"/>
            <line num="632" count="2231" type="stmt"/>
            <line complexity="3" visibility="public" signature="next() : Node&lt;K, V&gt;" num="635" count="5350" type="method"/>
            <line num="636" count="5350" type="stmt"/>
            <line num="637" count="5350" type="stmt"/>
            <line falsecount="3119" truecount="2231" num="637" type="cond"/>
            <line num="638" count="2231" type="stmt"/>
            <line num="640" count="3119" type="stmt"/>
            <line num="641" count="3119" type="stmt"/>
            <line num="642" count="3119" type="stmt"/>
            <line num="643" count="3119" type="stmt"/>
            <line falsecount="3119" truecount="537" num="643" type="cond"/>
            <line num="644" count="537" type="stmt"/>
            <line num="645" count="537" type="stmt"/>
            <line num="647" count="3119" type="stmt"/>
            <line num="648" count="3119" type="stmt"/>
            <line complexity="1" visibility="package" signature="reset(int) : void" num="677" count="2244" type="method"/>
            <line num="679" count="2244" type="stmt"/>
            <line num="680" count="2244" type="stmt"/>
            <line num="681" count="2244" type="stmt"/>
            <line num="682" count="2244" type="stmt"/>
            <line num="683" count="2244" type="stmt"/>
            <line complexity="9" visibility="package" signature="add(Node&lt;K, V&gt;) : void" num="686" count="1745" type="method"/>
            <line num="687" count="1745" type="stmt"/>
            <line num="688" count="1745" type="stmt"/>
            <line num="691" count="1745" type="stmt"/>
            <line falsecount="1547" truecount="198" num="691" type="cond"/>
            <line num="692" count="198" type="stmt"/>
            <line num="693" count="198" type="stmt"/>
            <line num="694" count="198" type="stmt"/>
            <line num="697" count="1745" type="stmt"/>
            <line num="698" count="1745" type="stmt"/>
            <line num="699" count="1745" type="stmt"/>
            <line num="702" count="1745" type="stmt"/>
            <line falsecount="1703" truecount="42" num="702" type="cond"/>
            <line num="703" count="42" type="stmt"/>
            <line num="704" count="42" type="stmt"/>
            <line num="705" count="42" type="stmt"/>
            <line num="721" count="1745" type="stmt"/>
            <line falsecount="1745" truecount="335" num="721" type="cond"/>
            <line num="722" count="335" type="stmt"/>
            <line falsecount="217" truecount="118" num="722" type="cond"/>
            <line num="724" count="118" type="stmt"/>
            <line num="725" count="118" type="stmt"/>
            <line num="726" count="118" type="stmt"/>
            <line num="727" count="118" type="stmt"/>
            <line num="728" count="118" type="stmt"/>
            <line num="730" count="118" type="stmt"/>
            <line num="731" count="118" type="stmt"/>
            <line num="732" count="118" type="stmt"/>
            <line num="733" count="118" type="stmt"/>
            <line num="734" count="118" type="stmt"/>
            <line num="735" count="217" type="stmt"/>
            <line falsecount="23" truecount="194" num="735" type="cond"/>
            <line num="737" count="194" type="stmt"/>
            <line num="738" count="194" type="stmt"/>
            <line num="739" count="194" type="stmt"/>
            <line num="741" count="194" type="stmt"/>
            <line num="742" count="194" type="stmt"/>
            <line num="743" count="194" type="stmt"/>
            <line num="744" count="194" type="stmt"/>
            <line num="745" count="23" type="stmt"/>
            <line falsecount="0" truecount="23" num="745" type="cond"/>
            <line num="746" count="23" type="stmt"/>
            <line complexity="2" visibility="package" signature="root() : Node&lt;K, V&gt;" num="751" count="1315" type="method"/>
            <line num="752" count="1315" type="stmt"/>
            <line num="753" count="1315" type="stmt"/>
            <line falsecount="1315" truecount="0" num="753" type="cond"/>
            <line num="754" count="0" type="stmt"/>
            <line num="756" count="1315" type="stmt"/>
            <line complexity="1" visibility="package" signature="LinkedTreeMapIterator()" num="765" count="9" type="method"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="768" count="32" type="method"/>
            <line num="769" count="32" type="stmt"/>
            <line complexity="3" visibility="package" signature="nextNode() : Node&lt;K, V&gt;" num="772" count="27" type="method"/>
            <line num="773" count="27" type="stmt"/>
            <line num="774" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="774" type="cond"/>
            <line num="775" count="0" type="stmt"/>
            <line num="777" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="777" type="cond"/>
            <line num="778" count="0" type="stmt"/>
            <line num="780" count="27" type="stmt"/>
            <line num="781" count="27" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="784" count="1" type="method"/>
            <line num="785" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="785" type="cond"/>
            <line num="786" count="0" type="stmt"/>
            <line num="788" count="1" type="stmt"/>
            <line num="789" count="1" type="stmt"/>
            <line num="790" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="795" count="0" type="method"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;K, V&gt;&gt;" num="799" count="6" type="method"/>
            <line num="800" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;K, V&gt;" num="801" count="22" type="method"/>
            <line num="802" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="807" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="remove(Object) : boolean" num="811" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="812" type="cond"/>
            <line num="813" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="817" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="824" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="830" count="0" type="method"/>
            <line num="831" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;K&gt;" num="834" count="3" type="method"/>
            <line num="835" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : K" num="836" count="5" type="method"/>
            <line num="837" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="842" count="0" type="method"/>
            <line num="843" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="846" count="0" type="method"/>
            <line num="847" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="850" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeReplace() : Object" num="861" count="0" type="method"/>
            <line num="862" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java" name="LinkedTreeMap.java">
            <metrics coveredelements="332" coveredconditionals="102" complexity="125" loc="630" coveredmethods="36" methods="48" elements="421" classes="5" ncloc="441" statements="235" conditionals="138" coveredstatements="194"/>
            <class name="LinkedTreeMap">
               <metrics coveredelements="276" coveredconditionals="96" complexity="87" coveredmethods="19" methods="22" elements="308" statements="172" conditionals="114" coveredstatements="161"/>
            </class>
            <class name="LinkedTreeMap.Node">
               <metrics coveredelements="25" coveredconditionals="3" complexity="17" coveredmethods="6" methods="10" elements="56" statements="32" conditionals="14" coveredstatements="16"/>
            </class>
            <class name="LinkedTreeMap.LinkedTreeMapIterator">
               <metrics coveredelements="17" coveredconditionals="3" complexity="7" coveredmethods="4" methods="4" elements="23" statements="13" conditionals="6" coveredstatements="10"/>
            </class>
            <class name="LinkedTreeMap.EntrySet">
               <metrics coveredelements="6" coveredconditionals="0" complexity="8" coveredmethods="3" methods="6" elements="22" statements="12" conditionals="4" coveredstatements="3"/>
            </class>
            <class name="LinkedTreeMap.KeySet">
               <metrics coveredelements="8" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="compare(Comparable,Comparable) : int" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LinkedTreeMap()" num="58" count="1207" type="method"/>
            <line num="60" count="1207" type="stmt"/>
            <line complexity="2" visibility="public" signature="LinkedTreeMap(Comparator&lt;? super K&gt;)" num="70" count="1207" type="method"/>
            <line num="72" count="1207" type="stmt"/>
            <line falsecount="0" truecount="1207" num="72" type="cond"/>
            <line complexity="1" visibility="public" signature="size() : int" num="77" count="71" type="method"/>
            <line num="78" count="71" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(Object) : V" num="81" count="1146" type="method"/>
            <line num="82" count="1146" type="stmt"/>
            <line num="83" count="1146" type="stmt"/>
            <line falsecount="19" truecount="1127" num="83" type="cond"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="86" count="1014" type="method"/>
            <line num="87" count="1014" type="stmt"/>
            <line complexity="2" visibility="public" signature="put(K,V) : V" num="90" count="2360" type="method"/>
            <line num="91" count="2360" type="stmt"/>
            <line falsecount="2358" truecount="2" num="91" type="cond"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2358" type="stmt"/>
            <line num="95" count="2357" type="stmt"/>
            <line num="96" count="2357" type="stmt"/>
            <line num="97" count="2357" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="100" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove(Object) : V" num="110" count="3" type="method"/>
            <line num="111" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="112" type="cond"/>
            <line complexity="12" visibility="package" signature="find(K,boolean) : Node&lt;K, V&gt;" num="121" count="4518" type="method"/>
            <line num="122" count="4518" type="stmt"/>
            <line num="123" count="4518" type="stmt"/>
            <line num="124" count="4518" type="stmt"/>
            <line num="126" count="4518" type="stmt"/>
            <line falsecount="1182" truecount="3336" num="126" type="cond"/>
            <line num="128" count="3336" type="stmt"/>
            <line falsecount="0" truecount="3336" num="129" type="cond"/>
            <line num="133" count="3335" type="stmt"/>
            <line num="134" count="27507" type="stmt"/>
            <line falsecount="0" truecount="27507" num="134" type="cond"/>
            <line num="139" count="27507" type="stmt"/>
            <line falsecount="25366" truecount="2141" num="139" type="cond"/>
            <line num="140" count="2141" type="stmt"/>
            <line num="144" count="25366" type="stmt"/>
            <line falsecount="12582" truecount="12784" num="144" type="cond"/>
            <line num="145" count="25366" type="stmt"/>
            <line falsecount="24172" truecount="1194" num="145" type="cond"/>
            <line num="146" count="1194" type="stmt"/>
            <line num="149" count="24172" type="stmt"/>
            <line num="154" count="2376" type="stmt"/>
            <line falsecount="2356" truecount="20" num="154" type="cond"/>
            <line num="155" count="20" type="stmt"/>
            <line num="159" count="2356" type="stmt"/>
            <line num="160" count="2356" type="stmt"/>
            <line num="161" count="2356" type="stmt"/>
            <line falsecount="1178" truecount="1178" num="161" type="cond"/>
            <line num="163" count="1178" type="stmt"/>
            <line falsecount="1177" truecount="1" num="163" type="cond"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1177" type="stmt"/>
            <line num="167" count="1177" type="stmt"/>
            <line num="169" count="1178" type="stmt"/>
            <line num="170" count="1178" type="stmt"/>
            <line falsecount="562" truecount="616" num="170" type="cond"/>
            <line num="171" count="616" type="stmt"/>
            <line num="173" count="562" type="stmt"/>
            <line num="175" count="1178" type="stmt"/>
            <line num="177" count="2355" type="stmt"/>
            <line num="178" count="2355" type="stmt"/>
            <line num="180" count="2355" type="stmt"/>
            <line complexity="3" visibility="package" signature="findByObject(Object) : Node&lt;K, V&gt;" num="183" count="2163" type="method"/>
            <line num="185" count="2163" type="stmt"/>
            <line num="186" count="2163" type="stmt"/>
            <line falsecount="3" truecount="2160" num="186" type="cond"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="findByEntry(Entry&lt;?, ?&gt;) : Node&lt;K, V&gt;" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line complexity="1" visibility="private" signature="equal(Object,Object) : boolean" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="9" visibility="package" signature="removeInternal(Node&lt;K, V&gt;,boolean) : void" num="217" count="5" type="method"/>
            <line num="218" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="218" type="cond"/>
            <line num="219" count="4" type="stmt"/>
            <line num="220" count="4" type="stmt"/>
            <line num="223" count="5" type="stmt"/>
            <line num="224" count="5" type="stmt"/>
            <line num="225" count="5" type="stmt"/>
            <line num="226" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="226" type="cond"/>
            <line num="237" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="237" type="cond"/>
            <line num="238" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="242" type="cond"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="251" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="264" type="cond"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="268" count="3" type="stmt"/>
            <line num="271" count="4" type="stmt"/>
            <line num="272" count="4" type="stmt"/>
            <line num="273" count="4" type="stmt"/>
            <line complexity="2" visibility="package" signature="removeInternalByKey(Object) : Node&lt;K, V&gt;" num="276" count="3" type="method"/>
            <line num="277" count="3" type="stmt"/>
            <line num="278" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="278" type="cond"/>
            <line num="279" count="3" type="stmt"/>
            <line num="281" count="3" type="stmt"/>
            <line complexity="5" visibility="private" signature="replaceInParent(Node&lt;K, V&gt;,Node&lt;K, V&gt;) : void" num="284" count="748" type="method"/>
            <line num="285" count="748" type="stmt"/>
            <line num="286" count="748" type="stmt"/>
            <line num="287" count="748" type="stmt"/>
            <line falsecount="3" truecount="745" num="287" type="cond"/>
            <line num="288" count="745" type="stmt"/>
            <line num="291" count="748" type="stmt"/>
            <line falsecount="38" truecount="710" num="291" type="cond"/>
            <line num="292" count="710" type="stmt"/>
            <line falsecount="370" truecount="340" num="292" type="cond"/>
            <line num="293" count="340" type="stmt"/>
            <line falsecount="0" truecount="370" num="295" type="cond"/>
            <line num="296" count="370" type="stmt"/>
            <line num="299" count="38" type="stmt"/>
            <line complexity="25" visibility="private" signature="rebalance(Node&lt;K, V&gt;,boolean) : void" num="310" count="1182" type="method"/>
            <line num="311" count="1182" type="stmt"/>
            <line falsecount="154" truecount="2989" num="311" type="cond"/>
            <line num="312" count="2989" type="stmt"/>
            <line num="313" count="2989" type="stmt"/>
            <line num="314" count="2989" type="stmt"/>
            <line falsecount="639" truecount="2350" num="314" type="cond"/>
            <line num="315" count="2989" type="stmt"/>
            <line falsecount="704" truecount="2285" num="315" type="cond"/>
            <line num="317" count="2989" type="stmt"/>
            <line num="318" count="2989" type="stmt"/>
            <line falsecount="2750" truecount="239" num="318" type="cond"/>
            <line num="319" count="239" type="stmt"/>
            <line num="320" count="239" type="stmt"/>
            <line num="321" count="239" type="stmt"/>
            <line falsecount="75" truecount="164" num="321" type="cond"/>
            <line num="322" count="239" type="stmt"/>
            <line falsecount="74" truecount="165" num="322" type="cond"/>
            <line num="324" count="239" type="stmt"/>
            <line num="325" count="239" type="stmt"/>
            <line falsecount="127" truecount="112" num="325" type="cond"/>
            <line num="326" count="112" type="stmt"/>
            <line falsecount="0" truecount="127" num="328" type="cond"/>
            <line num="329" count="127" type="stmt"/>
            <line num="330" count="127" type="stmt"/>
            <line num="332" count="239" type="stmt"/>
            <line falsecount="0" truecount="239" num="332" type="cond"/>
            <line num="333" count="239" type="stmt"/>
            <line num="336" count="2750" type="stmt"/>
            <line falsecount="2495" truecount="255" num="336" type="cond"/>
            <line num="337" count="255" type="stmt"/>
            <line num="338" count="255" type="stmt"/>
            <line num="339" count="255" type="stmt"/>
            <line falsecount="85" truecount="170" num="339" type="cond"/>
            <line num="340" count="255" type="stmt"/>
            <line falsecount="79" truecount="176" num="340" type="cond"/>
            <line num="342" count="255" type="stmt"/>
            <line num="343" count="255" type="stmt"/>
            <line falsecount="122" truecount="133" num="343" type="cond"/>
            <line num="344" count="133" type="stmt"/>
            <line falsecount="0" truecount="122" num="346" type="cond"/>
            <line num="347" count="122" type="stmt"/>
            <line num="348" count="122" type="stmt"/>
            <line num="350" count="255" type="stmt"/>
            <line falsecount="0" truecount="255" num="350" type="cond"/>
            <line num="351" count="255" type="stmt"/>
            <line num="354" count="2495" type="stmt"/>
            <line falsecount="1963" truecount="532" num="354" type="cond"/>
            <line num="355" count="532" type="stmt"/>
            <line num="356" count="532" type="stmt"/>
            <line falsecount="0" truecount="532" num="356" type="cond"/>
            <line num="357" count="532" type="stmt"/>
            <line falsecount="0" truecount="1963" num="361" type="cond"/>
            <line num="362" count="1963" type="stmt"/>
            <line num="363" count="1963" type="stmt"/>
            <line falsecount="1961" truecount="2" num="363" type="cond"/>
            <line num="364" count="2" type="stmt"/>
            <line complexity="5" visibility="private" signature="rotateLeft(Node&lt;K, V&gt;) : void" num="373" count="361" type="method"/>
            <line num="374" count="361" type="stmt"/>
            <line num="375" count="361" type="stmt"/>
            <line num="376" count="361" type="stmt"/>
            <line num="377" count="361" type="stmt"/>
            <line num="380" count="361" type="stmt"/>
            <line num="381" count="361" type="stmt"/>
            <line falsecount="252" truecount="109" num="381" type="cond"/>
            <line num="382" count="109" type="stmt"/>
            <line num="385" count="361" type="stmt"/>
            <line num="388" count="361" type="stmt"/>
            <line num="389" count="361" type="stmt"/>
            <line num="392" count="361" type="stmt"/>
            <line falsecount="228" truecount="133" num="392" type="cond"/>
            <line falsecount="252" truecount="109" num="393" type="cond"/>
            <line num="394" count="361" type="stmt"/>
            <line falsecount="86" truecount="275" num="395" type="cond"/>
            <line complexity="5" visibility="private" signature="rotateRight(Node&lt;K, V&gt;) : void" num="401" count="382" type="method"/>
            <line num="402" count="382" type="stmt"/>
            <line num="403" count="382" type="stmt"/>
            <line num="404" count="382" type="stmt"/>
            <line num="405" count="382" type="stmt"/>
            <line num="408" count="382" type="stmt"/>
            <line num="409" count="382" type="stmt"/>
            <line falsecount="262" truecount="120" num="409" type="cond"/>
            <line num="410" count="120" type="stmt"/>
            <line num="413" count="382" type="stmt"/>
            <line num="416" count="382" type="stmt"/>
            <line num="417" count="382" type="stmt"/>
            <line num="420" count="382" type="stmt"/>
            <line falsecount="239" truecount="143" num="420" type="cond"/>
            <line falsecount="262" truecount="120" num="421" type="cond"/>
            <line num="422" count="382" type="stmt"/>
            <line falsecount="86" truecount="296" num="423" type="cond"/>
            <line complexity="2" visibility="public" signature="entrySet() : Set&lt;Entry&lt;K, V&gt;&gt;" num="429" count="156" type="method"/>
            <line num="430" count="156" type="stmt"/>
            <line num="431" count="156" type="stmt"/>
            <line falsecount="125" truecount="31" num="431" type="cond"/>
            <line complexity="2" visibility="public" signature="keySet() : Set&lt;K&gt;" num="434" count="6" type="method"/>
            <line num="435" count="6" type="stmt"/>
            <line num="436" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="436" type="cond"/>
            <line complexity="1" visibility="package" signature="Node()" num="450" count="1207" type="method"/>
            <line num="451" count="1207" type="stmt"/>
            <line num="452" count="1207" type="stmt"/>
            <line complexity="1" visibility="package" signature="Node(Node&lt;K, V&gt;,K,Node&lt;K, V&gt;,Node&lt;K, V&gt;)" num="456" count="2355" type="method"/>
            <line num="457" count="2355" type="stmt"/>
            <line num="458" count="2355" type="stmt"/>
            <line num="459" count="2355" type="stmt"/>
            <line num="460" count="2355" type="stmt"/>
            <line num="461" count="2355" type="stmt"/>
            <line num="462" count="2355" type="stmt"/>
            <line num="463" count="2355" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKey() : K" num="466" count="212" type="method"/>
            <line num="467" count="212" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : V" num="470" count="249" type="method"/>
            <line num="471" count="249" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(V) : V" num="474" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="480" count="0" type="method"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="484" type="cond"/>
            <line falsecount="0" truecount="0" num="485" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="490" count="10" type="method"/>
            <line num="491" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="491" type="cond"/>
            <line falsecount="10" truecount="0" num="492" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="495" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="first() : Node&lt;K, V&gt;" num="502" count="1" type="method"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="505" type="cond"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="last() : Node&lt;K, V&gt;" num="515" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="518" type="cond"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="LinkedTreeMapIterator()" num="531" count="155" type="method"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="534" count="468" type="method"/>
            <line num="535" count="468" type="stmt"/>
            <line complexity="3" visibility="package" signature="nextNode() : Node&lt;K, V&gt;" num="538" count="267" type="method"/>
            <line num="539" count="267" type="stmt"/>
            <line num="540" count="267" type="stmt"/>
            <line falsecount="267" truecount="0" num="540" type="cond"/>
            <line num="541" count="0" type="stmt"/>
            <line num="543" count="267" type="stmt"/>
            <line falsecount="267" truecount="0" num="543" type="cond"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="267" type="stmt"/>
            <line num="547" count="267" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="550" count="1" type="method"/>
            <line num="551" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="551" type="cond"/>
            <line num="552" count="0" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="561" count="4" type="method"/>
            <line num="562" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;K, V&gt;&gt;" num="565" count="152" type="method"/>
            <line num="566" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;K, V&gt;" num="567" count="262" type="method"/>
            <line num="568" count="262" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="573" count="0" type="method"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="remove(Object) : boolean" num="577" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="578" type="cond"/>
            <line num="579" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="590" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="596" count="1" type="method"/>
            <line num="597" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;K&gt;" num="600" count="3" type="method"/>
            <line num="601" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : K" num="602" count="5" type="method"/>
            <line num="603" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="608" count="2" type="method"/>
            <line num="609" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="612" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="616" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeReplace() : Object" num="627" count="1" type="method"/>
            <line num="628" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/ObjectConstructor.java" name="ObjectConstructor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/PreJava9DateFormatProvider.java" name="PreJava9DateFormatProvider.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="17" loc="86" coveredmethods="5" methods="5" elements="40" classes="1" ncloc="54" statements="35" conditionals="0" coveredstatements="27"/>
            <class name="PreJava9DateFormatProvider">
               <metrics coveredelements="32" coveredconditionals="0" complexity="17" coveredmethods="5" methods="5" elements="40" statements="35" conditionals="0" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="getUSDateFormat(int) : DateFormat" num="30" count="13" type="method"/>
            <line num="31" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUSDateTimeFormat(int,int) : DateFormat" num="38" count="34" type="method"/>
            <line num="39" count="34" type="stmt"/>
            <line num="40" count="34" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDateFormatPattern(int) : String" num="43" count="13" type="method"/>
            <line num="44" count="13" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDatePartOfDateTimePattern(int) : String" num="58" count="34" type="method"/>
            <line num="59" count="34" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="22" type="stmt"/>
            <line num="63" count="22" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getTimePartOfDateTimePattern(int) : String" num="73" count="34" type="method"/>
            <line num="74" count="34" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="22" type="stmt"/>
            <line num="78" count="22" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/Primitives.java" name="Primitives.java">
            <metrics coveredelements="62" coveredconditionals="27" complexity="23" loc="100" coveredmethods="4" methods="5" elements="81" classes="1" ncloc="45" statements="40" conditionals="36" coveredstatements="31"/>
            <class name="Primitives">
               <metrics coveredelements="62" coveredconditionals="27" complexity="23" coveredmethods="4" methods="5" elements="81" statements="40" conditionals="36" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="private" signature="Primitives()" num="28" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isPrimitive(Type) : boolean" num="33" count="1137" type="method"/>
            <line num="34" count="1137" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWrapperType(Type) : boolean" num="43" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="10" visibility="public" signature="wrap(Class&lt;T&gt;) : Class&lt;T&gt;" num="64" count="453" type="method"/>
            <line num="66" count="456" type="stmt"/>
            <line num="66" count="5" type="stmt"/>
            <line falsecount="452" truecount="5" num="66" type="cond"/>
            <line num="67" count="452" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line falsecount="447" truecount="6" num="67" type="cond"/>
            <line num="68" count="447" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line falsecount="443" truecount="2" num="68" type="cond"/>
            <line num="69" count="445" type="stmt"/>
            <line num="69" count="10" type="stmt"/>
            <line falsecount="435" truecount="10" num="69" type="cond"/>
            <line num="70" count="434" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line falsecount="432" truecount="4" num="70" type="cond"/>
            <line num="71" count="430" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line falsecount="427" truecount="2" num="71" type="cond"/>
            <line num="72" count="428" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line falsecount="424" truecount="5" num="72" type="cond"/>
            <line num="73" count="423" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line falsecount="424" truecount="1" num="73" type="cond"/>
            <line num="74" count="423" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="422" truecount="0" num="74" type="cond"/>
            <line num="75" count="423" type="stmt"/>
            <line complexity="10" visibility="public" signature="unwrap(Class&lt;T&gt;) : Class&lt;T&gt;" num="87" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="2" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="91" type="cond"/>
            <line num="92" count="2" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="93" type="cond"/>
            <line num="94" count="2" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="96" type="cond"/>
            <line num="97" count="2" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="97" type="cond"/>
            <line num="98" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/Streams.java" name="Streams.java">
            <metrics coveredelements="16" coveredconditionals="3" complexity="18" loc="120" coveredmethods="3" methods="12" elements="37" classes="3" ncloc="71" statements="21" conditionals="4" coveredstatements="10"/>
            <class name="Streams">
               <metrics coveredelements="16" coveredconditionals="3" complexity="10" coveredmethods="3" methods="4" elements="22" statements="14" conditionals="4" coveredstatements="10"/>
            </class>
            <class name="Streams.AppendableWriter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Streams.AppendableWriter.CurrentWrite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Streams()" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parse(JsonReader) : JsonElement" num="43" count="105" type="method"/>
            <line num="44" count="105" type="stmt"/>
            <line num="45" count="105" type="stmt"/>
            <line num="46" count="105" type="stmt"/>
            <line num="47" count="104" type="stmt"/>
            <line num="48" count="104" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="54" type="cond"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonElement,JsonWriter) : void" num="71" count="102" type="method"/>
            <line num="72" count="102" type="stmt"/>
            <line complexity="2" visibility="public" signature="writerForAppendable(Appendable) : Writer" num="75" count="599" type="method"/>
            <line num="76" count="606" type="stmt"/>
            <line falsecount="0" truecount="609" num="76" type="cond"/>
            <line complexity="1" visibility="package" signature="AppendableWriter(Appendable)" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(char[],int,int) : void" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(int) : void" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="100" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="close() : void" num="101" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="length() : int" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java" name="UnsafeAllocator.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="11" loc="123" coveredmethods="3" methods="6" elements="41" classes="1" ncloc="74" statements="31" conditionals="4" coveredstatements="14"/>
            <class name="UnsafeAllocator">
               <metrics coveredelements="21" coveredconditionals="4" complexity="11" coveredmethods="3" methods="6" elements="41" statements="31" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="4" visibility="public" signature="create() : UnsafeAllocator" num="34" count="156" type="method"/>
            <line num="39" count="156" type="stmt"/>
            <line num="40" count="156" type="stmt"/>
            <line num="41" count="156" type="stmt"/>
            <line num="42" count="156" type="stmt"/>
            <line num="43" count="156" type="stmt"/>
            <line num="44" count="156" type="stmt"/>
            <line num="45" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="newInstance(Class&lt;T&gt;) : T" num="46" count="51" type="method"/>
            <line num="49" count="51" type="stmt"/>
            <line num="50" count="49" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newInstance(Class&lt;T&gt;) : T" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newInstance(Class&lt;T&gt;) : T" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newInstance(Class&lt;T&gt;) : T" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="assertInstantiable(Class&lt;?&gt;) : void" num="114" count="51" type="method"/>
            <line num="115" count="51" type="stmt"/>
            <line num="116" count="51" type="stmt"/>
            <line falsecount="50" truecount="1" num="116" type="cond"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="50" type="stmt"/>
            <line falsecount="49" truecount="1" num="119" type="cond"/>
            <line num="120" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.bind">
         <metrics coveredelements="1505" complexity="489" loc="2876" methods="198" classes="21" statements="1013" coveredconditionals="389" coveredmethods="181" elements="1647" ncloc="2215" files="13" conditionals="436" coveredstatements="935"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java" name="ArrayTypeAdapter.java">
            <metrics coveredelements="46" coveredconditionals="12" complexity="12" loc="99" coveredmethods="4" methods="4" elements="46" classes="1" ncloc="69" statements="30" conditionals="12" coveredstatements="30"/>
            <class name="ArrayTypeAdapter">
               <metrics coveredelements="46" coveredconditionals="12" complexity="12" coveredmethods="4" methods="4" elements="46" statements="30" conditionals="12" coveredstatements="30"/>
            </class>
            <line complexity="4" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="40" count="906" type="method"/>
            <line num="42" count="907" type="stmt"/>
            <line num="43" count="908" type="stmt"/>
            <line falsecount="132" truecount="774" num="43" type="cond"/>
            <line num="44" count="774" type="stmt"/>
            <line num="47" count="132" type="stmt"/>
            <line num="48" count="132" type="stmt"/>
            <line num="49" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayTypeAdapter(Gson,TypeAdapter&lt;E&gt;,Class&lt;E&gt;)" num="57" count="132" type="method"/>
            <line num="58" count="132" type="stmt"/>
            <line num="60" count="132" type="stmt"/>
            <line complexity="4" visibility="public" signature="read(JsonReader) : Object" num="63" count="42" type="method"/>
            <line num="64" count="42" type="stmt"/>
            <line falsecount="41" truecount="1" num="64" type="cond"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="41" type="stmt"/>
            <line num="70" count="41" type="stmt"/>
            <line num="71" count="41" type="stmt"/>
            <line falsecount="39" truecount="109" num="71" type="cond"/>
            <line num="72" count="109" type="stmt"/>
            <line num="73" count="109" type="stmt"/>
            <line num="75" count="39" type="stmt"/>
            <line num="77" count="39" type="stmt"/>
            <line num="78" count="39" type="stmt"/>
            <line num="79" count="39" type="stmt"/>
            <line falsecount="39" truecount="106" num="79" type="cond"/>
            <line num="80" count="106" type="stmt"/>
            <line num="82" count="39" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(JsonWriter,Object) : void" num="85" count="1162" type="method"/>
            <line num="87" count="1162" type="stmt"/>
            <line falsecount="1145" truecount="17" num="87" type="cond"/>
            <line num="88" count="17" type="stmt"/>
            <line num="89" count="17" type="stmt"/>
            <line num="92" count="1145" type="stmt"/>
            <line num="93" count="1144" type="stmt"/>
            <line falsecount="112" truecount="1252" num="93" type="cond"/>
            <line num="94" count="1252" type="stmt"/>
            <line num="95" count="1252" type="stmt"/>
            <line num="97" count="112" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java" name="CollectionTypeAdapterFactory.java">
            <metrics coveredelements="42" coveredconditionals="8" complexity="9" loc="102" coveredmethods="5" methods="5" elements="42" classes="2" ncloc="70" statements="29" conditionals="8" coveredstatements="29"/>
            <class name="CollectionTypeAdapterFactory">
               <metrics coveredelements="14" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="14" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <class name="CollectionTypeAdapterFactory.Adapter">
               <metrics coveredelements="28" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="28" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="CollectionTypeAdapterFactory(ConstructorConstructor)" num="39" count="832" type="method"/>
            <line num="40" count="832" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="43" count="773" type="method"/>
            <line num="45" count="773" type="stmt"/>
            <line num="47" count="773" type="stmt"/>
            <line num="48" count="772" type="stmt"/>
            <line falsecount="161" truecount="611" num="48" type="cond"/>
            <line num="49" count="611" type="stmt"/>
            <line num="52" count="161" type="stmt"/>
            <line num="53" count="161" type="stmt"/>
            <line num="54" count="161" type="stmt"/>
            <line num="56" count="161" type="stmt"/>
            <line num="58" count="161" type="stmt"/>
            <line complexity="1" visibility="public" signature="Adapter(Gson,Type,TypeAdapter&lt;E&gt;,ObjectConstructor&lt;? extends Collection&lt;E&gt;&gt;)" num="65" count="161" type="method"/>
            <line num="68" count="161" type="stmt"/>
            <line num="70" count="161" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Collection&lt;E&gt;" num="73" count="83" type="method"/>
            <line num="74" count="83" type="stmt"/>
            <line falsecount="79" truecount="4" num="74" type="cond"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="79" count="79" type="stmt"/>
            <line num="80" count="79" type="stmt"/>
            <line num="81" count="79" type="stmt"/>
            <line falsecount="77" truecount="189" num="81" type="cond"/>
            <line num="82" count="189" type="stmt"/>
            <line num="83" count="188" type="stmt"/>
            <line num="85" count="77" type="stmt"/>
            <line num="86" count="77" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Collection&lt;E&gt;) : void" num="89" count="1064" type="method"/>
            <line num="90" count="1064" type="stmt"/>
            <line falsecount="1043" truecount="21" num="90" type="cond"/>
            <line num="91" count="21" type="stmt"/>
            <line num="92" count="21" type="stmt"/>
            <line num="95" count="1043" type="stmt"/>
            <line num="96" count="1042" type="stmt"/>
            <line num="97" count="1186" type="stmt"/>
            <line num="99" count="102" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/DateTypeAdapter.java" name="DateTypeAdapter.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="12" loc="101" coveredmethods="5" methods="5" elements="36" classes="1" ncloc="65" statements="21" conditionals="10" coveredstatements="17"/>
            <class name="DateTypeAdapter">
               <metrics coveredelements="30" coveredconditionals="8" complexity="12" coveredmethods="5" methods="5" elements="36" statements="21" conditionals="10" coveredstatements="17"/>
            </class>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="48" count="932" type="method"/>
            <line num="50" count="932" type="stmt"/>
            <line falsecount="923" truecount="9" num="50" type="cond"/>
            <line complexity="3" visibility="public" signature="DateTypeAdapter()" num="60" count="9" type="method"/>
            <line num="61" count="9" type="stmt"/>
            <line num="62" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="65" type="cond"/>
            <line num="66" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Date" num="70" count="5" type="method"/>
            <line num="71" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="71" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line complexity="3" visibility="private" signature="deserializeToDate(String) : Date" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
            <line num="81" count="5" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Date) : void" num="91" count="7" type="method"/>
            <line num="92" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line num="97" count="5" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/DefaultDateTypeAdapter.java" name="DefaultDateTypeAdapter.java">
            <metrics coveredelements="63" coveredconditionals="11" complexity="24" loc="174" coveredmethods="13" methods="14" elements="75" classes="2" ncloc="122" statements="45" conditionals="16" coveredstatements="39"/>
            <class name="DefaultDateTypeAdapter">
               <metrics coveredelements="49" coveredconditionals="11" complexity="17" coveredmethods="6" methods="7" elements="61" statements="38" conditionals="16" coveredstatements="32"/>
            </class>
            <class name="DefaultDateTypeAdapter.DateType">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="deserialize(Date) : Date" num="53" count="46" type="method"/>
            <line num="54" count="46" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DateType(Class&lt;T&gt;)" num="60" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="createFactory(DefaultDateTypeAdapter&lt;T&gt;) : TypeAdapterFactory" num="66" count="57" type="method"/>
            <line num="67" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAdapterFactory(String) : TypeAdapterFactory" num="70" count="20" type="method"/>
            <line num="71" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAdapterFactory(int) : TypeAdapterFactory" num="74" count="13" type="method"/>
            <line num="75" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAdapterFactory(int,int) : TypeAdapterFactory" num="78" count="16" type="method"/>
            <line num="79" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefaultsAdapterFactory() : TypeAdapterFactory" num="82" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
            <line complexity="2" visibility="private" signature="DefaultDateTypeAdapter(DateType&lt;T&gt;,String)" num="95" count="20" type="method"/>
            <line num="96" count="20" type="stmt"/>
            <line num="97" count="20" type="stmt"/>
            <line num="98" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="DefaultDateTypeAdapter(DateType&lt;T&gt;,int)" num="103" count="13" type="method"/>
            <line num="104" count="13" type="stmt"/>
            <line num="105" count="13" type="stmt"/>
            <line num="106" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="106" type="cond"/>
            <line num="107" count="6" type="stmt"/>
            <line num="109" count="13" type="stmt"/>
            <line falsecount="0" truecount="13" num="109" type="cond"/>
            <line num="110" count="13" type="stmt"/>
            <line complexity="3" visibility="private" signature="DefaultDateTypeAdapter(DateType&lt;T&gt;,int,int)" num="114" count="25" type="method"/>
            <line num="115" count="25" type="stmt"/>
            <line num="116" count="25" type="stmt"/>
            <line num="117" count="25" type="stmt"/>
            <line falsecount="15" truecount="10" num="117" type="cond"/>
            <line num="118" count="10" type="stmt"/>
            <line num="120" count="25" type="stmt"/>
            <line falsecount="0" truecount="25" num="120" type="cond"/>
            <line num="121" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Date) : void" num="127" count="26" type="method"/>
            <line num="129" count="26" type="stmt"/>
            <line falsecount="25" truecount="1" num="129" type="cond"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="25" type="stmt"/>
            <line num="134" count="25" type="stmt"/>
            <line num="135" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : T" num="139" count="50" type="method"/>
            <line num="141" count="50" type="stmt"/>
            <line falsecount="49" truecount="1" num="141" type="cond"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="49" type="stmt"/>
            <line num="146" count="48" type="stmt"/>
            <line complexity="3" visibility="private" signature="deserializeToDate(String) : Date" num="149" count="48" type="method"/>
            <line num="150" count="48" type="stmt"/>
            <line num="151" count="48" type="stmt"/>
            <line num="152" count="96" type="stmt"/>
            <line num="153" count="96" type="stmt"/>
            <line num="158" count="27" type="stmt"/>
            <line num="159" count="27" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java" name="JsonAdapterAnnotationTypeAdapterFactory.java">
            <metrics coveredelements="37" coveredconditionals="14" complexity="12" loc="83" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="53" statements="20" conditionals="14" coveredstatements="20"/>
            <class name="JsonAdapterAnnotationTypeAdapterFactory">
               <metrics coveredelements="37" coveredconditionals="14" complexity="12" coveredmethods="3" methods="3" elements="37" statements="20" conditionals="14" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor)" num="37" count="832" type="method"/>
            <line num="38" count="832" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="41" count="493" type="method"/>
            <line num="44" count="495" type="stmt"/>
            <line num="45" count="497" type="stmt"/>
            <line num="46" count="494" type="stmt"/>
            <line falsecount="14" truecount="481" num="46" type="cond"/>
            <line num="47" count="482" type="stmt"/>
            <line num="49" count="14" type="stmt"/>
            <line complexity="9" visibility="package" signature="getTypeAdapter(ConstructorConstructor,Gson,TypeToken&lt;?&gt;,JsonAdapter) : TypeAdapter&lt;?&gt;" num="52" count="27" type="method"/>
            <line num="55" count="27" type="stmt"/>
            <line num="57" count="27" type="stmt"/>
            <line num="58" count="27" type="stmt"/>
            <line falsecount="14" truecount="13" num="58" type="cond"/>
            <line num="59" count="13" type="stmt"/>
            <line num="60" count="14" type="stmt"/>
            <line falsecount="7" truecount="7" num="60" type="cond"/>
            <line num="61" count="7" type="stmt"/>
            <line num="62" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="62" type="cond"/>
            <line num="63" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="63" type="cond"/>
            <line num="66" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="66" type="cond"/>
            <line num="69" count="6" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="77" count="26" type="stmt"/>
            <line falsecount="1" truecount="25" num="77" type="cond"/>
            <line num="78" count="25" type="stmt"/>
            <line num="81" count="26" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java" name="JsonTreeReader.java">
            <metrics coveredelements="233" coveredconditionals="70" complexity="74" loc="329" coveredmethods="24" methods="27" elements="251" classes="1" ncloc="266" statements="148" conditionals="76" coveredstatements="139"/>
            <class name="JsonTreeReader">
               <metrics coveredelements="233" coveredconditionals="70" complexity="74" coveredmethods="24" methods="27" elements="251" statements="148" conditionals="76" coveredstatements="139"/>
            </class>
            <line complexity="1" visibility="public" signature="read(char[],int,int) : int" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonTreeReader(JsonElement)" num="66" count="67" type="method"/>
            <line num="67" count="67" type="stmt"/>
            <line num="68" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginArray() : void" num="71" count="32" type="method"/>
            <line num="72" count="32" type="stmt"/>
            <line num="73" count="32" type="stmt"/>
            <line num="74" count="32" type="stmt"/>
            <line num="75" count="32" type="stmt"/>
            <line complexity="2" visibility="public" signature="endArray() : void" num="78" count="30" type="method"/>
            <line num="79" count="30" type="stmt"/>
            <line num="80" count="29" type="stmt"/>
            <line num="81" count="29" type="stmt"/>
            <line num="82" count="29" type="stmt"/>
            <line falsecount="18" truecount="11" num="82" type="cond"/>
            <line num="83" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginObject() : void" num="87" count="36" type="method"/>
            <line num="88" count="36" type="stmt"/>
            <line num="89" count="33" type="stmt"/>
            <line num="90" count="33" type="stmt"/>
            <line complexity="2" visibility="public" signature="endObject() : void" num="93" count="30" type="method"/>
            <line num="94" count="30" type="stmt"/>
            <line num="95" count="29" type="stmt"/>
            <line num="96" count="29" type="stmt"/>
            <line num="97" count="29" type="stmt"/>
            <line falsecount="19" truecount="10" num="97" type="cond"/>
            <line num="98" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="102" count="71" type="method"/>
            <line num="103" count="71" type="stmt"/>
            <line num="104" count="71" type="stmt"/>
            <line complexity="14" visibility="public" signature="peek() : JsonToken" num="107" count="626" type="method"/>
            <line num="108" count="626" type="stmt"/>
            <line falsecount="619" truecount="7" num="108" type="cond"/>
            <line num="109" count="7" type="stmt"/>
            <line num="112" count="619" type="stmt"/>
            <line num="113" count="619" type="stmt"/>
            <line falsecount="365" truecount="254" num="113" type="cond"/>
            <line num="114" count="254" type="stmt"/>
            <line num="115" count="254" type="stmt"/>
            <line num="116" count="254" type="stmt"/>
            <line falsecount="82" truecount="172" num="116" type="cond"/>
            <line num="117" count="172" type="stmt"/>
            <line falsecount="59" truecount="113" num="117" type="cond"/>
            <line num="118" count="113" type="stmt"/>
            <line num="120" count="59" type="stmt"/>
            <line num="121" count="59" type="stmt"/>
            <line num="124" count="82" type="stmt"/>
            <line falsecount="35" truecount="47" num="124" type="cond"/>
            <line num="126" count="365" type="stmt"/>
            <line falsecount="269" truecount="96" num="126" type="cond"/>
            <line num="127" count="96" type="stmt"/>
            <line num="128" count="269" type="stmt"/>
            <line falsecount="203" truecount="66" num="128" type="cond"/>
            <line num="129" count="66" type="stmt"/>
            <line num="130" count="203" type="stmt"/>
            <line falsecount="5" truecount="198" num="130" type="cond"/>
            <line num="131" count="198" type="stmt"/>
            <line num="132" count="198" type="stmt"/>
            <line falsecount="108" truecount="90" num="132" type="cond"/>
            <line num="133" count="90" type="stmt"/>
            <line num="134" count="108" type="stmt"/>
            <line falsecount="96" truecount="12" num="134" type="cond"/>
            <line num="135" count="12" type="stmt"/>
            <line num="136" count="96" type="stmt"/>
            <line falsecount="0" truecount="96" num="136" type="cond"/>
            <line num="137" count="96" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="141" type="cond"/>
            <line num="142" count="4" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="143" type="cond"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="peekStack() : Object" num="150" count="808" type="method"/>
            <line num="151" count="808" type="stmt"/>
            <line complexity="1" visibility="private" signature="popStack() : Object" num="154" count="234" type="method"/>
            <line num="155" count="234" type="stmt"/>
            <line num="156" count="234" type="stmt"/>
            <line num="157" count="234" type="stmt"/>
            <line complexity="2" visibility="private" signature="expect(JsonToken) : void" num="160" count="206" type="method"/>
            <line num="161" count="206" type="stmt"/>
            <line falsecount="195" truecount="11" num="161" type="cond"/>
            <line num="162" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextName() : String" num="167" count="62" type="method"/>
            <line num="168" count="62" type="stmt"/>
            <line num="169" count="60" type="stmt"/>
            <line num="170" count="60" type="stmt"/>
            <line num="171" count="60" type="stmt"/>
            <line num="172" count="60" type="stmt"/>
            <line num="173" count="60" type="stmt"/>
            <line num="174" count="60" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextString() : String" num="177" count="35" type="method"/>
            <line num="178" count="35" type="stmt"/>
            <line num="179" count="35" type="stmt"/>
            <line falsecount="34" truecount="1" num="179" type="cond"/>
            <line num="180" count="1" type="stmt"/>
            <line num="183" count="34" type="stmt"/>
            <line num="184" count="34" type="stmt"/>
            <line falsecount="10" truecount="24" num="184" type="cond"/>
            <line num="185" count="24" type="stmt"/>
            <line num="187" count="34" type="stmt"/>
            <line complexity="2" visibility="public" signature="nextBoolean() : boolean" num="190" count="10" type="method"/>
            <line num="191" count="10" type="stmt"/>
            <line num="192" count="8" type="stmt"/>
            <line num="193" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="193" type="cond"/>
            <line num="194" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="nextNull() : void" num="199" count="5" type="method"/>
            <line num="200" count="5" type="stmt"/>
            <line num="201" count="3" type="stmt"/>
            <line num="202" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="202" type="cond"/>
            <line num="203" count="3" type="stmt"/>
            <line complexity="7" visibility="public" signature="nextDouble() : double" num="207" count="12" type="method"/>
            <line num="208" count="12" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="209" type="cond"/>
            <line num="210" count="1" type="stmt"/>
            <line num="213" count="11" type="stmt"/>
            <line num="214" count="10" type="stmt"/>
            <line falsecount="7" truecount="3" num="214" type="cond"/>
            <line num="215" count="3" type="stmt"/>
            <line num="217" count="7" type="stmt"/>
            <line num="218" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="218" type="cond"/>
            <line num="219" count="7" type="stmt"/>
            <line num="221" count="7" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextLong() : long" num="224" count="20" type="method"/>
            <line num="225" count="20" type="stmt"/>
            <line num="226" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="226" type="cond"/>
            <line num="227" count="2" type="stmt"/>
            <line num="230" count="18" type="stmt"/>
            <line num="231" count="17" type="stmt"/>
            <line num="232" count="17" type="stmt"/>
            <line falsecount="8" truecount="9" num="232" type="cond"/>
            <line num="233" count="9" type="stmt"/>
            <line num="235" count="17" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextInt() : int" num="238" count="27" type="method"/>
            <line num="239" count="27" type="stmt"/>
            <line num="240" count="27" type="stmt"/>
            <line falsecount="26" truecount="1" num="240" type="cond"/>
            <line num="241" count="1" type="stmt"/>
            <line num="244" count="26" type="stmt"/>
            <line num="245" count="25" type="stmt"/>
            <line num="246" count="25" type="stmt"/>
            <line falsecount="1" truecount="24" num="246" type="cond"/>
            <line num="247" count="24" type="stmt"/>
            <line num="249" count="25" type="stmt"/>
            <line complexity="5" visibility="package" signature="nextJsonElement() : JsonElement" num="252" count="12" type="method"/>
            <line num="253" count="12" type="stmt"/>
            <line num="254" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="254" type="cond"/>
            <line num="258" count="4" type="stmt"/>
            <line num="260" count="8" type="stmt"/>
            <line num="261" count="8" type="stmt"/>
            <line num="262" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="265" count="3" type="method"/>
            <line num="266" count="3" type="stmt"/>
            <line num="267" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="skipValue() : void" num="270" count="25" type="method"/>
            <line num="271" count="25" type="stmt"/>
            <line falsecount="24" truecount="1" num="271" type="cond"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="275" count="24" type="stmt"/>
            <line num="276" count="24" type="stmt"/>
            <line falsecount="3" truecount="21" num="276" type="cond"/>
            <line num="277" count="21" type="stmt"/>
            <line num="280" count="25" type="stmt"/>
            <line falsecount="3" truecount="22" num="280" type="cond"/>
            <line num="281" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="promoteNameToValue() : void" num="289" count="1" type="method"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="push(Object) : void" num="297" count="253" type="method"/>
            <line num="298" count="253" type="stmt"/>
            <line falsecount="253" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="253" type="stmt"/>
            <line complexity="7" visibility="public" signature="getPath() : String" num="307" count="82" type="method"/>
            <line num="308" count="82" type="stmt"/>
            <line num="309" count="82" type="stmt"/>
            <line falsecount="82" truecount="124" num="309" type="cond"/>
            <line num="310" count="124" type="stmt"/>
            <line falsecount="55" truecount="69" num="310" type="cond"/>
            <line num="311" count="69" type="stmt"/>
            <line falsecount="16" truecount="53" num="311" type="cond"/>
            <line num="312" count="53" type="stmt"/>
            <line num="314" count="55" type="stmt"/>
            <line falsecount="14" truecount="41" num="314" type="cond"/>
            <line num="315" count="41" type="stmt"/>
            <line falsecount="3" truecount="38" num="315" type="cond"/>
            <line num="316" count="38" type="stmt"/>
            <line num="317" count="38" type="stmt"/>
            <line falsecount="8" truecount="30" num="317" type="cond"/>
            <line num="318" count="30" type="stmt"/>
            <line num="323" count="82" type="stmt"/>
            <line complexity="1" visibility="private" signature="locationString() : String" num="326" count="16" type="method"/>
            <line num="327" count="16" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java" name="JsonTreeWriter.java">
            <metrics coveredelements="111" coveredconditionals="28" complexity="47" loc="211" coveredmethods="17" methods="21" elements="138" classes="1" ncloc="160" statements="79" conditionals="38" coveredstatements="66"/>
            <class name="JsonTreeWriter">
               <metrics coveredelements="111" coveredconditionals="28" complexity="47" coveredmethods="17" methods="21" elements="138" statements="79" conditionals="38" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="write(char[],int,int) : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonTreeWriter()" num="57" count="1068" type="method"/>
            <line num="58" count="1068" type="stmt"/>
            <line complexity="2" visibility="public" signature="get() : JsonElement" num="64" count="86" type="method"/>
            <line num="65" count="86" type="stmt"/>
            <line falsecount="86" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="86" type="stmt"/>
            <line complexity="1" visibility="private" signature="peek() : JsonElement" num="71" count="367" type="method"/>
            <line num="72" count="367" type="stmt"/>
            <line complexity="6" visibility="private" signature="put(JsonElement) : void" num="75" count="259" type="method"/>
            <line num="76" count="259" type="stmt"/>
            <line falsecount="129" truecount="130" num="76" type="cond"/>
            <line num="77" count="130" type="stmt"/>
            <line falsecount="13" truecount="117" num="77" type="cond"/>
            <line num="78" count="117" type="stmt"/>
            <line num="79" count="117" type="stmt"/>
            <line num="81" count="130" type="stmt"/>
            <line num="82" count="129" type="stmt"/>
            <line falsecount="35" truecount="94" num="82" type="cond"/>
            <line num="83" count="94" type="stmt"/>
            <line num="85" count="35" type="stmt"/>
            <line num="86" count="35" type="stmt"/>
            <line falsecount="1" truecount="34" num="86" type="cond"/>
            <line num="87" count="34" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginArray() : JsonWriter" num="94" count="21" type="method"/>
            <line num="95" count="21" type="stmt"/>
            <line num="96" count="21" type="stmt"/>
            <line num="97" count="20" type="stmt"/>
            <line num="98" count="20" type="stmt"/>
            <line complexity="4" visibility="public" signature="endArray() : JsonWriter" num="101" count="16" type="method"/>
            <line num="102" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="16" type="stmt"/>
            <line num="106" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="106" type="cond"/>
            <line num="107" count="16" type="stmt"/>
            <line num="108" count="16" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginObject() : JsonWriter" num="113" count="70" type="method"/>
            <line num="114" count="70" type="stmt"/>
            <line num="115" count="70" type="stmt"/>
            <line num="116" count="70" type="stmt"/>
            <line num="117" count="70" type="stmt"/>
            <line complexity="4" visibility="public" signature="endObject() : JsonWriter" num="120" count="69" type="method"/>
            <line num="121" count="69" type="stmt"/>
            <line falsecount="69" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="69" type="stmt"/>
            <line num="125" count="69" type="stmt"/>
            <line falsecount="0" truecount="69" num="125" type="cond"/>
            <line num="126" count="69" type="stmt"/>
            <line num="127" count="69" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="name(String) : JsonWriter" num="132" count="130" type="method"/>
            <line num="133" count="130" type="stmt"/>
            <line falsecount="130" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="130" type="stmt"/>
            <line falsecount="130" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="130" type="stmt"/>
            <line num="140" count="130" type="stmt"/>
            <line falsecount="0" truecount="130" num="140" type="cond"/>
            <line num="141" count="130" type="stmt"/>
            <line num="142" count="130" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(String) : JsonWriter" num="147" count="88" type="method"/>
            <line num="148" count="88" type="stmt"/>
            <line falsecount="78" truecount="10" num="148" type="cond"/>
            <line num="149" count="10" type="stmt"/>
            <line num="151" count="78" type="stmt"/>
            <line num="152" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullValue() : JsonWriter" num="155" count="15" type="method"/>
            <line num="156" count="15" type="stmt"/>
            <line num="157" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(boolean) : JsonWriter" num="160" count="1" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(Boolean) : JsonWriter" num="165" count="5" type="method"/>
            <line num="166" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="5" type="stmt"/>
            <line num="170" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="value(double) : JsonWriter" num="173" count="6" type="method"/>
            <line num="174" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="174" type="cond"/>
            <line num="175" count="3" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(long) : JsonWriter" num="181" count="5" type="method"/>
            <line num="182" count="5" type="stmt"/>
            <line num="183" count="5" type="stmt"/>
            <line complexity="5" visibility="public" signature="value(Number) : JsonWriter" num="186" count="64" type="method"/>
            <line num="187" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="64" type="stmt"/>
            <line falsecount="51" truecount="13" num="191" type="cond"/>
            <line num="192" count="13" type="stmt"/>
            <line num="193" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="193" type="cond"/>
            <line num="194" count="3" type="stmt"/>
            <line num="198" count="61" type="stmt"/>
            <line num="199" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="202" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="close() : void" num="205" count="2" type="method"/>
            <line num="206" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="206" type="cond"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java" name="MapTypeAdapterFactory.java">
            <metrics coveredelements="118" coveredconditionals="30" complexity="26" loc="264" coveredmethods="7" methods="7" elements="130" classes="2" ncloc="160" statements="87" conditionals="36" coveredstatements="81"/>
            <class name="MapTypeAdapterFactory">
               <metrics coveredelements="21" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="14"/>
            </class>
            <class name="MapTypeAdapterFactory.Adapter">
               <metrics coveredelements="97" coveredconditionals="26" complexity="20" coveredmethods="4" methods="4" elements="109" statements="73" conditionals="32" coveredstatements="67"/>
            </class>
            <line complexity="1" visibility="public" signature="MapTypeAdapterFactory(ConstructorConstructor,boolean)" num="109" count="832" type="method"/>
            <line num="111" count="832" type="stmt"/>
            <line num="112" count="832" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="115" count="609" type="method"/>
            <line num="116" count="609" type="stmt"/>
            <line num="118" count="611" type="stmt"/>
            <line num="119" count="610" type="stmt"/>
            <line falsecount="115" truecount="495" num="119" type="cond"/>
            <line num="120" count="494" type="stmt"/>
            <line num="123" count="115" type="stmt"/>
            <line num="124" count="115" type="stmt"/>
            <line num="125" count="115" type="stmt"/>
            <line num="126" count="115" type="stmt"/>
            <line num="127" count="115" type="stmt"/>
            <line num="129" count="115" type="stmt"/>
            <line num="133" count="115" type="stmt"/>
            <line complexity="3" visibility="private" signature="getKeyAdapter(Gson,Type) : TypeAdapter&lt;?&gt;" num="139" count="115" type="method"/>
            <line num="140" count="115" type="stmt"/>
            <line falsecount="114" truecount="1" num="140" type="cond"/>
            <line complexity="1" visibility="public" signature="Adapter(Gson,Type,TypeAdapter&lt;K&gt;,Type,TypeAdapter&lt;V&gt;,ObjectConstructor&lt;? extends Map&lt;K, V&gt;&gt;)" num="150" count="115" type="method"/>
            <line num="153" count="115" type="stmt"/>
            <line num="155" count="115" type="stmt"/>
            <line num="157" count="115" type="stmt"/>
            <line complexity="7" visibility="public" signature="read(JsonReader) : Map&lt;K, V&gt;" num="160" count="47" type="method"/>
            <line num="161" count="47" type="stmt"/>
            <line num="162" count="47" type="stmt"/>
            <line falsecount="46" truecount="1" num="162" type="cond"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="167" count="46" type="stmt"/>
            <line num="169" count="46" type="stmt"/>
            <line falsecount="42" truecount="4" num="169" type="cond"/>
            <line num="170" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line falsecount="3" truecount="7" num="171" type="cond"/>
            <line num="172" count="7" type="stmt"/>
            <line num="173" count="7" type="stmt"/>
            <line num="174" count="7" type="stmt"/>
            <line num="175" count="7" type="stmt"/>
            <line num="176" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="176" type="cond"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="6" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line num="183" count="42" type="stmt"/>
            <line num="184" count="40" type="stmt"/>
            <line falsecount="37" truecount="56" num="184" type="cond"/>
            <line num="185" count="56" type="stmt"/>
            <line num="186" count="56" type="stmt"/>
            <line num="187" count="55" type="stmt"/>
            <line num="188" count="55" type="stmt"/>
            <line num="189" count="55" type="stmt"/>
            <line falsecount="54" truecount="1" num="189" type="cond"/>
            <line num="190" count="1" type="stmt"/>
            <line num="193" count="37" type="stmt"/>
            <line num="195" count="40" type="stmt"/>
            <line complexity="6" visibility="public" signature="write(JsonWriter,Map&lt;K, V&gt;) : void" num="198" count="69" type="method"/>
            <line num="199" count="69" type="stmt"/>
            <line falsecount="66" truecount="3" num="199" type="cond"/>
            <line num="200" count="3" type="stmt"/>
            <line num="201" count="3" type="stmt"/>
            <line num="204" count="66" type="stmt"/>
            <line falsecount="10" truecount="56" num="204" type="cond"/>
            <line num="205" count="56" type="stmt"/>
            <line num="206" count="56" type="stmt"/>
            <line num="207" count="86" type="stmt"/>
            <line num="208" count="86" type="stmt"/>
            <line num="210" count="56" type="stmt"/>
            <line num="211" count="56" type="stmt"/>
            <line num="214" count="10" type="stmt"/>
            <line num="215" count="10" type="stmt"/>
            <line num="217" count="10" type="stmt"/>
            <line num="218" count="10" type="stmt"/>
            <line num="219" count="16" type="stmt"/>
            <line num="220" count="16" type="stmt"/>
            <line num="221" count="16" type="stmt"/>
            <line num="222" count="16" type="stmt"/>
            <line num="225" count="10" type="stmt"/>
            <line falsecount="7" truecount="3" num="225" type="cond"/>
            <line num="226" count="3" type="stmt"/>
            <line num="227" count="3" type="stmt"/>
            <line falsecount="3" truecount="5" num="227" type="cond"/>
            <line num="228" count="5" type="stmt"/>
            <line num="229" count="5" type="stmt"/>
            <line num="230" count="5" type="stmt"/>
            <line num="231" count="5" type="stmt"/>
            <line num="233" count="3" type="stmt"/>
            <line num="235" count="7" type="stmt"/>
            <line num="236" count="7" type="stmt"/>
            <line falsecount="7" truecount="11" num="236" type="cond"/>
            <line num="237" count="11" type="stmt"/>
            <line num="238" count="11" type="stmt"/>
            <line num="239" count="11" type="stmt"/>
            <line num="241" count="7" type="stmt"/>
            <line complexity="6" visibility="private" signature="keyToString(JsonElement) : String" num="245" count="11" type="method"/>
            <line num="246" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="246" type="cond"/>
            <line num="247" count="11" type="stmt"/>
            <line num="248" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="252" type="cond"/>
            <line num="253" count="11" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java" name="ObjectTypeAdapter.java">
            <metrics coveredelements="52" coveredconditionals="10" complexity="15" loc="109" coveredmethods="4" methods="4" elements="54" classes="1" ncloc="74" statements="40" conditionals="10" coveredstatements="38"/>
            <class name="ObjectTypeAdapter">
               <metrics coveredelements="52" coveredconditionals="10" complexity="15" coveredmethods="4" methods="4" elements="54" statements="40" conditionals="10" coveredstatements="38"/>
            </class>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="39" count="2275" type="method"/>
            <line num="41" count="2276" type="stmt"/>
            <line falsecount="2173" truecount="104" num="41" type="cond"/>
            <line num="42" count="104" type="stmt"/>
            <line num="44" count="2171" type="stmt"/>
            <line complexity="1" visibility="package" signature="ObjectTypeAdapter(Gson)" num="50" count="104" type="method"/>
            <line num="51" count="104" type="stmt"/>
            <line complexity="9" visibility="public" signature="read(JsonReader) : Object" num="54" count="39" type="method"/>
            <line num="55" count="39" type="stmt"/>
            <line num="56" count="39" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line falsecount="2" truecount="3" num="60" type="cond"/>
            <line num="61" count="3" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="5" type="stmt"/>
            <line num="67" count="5" type="stmt"/>
            <line num="68" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line falsecount="5" truecount="13" num="69" type="cond"/>
            <line num="70" count="13" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="5" type="stmt"/>
            <line num="75" count="7" type="stmt"/>
            <line num="76" count="7" type="stmt"/>
            <line num="78" count="21" type="stmt"/>
            <line num="79" count="21" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(JsonWriter,Object) : void" num="93" count="35" type="method"/>
            <line num="95" count="35" type="stmt"/>
            <line falsecount="25" truecount="10" num="95" type="cond"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line num="100" count="25" type="stmt"/>
            <line num="101" count="25" type="stmt"/>
            <line falsecount="24" truecount="1" num="101" type="cond"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="24" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java" name="ReflectiveTypeAdapterFactory.java">
            <metrics coveredelements="153" coveredconditionals="38" complexity="40" loc="254" coveredmethods="14" methods="14" elements="158" classes="3" ncloc="209" statements="104" conditionals="40" coveredstatements="101"/>
            <class name="ReflectiveTypeAdapterFactory">
               <metrics coveredelements="109" coveredconditionals="28" complexity="27" coveredmethods="10" methods="10" elements="112" statements="72" conditionals="30" coveredstatements="71"/>
            </class>
            <class name="ReflectiveTypeAdapterFactory.BoundField">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="ReflectiveTypeAdapterFactory.Adapter">
               <metrics coveredelements="40" coveredconditionals="10" complexity="12" coveredmethods="3" methods="3" elements="42" statements="29" conditionals="10" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="ReflectiveTypeAdapterFactory(ConstructorConstructor,FieldNamingStrategy,Excluder,JsonAdapterAnnotationTypeAdapterFactory)" num="55" count="832" type="method"/>
            <line num="58" count="832" type="stmt"/>
            <line num="59" count="832" type="stmt"/>
            <line num="60" count="832" type="stmt"/>
            <line num="61" count="832" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeField(Field,boolean) : boolean" num="64" count="3228" type="method"/>
            <line num="65" count="3227" type="stmt"/>
            <line complexity="1" visibility="package" signature="excludeField(Field,boolean,Excluder) : boolean" num="68" count="3228" type="method"/>
            <line num="69" count="3227" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFieldNames(Field) : List&lt;String&gt;" num="73" count="1128" type="method"/>
            <line num="74" count="1129" type="stmt"/>
            <line num="75" count="1129" type="stmt"/>
            <line falsecount="20" truecount="1109" num="75" type="cond"/>
            <line num="76" count="1109" type="stmt"/>
            <line num="77" count="1109" type="stmt"/>
            <line num="80" count="20" type="stmt"/>
            <line num="81" count="20" type="stmt"/>
            <line num="82" count="20" type="stmt"/>
            <line falsecount="3" truecount="17" num="82" type="cond"/>
            <line num="83" count="17" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="94" count="465" type="method"/>
            <line num="95" count="464" type="stmt"/>
            <line num="97" count="465" type="stmt"/>
            <line falsecount="464" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="465" type="stmt"/>
            <line num="102" count="467" type="stmt"/>
            <line complexity="3" visibility="private" signature="createBoundField(Gson,Field,String,TypeToken&lt;?&gt;,boolean,boolean) : ReflectiveTypeAdapterFactory.BoundField" num="105" count="1135" type="method"/>
            <line num="108" count="1135" type="stmt"/>
            <line num="110" count="1135" type="stmt"/>
            <line num="111" count="1135" type="stmt"/>
            <line num="112" count="1135" type="stmt"/>
            <line falsecount="1122" truecount="13" num="112" type="cond"/>
            <line num="113" count="13" type="stmt"/>
            <line num="116" count="1135" type="stmt"/>
            <line num="117" count="1135" type="stmt"/>
            <line num="117" count="1122" type="stmt"/>
            <line falsecount="13" truecount="1122" num="117" type="cond"/>
            <line num="119" count="1134" type="stmt"/>
            <line num="120" count="1135" type="stmt"/>
            <line complexity="2" visibility="package" signature="write(JsonWriter,Object) : void" num="121" count="3100" type="method"/>
            <line num="124" count="3102" type="stmt"/>
            <line num="125" count="3103" type="stmt"/>
            <line falsecount="3087" truecount="12" num="125" type="cond"/>
            <line num="127" count="3104" type="stmt"/>
            <line complexity="3" visibility="package" signature="read(JsonReader,Object) : void" num="129" count="707" type="method"/>
            <line num="131" count="719" type="stmt"/>
            <line num="132" count="717" type="stmt"/>
            <line falsecount="1" truecount="722" num="132" type="cond"/>
            <line num="133" count="721" type="stmt"/>
            <line complexity="2" visibility="public" signature="writeField(Object) : boolean" num="136" count="3108" type="method"/>
            <line num="137" count="3114" type="stmt"/>
            <line num="137" count="9" type="stmt"/>
            <line falsecount="3110" truecount="9" num="137" type="cond"/>
            <line num="138" count="3109" type="stmt"/>
            <line num="139" count="3102" type="stmt"/>
            <line complexity="9" visibility="private" signature="getBoundFields(Gson,TypeToken&lt;?&gt;,Class&lt;?&gt;) : Map&lt;String, BoundField&gt;" num="144" count="466" type="method"/>
            <line num="145" count="465" type="stmt"/>
            <line num="146" count="467" type="stmt"/>
            <line falsecount="460" truecount="6" num="146" type="cond"/>
            <line num="147" count="6" type="stmt"/>
            <line num="150" count="460" type="stmt"/>
            <line num="151" count="460" type="stmt"/>
            <line falsecount="460" truecount="527" num="151" type="cond"/>
            <line num="152" count="527" type="stmt"/>
            <line num="153" count="527" type="stmt"/>
            <line num="154" count="1615" type="stmt"/>
            <line num="155" count="1615" type="stmt"/>
            <line num="156" count="1615" type="stmt"/>
            <line falsecount="1129" truecount="486" num="156" type="cond"/>
            <line num="157" count="486" type="stmt"/>
            <line num="159" count="1129" type="stmt"/>
            <line num="160" count="1129" type="stmt"/>
            <line num="161" count="1129" type="stmt"/>
            <line num="162" count="1128" type="stmt"/>
            <line num="163" count="1129" type="stmt"/>
            <line falsecount="1129" truecount="1135" num="163" type="cond"/>
            <line num="164" count="1135" type="stmt"/>
            <line num="165" count="1135" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line falsecount="1129" truecount="6" num="165" type="cond"/>
            <line num="166" count="1134" type="stmt"/>
            <line num="168" count="1135" type="stmt"/>
            <line num="169" count="1135" type="stmt"/>
            <line num="169" count="1135" type="stmt"/>
            <line falsecount="0" truecount="1135" num="169" type="cond"/>
            <line num="171" count="1129" type="stmt"/>
            <line falsecount="1128" truecount="1" num="171" type="cond"/>
            <line num="172" count="1" type="stmt"/>
            <line num="176" count="526" type="stmt"/>
            <line num="177" count="526" type="stmt"/>
            <line num="179" count="460" type="stmt"/>
            <line complexity="1" visibility="protected" signature="BoundField(String,boolean,boolean)" num="187" count="1135" type="method"/>
            <line num="188" count="1135" type="stmt"/>
            <line num="189" count="1135" type="stmt"/>
            <line num="190" count="1135" type="stmt"/>
            <line complexity="1" visibility="package" signature="Adapter(ObjectConstructor&lt;T&gt;,Map&lt;String, BoundField&gt;)" num="201" count="466" type="method"/>
            <line num="202" count="466" type="stmt"/>
            <line num="203" count="466" type="stmt"/>
            <line complexity="7" visibility="public" signature="read(JsonReader) : T" num="206" count="311" type="method"/>
            <line num="207" count="313" type="stmt"/>
            <line falsecount="312" truecount="5" num="207" type="cond"/>
            <line num="208" count="5" type="stmt"/>
            <line num="209" count="5" type="stmt"/>
            <line num="212" count="311" type="stmt"/>
            <line num="214" count="309" type="stmt"/>
            <line num="215" count="314" type="stmt"/>
            <line num="216" count="309" type="stmt"/>
            <line falsecount="299" truecount="744" num="216" type="cond"/>
            <line num="217" count="752" type="stmt"/>
            <line num="218" count="742" type="stmt"/>
            <line num="219" count="746" type="stmt"/>
            <line falsecount="726" truecount="22" num="219" type="cond"/>
            <line num="220" count="22" type="stmt"/>
            <line num="222" count="725" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="305" type="stmt"/>
            <line num="231" count="305" type="stmt"/>
            <line complexity="4" visibility="public" signature="write(JsonWriter,T) : void" num="234" count="2423" type="method"/>
            <line num="235" count="2427" type="stmt"/>
            <line falsecount="2416" truecount="13" num="235" type="cond"/>
            <line num="236" count="13" type="stmt"/>
            <line num="237" count="13" type="stmt"/>
            <line num="240" count="2417" type="stmt"/>
            <line num="241" count="2415" type="stmt"/>
            <line num="242" count="2415" type="stmt"/>
            <line num="243" count="3107" type="stmt"/>
            <line falsecount="15" truecount="3098" num="243" type="cond"/>
            <line num="244" count="3097" type="stmt"/>
            <line num="245" count="3105" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="434" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java" name="TreeTypeAdapter.java">
            <metrics coveredelements="63" coveredconditionals="17" complexity="21" loc="165" coveredmethods="11" methods="12" elements="66" classes="3" ncloc="117" statements="36" conditionals="18" coveredstatements="35"/>
            <class name="TreeTypeAdapter">
               <metrics coveredelements="39" coveredconditionals="9" complexity="12" coveredmethods="6" methods="7" elements="42" statements="25" conditionals="10" coveredstatements="24"/>
            </class>
            <class name="TreeTypeAdapter.SingleTypeFactory">
               <metrics coveredelements="18" coveredconditionals="8" complexity="6" coveredmethods="2" methods="2" elements="18" statements="8" conditionals="8" coveredstatements="8"/>
            </class>
            <class name="TreeTypeAdapter.GsonContextImpl">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="TreeTypeAdapter(JsonSerializer&lt;T&gt;,JsonDeserializer&lt;T&gt;,Gson,TypeToken&lt;T&gt;,TypeAdapterFactory)" num="52" count="87" type="method"/>
            <line num="54" count="87" type="stmt"/>
            <line num="55" count="87" type="stmt"/>
            <line num="56" count="87" type="stmt"/>
            <line num="57" count="87" type="stmt"/>
            <line num="58" count="87" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : T" num="61" count="50" type="method"/>
            <line num="62" count="50" type="stmt"/>
            <line falsecount="49" truecount="1" num="62" type="cond"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="49" type="stmt"/>
            <line num="66" count="49" type="stmt"/>
            <line falsecount="48" truecount="1" num="66" type="cond"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="48" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(JsonWriter,T) : void" num="72" count="1053" type="method"/>
            <line num="73" count="1053" type="stmt"/>
            <line falsecount="1038" truecount="15" num="73" type="cond"/>
            <line num="74" count="15" type="stmt"/>
            <line num="75" count="15" type="stmt"/>
            <line num="77" count="1038" type="stmt"/>
            <line falsecount="1037" truecount="1" num="77" type="cond"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1037" type="stmt"/>
            <line num="82" count="63" type="stmt"/>
            <line complexity="2" visibility="private" signature="delegate() : TypeAdapter&lt;T&gt;" num="85" count="16" type="method"/>
            <line num="86" count="16" type="stmt"/>
            <line num="87" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="87" type="cond"/>
            <line complexity="1" visibility="public" signature="newFactory(TypeToken&lt;?&gt;,Object) : TypeAdapterFactory" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFactoryWithMatchRawType(TypeToken&lt;?&gt;,Object) : TypeAdapterFactory" num="103" count="82" type="method"/>
            <line num="106" count="82" type="stmt"/>
            <line num="107" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="newTypeHierarchyFactory(Class&lt;?&gt;,Object) : TypeAdapterFactory" num="114" count="18" type="method"/>
            <line num="116" count="18" type="stmt"/>
            <line complexity="3" visibility="package" signature="SingleTypeFactory(Object,TypeToken&lt;?&gt;,boolean,Class&lt;?&gt;)" num="126" count="100" type="method"/>
            <line num="128" count="100" type="stmt"/>
            <line falsecount="38" truecount="62" num="128" type="cond"/>
            <line num="131" count="100" type="stmt"/>
            <line falsecount="33" truecount="67" num="131" type="cond"/>
            <line num="134" count="100" type="stmt"/>
            <line num="135" count="100" type="stmt"/>
            <line num="136" count="100" type="stmt"/>
            <line num="137" count="100" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="140" count="176" type="method"/>
            <line num="143" count="176" type="stmt"/>
            <line falsecount="24" truecount="152" num="143" type="cond"/>
            <line num="146" count="176" type="stmt"/>
            <line falsecount="95" truecount="81" num="146" type="cond"/>
            <line complexity="1" visibility="public" signature="serialize(Object) : JsonElement" num="154" count="976" type="method"/>
            <line num="155" count="976" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Object,Type) : JsonElement" num="157" count="38" type="method"/>
            <line num="158" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type) : R" num="160" count="21" type="method"/>
            <line num="162" count="21" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java" name="TypeAdapterRuntimeTypeWrapper.java">
            <metrics coveredelements="29" coveredconditionals="8" complexity="11" loc="82" coveredmethods="4" methods="4" elements="29" classes="1" ncloc="47" statements="17" conditionals="8" coveredstatements="17"/>
            <class name="TypeAdapterRuntimeTypeWrapper">
               <metrics coveredelements="29" coveredconditionals="8" complexity="11" coveredmethods="4" methods="4" elements="29" statements="17" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="package" signature="TypeAdapterRuntimeTypeWrapper(Gson,TypeAdapter&lt;T&gt;,Type)" num="33" count="3608" type="method"/>
            <line num="34" count="3611" type="stmt"/>
            <line num="35" count="3614" type="stmt"/>
            <line num="36" count="3615" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : T" num="39" count="423" type="method"/>
            <line num="41" count="423" type="stmt"/>
            <line complexity="4" visibility="public" signature="write(JsonWriter,T) : void" num="44" count="5638" type="method"/>
            <line num="53" count="5642" type="stmt"/>
            <line num="54" count="5643" type="stmt"/>
            <line num="55" count="5651" type="stmt"/>
            <line falsecount="4891" truecount="757" num="55" type="cond"/>
            <line num="56" count="756" type="stmt"/>
            <line num="57" count="754" type="stmt"/>
            <line falsecount="39" truecount="715" num="57" type="cond"/>
            <line num="59" count="717" type="stmt"/>
            <line num="60" count="39" type="stmt"/>
            <line falsecount="14" truecount="25" num="60" type="cond"/>
            <line num="63" count="25" type="stmt"/>
            <line num="66" count="14" type="stmt"/>
            <line num="69" count="5641" type="stmt"/>
            <line complexity="5" visibility="private" signature="getRuntimeTypeIfMoreSpecific(Type,Object) : Type" num="75" count="5638" type="method"/>
            <line num="76" count="5644" type="stmt"/>
            <line falsecount="2201" truecount="3449" num="76" type="cond"/>
            <line num="78" count="3446" type="stmt"/>
            <line num="80" count="5645" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java" name="TypeAdapters.java">
            <metrics coveredelements="528" coveredconditionals="135" complexity="186" loc="903" coveredmethods="70" methods="78" elements="585" classes="2" ncloc="803" statements="357" conditionals="150" coveredstatements="323"/>
            <class name="TypeAdapters">
               <metrics coveredelements="500" coveredconditionals="129" complexity="177" coveredmethods="66" methods="74" elements="551" statements="335" conditionals="142" coveredstatements="305"/>
            </class>
            <class name="TypeAdapters.EnumTypeAdapter">
               <metrics coveredelements="28" coveredconditionals="6" complexity="9" coveredmethods="4" methods="4" elements="34" statements="22" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="private" signature="TypeAdapters()" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Class) : void" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Class" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="read(JsonReader) : BitSet" num="86" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line falsecount="4" truecount="41" num="91" type="cond"/>
            <line num="92" count="41" type="stmt"/>
            <line num="93" count="41" type="stmt"/>
            <line num="94" count="21" type="stmt"/>
            <line num="95" count="21" type="stmt"/>
            <line num="96" count="21" type="stmt"/>
            <line num="97" count="11" type="stmt"/>
            <line num="98" count="11" type="stmt"/>
            <line num="99" count="11" type="stmt"/>
            <line num="100" count="9" type="stmt"/>
            <line num="101" count="9" type="stmt"/>
            <line num="102" count="9" type="stmt"/>
            <line num="103" count="9" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="9" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="41" type="stmt"/>
            <line falsecount="17" truecount="24" num="112" type="cond"/>
            <line num="113" count="24" type="stmt"/>
            <line num="115" count="41" type="stmt"/>
            <line num="116" count="41" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(JsonWriter,BitSet) : void" num="122" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line falsecount="2" truecount="19" num="124" type="cond"/>
            <line num="125" count="19" type="stmt"/>
            <line falsecount="8" truecount="11" num="125" type="cond"/>
            <line num="126" count="19" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Boolean" num="135" count="62" type="method"/>
            <line num="137" count="62" type="stmt"/>
            <line num="138" count="62" type="stmt"/>
            <line falsecount="61" truecount="1" num="138" type="cond"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="61" type="stmt"/>
            <line falsecount="56" truecount="5" num="141" type="cond"/>
            <line num="143" count="5" type="stmt"/>
            <line num="145" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Boolean) : void" num="147" count="95" type="method"/>
            <line num="149" count="95" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Boolean" num="158" count="2" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Boolean) : void" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Number" num="175" count="7" type="method"/>
            <line num="177" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="177" type="cond"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="188" count="3" type="method"/>
            <line num="190" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Number" num="198" count="5" type="method"/>
            <line num="200" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="200" type="cond"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="210" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Number" num="220" count="325" type="method"/>
            <line num="222" count="326" type="stmt"/>
            <line falsecount="325" truecount="4" num="222" type="cond"/>
            <line num="223" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line num="226" count="326" type="stmt"/>
            <line num="227" count="328" type="stmt"/>
            <line num="229" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="232" count="479" type="method"/>
            <line num="234" count="487" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : AtomicInteger" num="241" count="1" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,AtomicInteger) : void" num="248" count="1" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : AtomicBoolean" num="256" count="1" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,AtomicBoolean) : void" num="259" count="1" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="read(JsonReader) : AtomicIntegerArray" num="267" count="1" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="270" type="cond"/>
            <line num="271" count="3" type="stmt"/>
            <line num="272" count="3" type="stmt"/>
            <line num="273" count="3" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="281" type="cond"/>
            <line num="282" count="3" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,AtomicIntegerArray) : void" num="286" count="1" type="method"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="288" type="cond"/>
            <line num="289" count="3" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Number" num="298" count="99" type="method"/>
            <line num="300" count="99" type="stmt"/>
            <line falsecount="96" truecount="3" num="300" type="cond"/>
            <line num="301" count="3" type="stmt"/>
            <line num="302" count="3" type="stmt"/>
            <line num="304" count="96" type="stmt"/>
            <line num="305" count="96" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="310" count="129" type="method"/>
            <line num="312" count="129" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Number" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="325" count="6" type="method"/>
            <line num="327" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Number" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="340" count="12" type="method"/>
            <line num="342" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="read(JsonReader) : Number" num="347" count="10" type="method"/>
            <line num="349" count="10" type="stmt"/>
            <line num="350" count="10" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="6" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="7" type="stmt"/>
            <line num="357" count="2" type="stmt"/>
            <line num="358" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="361" count="2" type="method"/>
            <line num="363" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Character" num="370" count="8" type="method"/>
            <line num="372" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="372" type="cond"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="376" count="7" type="stmt"/>
            <line num="377" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Character) : void" num="382" count="8" type="method"/>
            <line num="384" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="384" type="cond"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : String" num="392" count="470" type="method"/>
            <line num="394" count="477" type="stmt"/>
            <line num="395" count="477" type="stmt"/>
            <line falsecount="470" truecount="12" num="395" type="cond"/>
            <line num="396" count="12" type="stmt"/>
            <line num="397" count="12" type="stmt"/>
            <line num="400" count="471" type="stmt"/>
            <line falsecount="471" truecount="1" num="400" type="cond"/>
            <line num="401" count="1" type="stmt"/>
            <line num="403" count="471" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,String) : void" num="405" count="587" type="method"/>
            <line num="407" count="597" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : BigDecimal" num="412" count="14" type="method"/>
            <line num="413" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="413" type="cond"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="417" count="13" type="stmt"/>
            <line num="418" count="13" type="stmt"/>
            <line num="420" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,BigDecimal) : void" num="424" count="7" type="method"/>
            <line num="425" count="7" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : BigInteger" num="430" count="9" type="method"/>
            <line num="431" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="431" type="cond"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="435" count="8" type="stmt"/>
            <line num="436" count="8" type="stmt"/>
            <line num="438" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,BigInteger) : void" num="442" count="6" type="method"/>
            <line num="443" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : StringBuilder" num="450" count="2" type="method"/>
            <line num="452" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="452" type="cond"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,StringBuilder) : void" num="458" count="2" type="method"/>
            <line num="460" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="460" type="cond"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : StringBuffer" num="468" count="2" type="method"/>
            <line num="470" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="470" type="cond"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,StringBuffer) : void" num="476" count="2" type="method"/>
            <line num="478" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="478" type="cond"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : URL" num="486" count="3" type="method"/>
            <line num="488" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="488" type="cond"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="1" type="stmt"/>
            <line num="492" count="2" type="stmt"/>
            <line num="493" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="493" type="cond"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,URL) : void" num="495" count="3" type="method"/>
            <line num="497" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="497" type="cond"/>
            <line complexity="4" visibility="public" signature="read(JsonReader) : URI" num="504" count="2" type="method"/>
            <line num="506" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="506" type="cond"/>
            <line num="507" count="1" type="stmt"/>
            <line num="508" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="512" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,URI) : void" num="517" count="2" type="method"/>
            <line num="519" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="519" type="cond"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : InetAddress" num="526" count="2" type="method"/>
            <line num="528" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="528" type="cond"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,InetAddress) : void" num="535" count="2" type="method"/>
            <line num="537" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="537" type="cond"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : UUID" num="545" count="2" type="method"/>
            <line num="547" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="547" type="cond"/>
            <line num="548" count="1" type="stmt"/>
            <line num="549" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,UUID) : void" num="553" count="2" type="method"/>
            <line num="555" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="555" type="cond"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Currency" num="562" count="1" type="method"/>
            <line num="564" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Currency) : void" num="566" count="1" type="method"/>
            <line num="568" count="1" type="stmt"/>
            <line complexity="9" visibility="public" signature="read(JsonReader) : Calendar" num="581" count="4" type="method"/>
            <line num="583" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="583" type="cond"/>
            <line num="584" count="2" type="stmt"/>
            <line num="585" count="2" type="stmt"/>
            <line num="587" count="2" type="stmt"/>
            <line num="588" count="2" type="stmt"/>
            <line num="589" count="2" type="stmt"/>
            <line num="590" count="2" type="stmt"/>
            <line num="591" count="2" type="stmt"/>
            <line num="592" count="2" type="stmt"/>
            <line num="593" count="2" type="stmt"/>
            <line num="594" count="2" type="stmt"/>
            <line falsecount="2" truecount="12" num="594" type="cond"/>
            <line num="595" count="12" type="stmt"/>
            <line num="596" count="12" type="stmt"/>
            <line num="597" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="597" type="cond"/>
            <line num="598" count="2" type="stmt"/>
            <line num="599" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="599" type="cond"/>
            <line num="600" count="2" type="stmt"/>
            <line num="601" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="601" type="cond"/>
            <line num="602" count="2" type="stmt"/>
            <line num="603" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="603" type="cond"/>
            <line num="604" count="2" type="stmt"/>
            <line num="605" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="605" type="cond"/>
            <line num="606" count="2" type="stmt"/>
            <line num="607" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="607" type="cond"/>
            <line num="608" count="2" type="stmt"/>
            <line num="611" count="2" type="stmt"/>
            <line num="612" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Calendar) : void" num="615" count="4" type="method"/>
            <line num="617" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="617" type="cond"/>
            <line num="618" count="2" type="stmt"/>
            <line num="619" count="2" type="stmt"/>
            <line num="621" count="2" type="stmt"/>
            <line num="622" count="2" type="stmt"/>
            <line num="623" count="2" type="stmt"/>
            <line num="624" count="2" type="stmt"/>
            <line num="625" count="2" type="stmt"/>
            <line num="626" count="2" type="stmt"/>
            <line num="627" count="2" type="stmt"/>
            <line num="628" count="2" type="stmt"/>
            <line num="629" count="2" type="stmt"/>
            <line num="630" count="2" type="stmt"/>
            <line num="631" count="2" type="stmt"/>
            <line num="632" count="2" type="stmt"/>
            <line num="633" count="2" type="stmt"/>
            <line num="634" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="read(JsonReader) : Locale" num="642" count="4" type="method"/>
            <line num="644" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="644" type="cond"/>
            <line num="645" count="1" type="stmt"/>
            <line num="646" count="1" type="stmt"/>
            <line num="648" count="3" type="stmt"/>
            <line num="649" count="3" type="stmt"/>
            <line num="650" count="3" type="stmt"/>
            <line num="651" count="3" type="stmt"/>
            <line num="652" count="3" type="stmt"/>
            <line num="653" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="653" type="cond"/>
            <line num="654" count="3" type="stmt"/>
            <line num="656" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="656" type="cond"/>
            <line num="657" count="2" type="stmt"/>
            <line num="659" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="659" type="cond"/>
            <line num="660" count="1" type="stmt"/>
            <line num="662" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="662" type="cond"/>
            <line num="663" count="1" type="stmt"/>
            <line num="664" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="664" type="cond"/>
            <line num="665" count="1" type="stmt"/>
            <line num="667" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Locale) : void" num="670" count="4" type="method"/>
            <line num="672" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="672" type="cond"/>
            <line complexity="14" visibility="public" signature="read(JsonReader) : JsonElement" num="679" count="292" type="method"/>
            <line num="680" count="292" type="stmt"/>
            <line falsecount="285" truecount="7" num="680" type="cond"/>
            <line num="681" count="7" type="stmt"/>
            <line num="684" count="285" type="stmt"/>
            <line num="685" count="94" type="stmt"/>
            <line num="686" count="94" type="stmt"/>
            <line num="687" count="76" type="stmt"/>
            <line num="688" count="76" type="stmt"/>
            <line num="689" count="76" type="stmt"/>
            <line num="690" count="11" type="stmt"/>
            <line num="691" count="11" type="stmt"/>
            <line num="692" count="7" type="stmt"/>
            <line num="693" count="7" type="stmt"/>
            <line num="694" count="7" type="stmt"/>
            <line num="695" count="42" type="stmt"/>
            <line num="696" count="42" type="stmt"/>
            <line num="697" count="42" type="stmt"/>
            <line num="698" count="42" type="stmt"/>
            <line falsecount="41" truecount="81" num="698" type="cond"/>
            <line num="699" count="81" type="stmt"/>
            <line num="701" count="41" type="stmt"/>
            <line num="702" count="41" type="stmt"/>
            <line num="703" count="55" type="stmt"/>
            <line num="704" count="55" type="stmt"/>
            <line num="705" count="55" type="stmt"/>
            <line num="706" count="55" type="stmt"/>
            <line falsecount="55" truecount="92" num="706" type="cond"/>
            <line num="707" count="92" type="stmt"/>
            <line num="709" count="55" type="stmt"/>
            <line num="710" count="55" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="write(JsonWriter,JsonElement) : void" num="720" count="329" type="method"/>
            <line num="721" count="329" type="stmt"/>
            <line falsecount="295" truecount="34" num="721" type="cond"/>
            <line num="722" count="34" type="stmt"/>
            <line num="723" count="295" type="stmt"/>
            <line falsecount="95" truecount="200" num="723" type="cond"/>
            <line num="724" count="200" type="stmt"/>
            <line num="725" count="200" type="stmt"/>
            <line falsecount="104" truecount="96" num="725" type="cond"/>
            <line num="726" count="96" type="stmt"/>
            <line num="727" count="104" type="stmt"/>
            <line falsecount="94" truecount="10" num="727" type="cond"/>
            <line num="728" count="10" type="stmt"/>
            <line num="730" count="94" type="stmt"/>
            <line num="733" count="95" type="stmt"/>
            <line falsecount="72" truecount="23" num="733" type="cond"/>
            <line num="734" count="23" type="stmt"/>
            <line num="735" count="23" type="stmt"/>
            <line num="736" count="91" type="stmt"/>
            <line num="738" count="23" type="stmt"/>
            <line num="740" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="740" type="cond"/>
            <line num="741" count="72" type="stmt"/>
            <line num="742" count="72" type="stmt"/>
            <line num="743" count="126" type="stmt"/>
            <line num="744" count="126" type="stmt"/>
            <line num="746" count="72" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="EnumTypeAdapter(Class&lt;T&gt;)" num="761" count="20" type="method"/>
            <line num="762" count="20" type="stmt"/>
            <line num="763" count="20" type="stmt"/>
            <line num="764" count="74" type="stmt"/>
            <line falsecount="52" truecount="22" num="764" type="cond"/>
            <line num="765" count="22" type="stmt"/>
            <line num="767" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : Void" num="768" count="52" type="method"/>
            <line num="769" count="52" type="stmt"/>
            <line num="770" count="52" type="stmt"/>
            <line num="773" count="52" type="stmt"/>
            <line num="775" count="52" type="stmt"/>
            <line num="776" count="52" type="stmt"/>
            <line num="777" count="52" type="stmt"/>
            <line falsecount="50" truecount="2" num="777" type="cond"/>
            <line num="778" count="2" type="stmt"/>
            <line num="779" count="2" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line num="783" count="52" type="stmt"/>
            <line num="784" count="52" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : T" num="790" count="19" type="method"/>
            <line num="791" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="791" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line num="795" count="19" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,T) : void" num="798" count="19" type="method"/>
            <line num="799" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="799" type="cond"/>
            <line complexity="4" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="804" count="485" type="method"/>
            <line num="806" count="484" type="stmt"/>
            <line num="807" count="485" type="stmt"/>
            <line falsecount="20" truecount="466" num="807" type="cond"/>
            <line num="808" count="465" type="stmt"/>
            <line num="810" count="20" type="stmt"/>
            <line falsecount="13" truecount="7" num="810" type="cond"/>
            <line num="811" count="7" type="stmt"/>
            <line num="813" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFactory(TypeToken&lt;TT&gt;,TypeAdapter&lt;TT&gt;) : TypeAdapterFactory" num="817" count="29" type="method"/>
            <line num="819" count="29" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="820" count="37" type="method"/>
            <line num="822" count="37" type="stmt"/>
            <line falsecount="19" truecount="18" num="822" type="cond"/>
            <line complexity="1" visibility="public" signature="newFactory(Class&lt;TT&gt;,TypeAdapter&lt;TT&gt;) : TypeAdapterFactory" num="827" count="3399" type="method"/>
            <line num="829" count="3399" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="830" count="18585" type="method"/>
            <line num="832" count="18584" type="stmt"/>
            <line falsecount="18139" truecount="450" num="832" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="834" count="0" type="method"/>
            <line num="835" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFactory(Class&lt;TT&gt;,Class&lt;TT&gt;,TypeAdapter&lt;? super TT&gt;) : TypeAdapterFactory" num="840" count="2501" type="method"/>
            <line num="842" count="2501" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="843" count="10215" type="method"/>
            <line num="845" count="10218" type="stmt"/>
            <line num="846" count="10222" type="stmt"/>
            <line falsecount="9480" truecount="742" num="846" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="848" count="0" type="method"/>
            <line num="849" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFactoryForMultipleTypes(Class&lt;TT&gt;,Class&lt;? extends TT&gt;,TypeAdapter&lt;? super TT&gt;) : TypeAdapterFactory" num="855" count="1" type="method"/>
            <line num="857" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="858" count="922" type="method"/>
            <line num="860" count="921" type="stmt"/>
            <line num="861" count="923" type="stmt"/>
            <line falsecount="917" truecount="6" num="861" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="863" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newTypeHierarchyFactory(Class&lt;T1&gt;,TypeAdapter&lt;T1&gt;) : TypeAdapterFactory" num="874" count="4" type="method"/>
            <line num="876" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T2&gt;) : TypeAdapter&lt;T2&gt;" num="877" count="3232" type="method"/>
            <line num="879" count="3231" type="stmt"/>
            <line num="880" count="3230" type="stmt"/>
            <line falsecount="20" truecount="3212" num="880" type="cond"/>
            <line num="881" count="3212" type="stmt"/>
            <line num="883" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,T1) : void" num="884" count="13" type="method"/>
            <line num="885" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : T1" num="888" count="18" type="method"/>
            <line num="889" count="18" type="stmt"/>
            <line num="890" count="18" type="stmt"/>
            <line falsecount="17" truecount="1" num="890" type="cond"/>
            <line num="891" count="1" type="stmt"/>
            <line num="894" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="898" count="0" type="method"/>
            <line num="899" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.stream">
         <metrics coveredelements="1352" complexity="451" loc="2469" methods="79" classes="5" statements="956" coveredconditionals="377" coveredmethods="76" elements="1433" ncloc="1428" files="5" conditionals="398" coveredstatements="899"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/stream/JsonReader.java" name="JsonReader.java">
            <metrics coveredelements="1069" coveredconditionals="308" complexity="363" loc="1611" coveredmethods="40" methods="41" elements="1134" classes="1" ncloc="1071" statements="769" conditionals="324" coveredstatements="721"/>
            <class name="JsonReader">
               <metrics coveredelements="1069" coveredconditionals="308" complexity="363" coveredmethods="40" methods="41" elements="1134" statements="769" conditionals="324" coveredstatements="721"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 270()" num="270" count="965" type="method"/>
            <line num="271" count="967" type="stmt"/>
            <line complexity="2" visibility="public" signature="JsonReader(Reader)" num="288" count="969" type="method"/>
            <line num="289" count="970" type="stmt"/>
            <line falsecount="968" truecount="1" num="289" type="cond"/>
            <line num="290" count="1" type="stmt"/>
            <line num="292" count="969" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLenient(boolean) : void" num="324" count="1970" type="method"/>
            <line num="325" count="1977" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLenient() : boolean" num="331" count="647" type="method"/>
            <line num="332" count="650" type="stmt"/>
            <line complexity="3" visibility="public" signature="beginArray() : void" num="339" count="369" type="method"/>
            <line num="340" count="369" type="stmt"/>
            <line num="341" count="369" type="stmt"/>
            <line falsecount="182" truecount="187" num="341" type="cond"/>
            <line num="342" count="187" type="stmt"/>
            <line num="344" count="367" type="stmt"/>
            <line falsecount="2" truecount="365" num="344" type="cond"/>
            <line num="345" count="365" type="stmt"/>
            <line num="346" count="365" type="stmt"/>
            <line num="347" count="365" type="stmt"/>
            <line num="349" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="endArray() : void" num="357" count="280" type="method"/>
            <line num="358" count="280" type="stmt"/>
            <line num="359" count="280" type="stmt"/>
            <line falsecount="170" truecount="110" num="359" type="cond"/>
            <line num="360" count="110" type="stmt"/>
            <line num="362" count="279" type="stmt"/>
            <line falsecount="2" truecount="277" num="362" type="cond"/>
            <line num="363" count="277" type="stmt"/>
            <line num="364" count="277" type="stmt"/>
            <line num="365" count="277" type="stmt"/>
            <line num="367" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="beginObject() : void" num="375" count="513" type="method"/>
            <line num="376" count="517" type="stmt"/>
            <line num="377" count="517" type="stmt"/>
            <line falsecount="400" truecount="118" num="377" type="cond"/>
            <line num="378" count="118" type="stmt"/>
            <line num="380" count="514" type="stmt"/>
            <line falsecount="5" truecount="509" num="380" type="cond"/>
            <line num="381" count="510" type="stmt"/>
            <line num="382" count="513" type="stmt"/>
            <line num="384" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="endObject() : void" num="392" count="443" type="method"/>
            <line num="393" count="446" type="stmt"/>
            <line num="394" count="449" type="stmt"/>
            <line falsecount="392" truecount="57" num="394" type="cond"/>
            <line num="395" count="57" type="stmt"/>
            <line num="397" count="449" type="stmt"/>
            <line falsecount="1" truecount="450" num="397" type="cond"/>
            <line num="398" count="449" type="stmt"/>
            <line num="399" count="447" type="stmt"/>
            <line num="400" count="447" type="stmt"/>
            <line num="401" count="450" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasNext() : boolean" num="410" count="1785" type="method"/>
            <line num="411" count="1799" type="stmt"/>
            <line num="412" count="1814" type="stmt"/>
            <line falsecount="0" truecount="1810" num="412" type="cond"/>
            <line num="413" count="1814" type="stmt"/>
            <line num="415" count="1807" type="stmt"/>
            <line complexity="19" visibility="public" signature="peek() : JsonToken" num="421" count="3399" type="method"/>
            <line num="422" count="3402" type="stmt"/>
            <line num="423" count="3414" type="stmt"/>
            <line falsecount="1150" truecount="2269" num="423" type="cond"/>
            <line num="424" count="2269" type="stmt"/>
            <line num="427" count="3343" type="stmt"/>
            <line num="428" count="760" type="stmt"/>
            <line num="429" count="759" type="stmt"/>
            <line num="430" count="8" type="stmt"/>
            <line num="431" count="8" type="stmt"/>
            <line num="432" count="291" type="stmt"/>
            <line num="433" count="291" type="stmt"/>
            <line num="434" count="5" type="stmt"/>
            <line num="435" count="5" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="7" type="stmt"/>
            <line num="438" count="12" type="stmt"/>
            <line num="439" count="19" type="stmt"/>
            <line num="440" count="57" type="stmt"/>
            <line num="441" count="41" type="stmt"/>
            <line num="442" count="98" type="stmt"/>
            <line num="443" count="110" type="stmt"/>
            <line num="444" count="110" type="stmt"/>
            <line num="445" count="410" type="stmt"/>
            <line num="446" count="340" type="stmt"/>
            <line num="447" count="124" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="874" type="stmt"/>
            <line num="450" count="535" type="stmt"/>
            <line num="451" count="109" type="stmt"/>
            <line num="452" count="645" type="stmt"/>
            <line num="453" count="542" type="stmt"/>
            <line num="454" count="544" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="41" visibility="package" signature="doPeek() : int" num="460" count="4945" type="method"/>
            <line num="461" count="4948" type="stmt"/>
            <line num="462" count="4956" type="stmt"/>
            <line falsecount="4590" truecount="371" num="462" type="cond"/>
            <line num="463" count="371" type="stmt"/>
            <line num="464" count="4594" type="stmt"/>
            <line falsecount="3944" truecount="652" num="464" type="cond"/>
            <line num="466" count="652" type="stmt"/>
            <line num="467" count="645" type="stmt"/>
            <line num="468" count="247" type="stmt"/>
            <line num="469" count="247" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="396" type="stmt"/>
            <line num="473" count="397" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="477" count="3942" type="stmt"/>
            <line falsecount="2460" truecount="1490" num="477" type="cond"/>
            <line num="478" count="1489" type="stmt"/>
            <line num="480" count="1492" type="stmt"/>
            <line falsecount="519" truecount="973" num="480" type="cond"/>
            <line num="481" count="972" type="stmt"/>
            <line num="482" count="969" type="stmt"/>
            <line num="483" count="438" type="stmt"/>
            <line num="484" count="438" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="527" type="stmt"/>
            <line num="488" count="529" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="493" count="1047" type="stmt"/>
            <line num="494" count="1042" type="stmt"/>
            <line num="495" count="526" type="stmt"/>
            <line num="496" count="526" type="stmt"/>
            <line num="497" count="398" type="stmt"/>
            <line num="498" count="399" type="stmt"/>
            <line num="499" count="395" type="stmt"/>
            <line num="500" count="22" type="stmt"/>
            <line num="501" count="22" type="stmt"/>
            <line falsecount="3" truecount="19" num="501" type="cond"/>
            <line num="502" count="19" type="stmt"/>
            <line num="504" count="3" type="stmt"/>
            <line num="506" count="95" type="stmt"/>
            <line num="507" count="95" type="stmt"/>
            <line num="508" count="93" type="stmt"/>
            <line num="509" count="93" type="stmt"/>
            <line falsecount="6" truecount="87" num="509" type="cond"/>
            <line num="510" count="87" type="stmt"/>
            <line num="512" count="6" type="stmt"/>
            <line num="515" count="2452" type="stmt"/>
            <line falsecount="1459" truecount="994" num="515" type="cond"/>
            <line num="516" count="993" type="stmt"/>
            <line num="518" count="994" type="stmt"/>
            <line num="519" count="997" type="stmt"/>
            <line num="520" count="980" type="stmt"/>
            <line num="521" count="981" type="stmt"/>
            <line num="522" count="14" type="stmt"/>
            <line num="523" count="14" type="stmt"/>
            <line num="524" count="10" type="stmt"/>
            <line falsecount="3" truecount="7" num="524" type="cond"/>
            <line num="525" count="7" type="stmt"/>
            <line num="527" count="10" type="stmt"/>
            <line num="528" count="5" type="stmt"/>
            <line num="529" count="5" type="stmt"/>
            <line num="531" count="1461" type="stmt"/>
            <line falsecount="562" truecount="899" num="531" type="cond"/>
            <line num="532" count="898" type="stmt"/>
            <line falsecount="165" truecount="735" num="532" type="cond"/>
            <line num="533" count="735" type="stmt"/>
            <line num="535" count="897" type="stmt"/>
            <line num="536" count="562" type="stmt"/>
            <line falsecount="4" truecount="558" num="536" type="cond"/>
            <line num="537" count="557" type="stmt"/>
            <line num="538" count="556" type="stmt"/>
            <line falsecount="15" truecount="543" num="538" type="cond"/>
            <line num="539" count="544" type="stmt"/>
            <line num="541" count="15" type="stmt"/>
            <line num="542" count="11" type="stmt"/>
            <line num="544" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="544" type="cond"/>
            <line num="545" count="4" type="stmt"/>
            <line num="548" count="2658" type="stmt"/>
            <line num="549" count="2656" type="stmt"/>
            <line num="550" count="45" type="stmt"/>
            <line num="551" count="45" type="stmt"/>
            <line falsecount="9" truecount="36" num="551" type="cond"/>
            <line num="552" count="36" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="14" type="stmt"/>
            <line num="558" count="23" type="stmt"/>
            <line falsecount="2" truecount="21" num="558" type="cond"/>
            <line num="559" count="21" type="stmt"/>
            <line num="560" count="13" type="stmt"/>
            <line num="561" count="13" type="stmt"/>
            <line num="563" count="2" type="stmt"/>
            <line num="565" count="354" type="stmt"/>
            <line num="566" count="355" type="stmt"/>
            <line num="567" count="352" type="stmt"/>
            <line num="568" count="343" type="stmt"/>
            <line num="569" count="343" type="stmt"/>
            <line num="570" count="381" type="stmt"/>
            <line num="571" count="381" type="stmt"/>
            <line num="572" count="533" type="stmt"/>
            <line num="573" count="534" type="stmt"/>
            <line num="574" count="982" type="stmt"/>
            <line num="575" count="983" type="stmt"/>
            <line num="578" count="982" type="stmt"/>
            <line num="579" count="978" type="stmt"/>
            <line falsecount="791" truecount="187" num="579" type="cond"/>
            <line num="580" count="187" type="stmt"/>
            <line num="583" count="791" type="stmt"/>
            <line num="584" count="789" type="stmt"/>
            <line falsecount="128" truecount="662" num="584" type="cond"/>
            <line num="585" count="662" type="stmt"/>
            <line num="588" count="128" type="stmt"/>
            <line falsecount="100" truecount="28" num="588" type="cond"/>
            <line num="589" count="28" type="stmt"/>
            <line num="592" count="100" type="stmt"/>
            <line num="593" count="92" type="stmt"/>
            <line complexity="15" visibility="private" signature="peekKeyword() : int" num="596" count="976" type="method"/>
            <line num="598" count="981" type="stmt"/>
            <line num="599" count="982" type="stmt"/>
            <line num="600" count="983" type="stmt"/>
            <line num="601" count="983" type="stmt"/>
            <line num="602" count="982" type="stmt"/>
            <line falsecount="903" truecount="79" num="602" type="cond"/>
            <line num="603" count="79" type="stmt"/>
            <line num="604" count="79" type="stmt"/>
            <line num="605" count="79" type="stmt"/>
            <line num="606" count="903" type="stmt"/>
            <line falsecount="849" truecount="55" num="606" type="cond"/>
            <line num="607" count="55" type="stmt"/>
            <line num="608" count="55" type="stmt"/>
            <line num="609" count="55" type="stmt"/>
            <line num="610" count="848" type="stmt"/>
            <line falsecount="771" truecount="78" num="610" type="cond"/>
            <line num="611" count="78" type="stmt"/>
            <line num="612" count="78" type="stmt"/>
            <line num="613" count="78" type="stmt"/>
            <line num="615" count="771" type="stmt"/>
            <line num="619" count="212" type="stmt"/>
            <line num="620" count="212" type="stmt"/>
            <line falsecount="192" truecount="643" num="620" type="cond"/>
            <line num="621" count="643" type="stmt"/>
            <line falsecount="643" truecount="0" num="621" type="cond"/>
            <line num="622" count="0" type="stmt"/>
            <line num="624" count="643" type="stmt"/>
            <line num="625" count="643" type="stmt"/>
            <line falsecount="623" truecount="20" num="625" type="cond"/>
            <line num="626" count="20" type="stmt"/>
            <line num="630" count="192" type="stmt"/>
            <line falsecount="187" truecount="1" num="630" type="cond"/>
            <line num="632" count="1" type="stmt"/>
            <line num="636" count="187" type="stmt"/>
            <line num="637" count="187" type="stmt"/>
            <line complexity="35" visibility="private" signature="peekNumber() : int" num="640" count="786" type="method"/>
            <line num="642" count="787" type="stmt"/>
            <line num="643" count="788" type="stmt"/>
            <line num="644" count="790" type="stmt"/>
            <line num="646" count="790" type="stmt"/>
            <line num="647" count="792" type="stmt"/>
            <line num="648" count="792" type="stmt"/>
            <line num="649" count="792" type="stmt"/>
            <line num="651" count="792" type="stmt"/>
            <line num="653" count="792" type="stmt"/>
            <line num="655" count="4691" type="stmt"/>
            <line falsecount="4623" truecount="68" num="655" type="cond"/>
            <line num="656" count="68" type="stmt"/>
            <line falsecount="66" truecount="2" num="656" type="cond"/>
            <line num="659" count="2" type="stmt"/>
            <line num="661" count="66" type="stmt"/>
            <line falsecount="2" truecount="64" num="661" type="cond"/>
            <line num="662" count="64" type="stmt"/>
            <line num="664" count="2" type="stmt"/>
            <line num="665" count="2" type="stmt"/>
            <line num="668" count="4621" type="stmt"/>
            <line num="669" count="4623" type="stmt"/>
            <line num="670" count="61" type="stmt"/>
            <line num="671" count="61" type="stmt"/>
            <line falsecount="21" truecount="40" num="671" type="cond"/>
            <line num="672" count="40" type="stmt"/>
            <line num="673" count="40" type="stmt"/>
            <line num="674" count="40" type="stmt"/>
            <line num="675" count="21" type="stmt"/>
            <line falsecount="0" truecount="21" num="675" type="cond"/>
            <line num="676" count="21" type="stmt"/>
            <line num="677" count="21" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="681" count="7" type="stmt"/>
            <line num="682" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="682" type="cond"/>
            <line num="683" count="7" type="stmt"/>
            <line num="684" count="7" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="688" count="31" type="stmt"/>
            <line num="689" count="15" type="stmt"/>
            <line num="690" count="46" type="stmt"/>
            <line falsecount="6" truecount="40" num="690" type="cond"/>
            <line num="691" count="40" type="stmt"/>
            <line num="692" count="40" type="stmt"/>
            <line num="694" count="6" type="stmt"/>
            <line num="696" count="99" type="stmt"/>
            <line num="697" count="99" type="stmt"/>
            <line falsecount="9" truecount="90" num="697" type="cond"/>
            <line num="698" count="90" type="stmt"/>
            <line num="699" count="90" type="stmt"/>
            <line num="701" count="9" type="stmt"/>
            <line num="703" count="4413" type="stmt"/>
            <line num="704" count="4412" type="stmt"/>
            <line falsecount="3706" truecount="710" num="704" type="cond"/>
            <line num="705" count="709" type="stmt"/>
            <line falsecount="78" truecount="631" num="705" type="cond"/>
            <line num="706" count="633" type="stmt"/>
            <line num="708" count="78" type="stmt"/>
            <line num="710" count="3706" type="stmt"/>
            <line falsecount="3024" truecount="681" num="710" type="cond"/>
            <line num="711" count="678" type="stmt"/>
            <line num="712" count="681" type="stmt"/>
            <line num="713" count="3024" type="stmt"/>
            <line falsecount="2404" truecount="620" num="713" type="cond"/>
            <line num="714" count="620" type="stmt"/>
            <line falsecount="620" truecount="0" num="714" type="cond"/>
            <line num="715" count="0" type="stmt"/>
            <line num="717" count="620" type="stmt"/>
            <line num="718" count="620" type="stmt"/>
            <line num="720" count="620" type="stmt"/>
            <line num="721" count="2404" type="stmt"/>
            <line falsecount="2319" truecount="85" num="721" type="cond"/>
            <line num="722" count="85" type="stmt"/>
            <line num="723" count="2319" type="stmt"/>
            <line falsecount="2284" truecount="35" num="723" type="cond"/>
            <line num="724" count="35" type="stmt"/>
            <line num="730" count="695" type="stmt"/>
            <line falsecount="123" truecount="572" num="730" type="cond"/>
            <line num="731" count="571" type="stmt"/>
            <line falsecount="567" truecount="6" num="731" type="cond"/>
            <line num="732" count="573" type="stmt"/>
            <line num="733" count="573" type="stmt"/>
            <line num="734" count="123" type="stmt"/>
            <line falsecount="33" truecount="90" num="734" type="cond"/>
            <line num="736" count="90" type="stmt"/>
            <line num="737" count="90" type="stmt"/>
            <line num="739" count="33" type="stmt"/>
            <line complexity="17" visibility="private" signature="isLiteral(char) : boolean" num="743" count="1064" type="method"/>
            <line num="744" count="1066" type="stmt"/>
            <line num="745" count="6" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line num="747" count="6" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line num="750" count="12" type="stmt"/>
            <line num="751" count="1" type="stmt"/>
            <line num="752" count="241" type="stmt"/>
            <line num="753" count="1" type="stmt"/>
            <line num="754" count="92" type="stmt"/>
            <line num="755" count="3" type="stmt"/>
            <line num="756" count="433" type="stmt"/>
            <line num="757" count="5" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="11" type="stmt"/>
            <line num="762" count="797" type="stmt"/>
            <line num="763" count="266" type="stmt"/>
            <line num="764" count="266" type="stmt"/>
            <line complexity="5" visibility="public" signature="nextName() : String" num="775" count="923" type="method"/>
            <line num="776" count="933" type="stmt"/>
            <line num="777" count="943" type="stmt"/>
            <line falsecount="830" truecount="115" num="777" type="cond"/>
            <line num="778" count="115" type="stmt"/>
            <line num="780" count="936" type="stmt"/>
            <line num="781" count="939" type="stmt"/>
            <line falsecount="857" truecount="79" num="781" type="cond"/>
            <line num="782" count="79" type="stmt"/>
            <line num="783" count="859" type="stmt"/>
            <line falsecount="485" truecount="373" num="783" type="cond"/>
            <line num="784" count="375" type="stmt"/>
            <line num="785" count="485" type="stmt"/>
            <line falsecount="2" truecount="483" num="785" type="cond"/>
            <line num="786" count="483" type="stmt"/>
            <line num="788" count="2" type="stmt"/>
            <line num="790" count="932" type="stmt"/>
            <line num="791" count="933" type="stmt"/>
            <line num="792" count="935" type="stmt"/>
            <line complexity="8" visibility="public" signature="nextString() : String" num="803" count="870" type="method"/>
            <line num="804" count="872" type="stmt"/>
            <line num="805" count="881" type="stmt"/>
            <line falsecount="811" truecount="71" num="805" type="cond"/>
            <line num="806" count="71" type="stmt"/>
            <line num="808" count="877" type="stmt"/>
            <line num="809" count="876" type="stmt"/>
            <line falsecount="805" truecount="73" num="809" type="cond"/>
            <line num="810" count="73" type="stmt"/>
            <line num="811" count="803" type="stmt"/>
            <line falsecount="441" truecount="363" num="811" type="cond"/>
            <line num="812" count="363" type="stmt"/>
            <line num="813" count="441" type="stmt"/>
            <line falsecount="111" truecount="330" num="813" type="cond"/>
            <line num="814" count="330" type="stmt"/>
            <line num="815" count="111" type="stmt"/>
            <line falsecount="110" truecount="1" num="815" type="cond"/>
            <line num="816" count="1" type="stmt"/>
            <line num="817" count="1" type="stmt"/>
            <line num="818" count="110" type="stmt"/>
            <line falsecount="27" truecount="83" num="818" type="cond"/>
            <line num="819" count="83" type="stmt"/>
            <line num="820" count="27" type="stmt"/>
            <line falsecount="11" truecount="16" num="820" type="cond"/>
            <line num="821" count="16" type="stmt"/>
            <line num="822" count="16" type="stmt"/>
            <line num="824" count="11" type="stmt"/>
            <line num="826" count="860" type="stmt"/>
            <line num="827" count="863" type="stmt"/>
            <line num="828" count="862" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextBoolean() : boolean" num="838" count="123" type="method"/>
            <line num="839" count="123" type="stmt"/>
            <line num="840" count="123" type="stmt"/>
            <line falsecount="81" truecount="42" num="840" type="cond"/>
            <line num="841" count="42" type="stmt"/>
            <line num="843" count="115" type="stmt"/>
            <line falsecount="50" truecount="65" num="843" type="cond"/>
            <line num="844" count="65" type="stmt"/>
            <line num="845" count="65" type="stmt"/>
            <line num="846" count="65" type="stmt"/>
            <line num="847" count="50" type="stmt"/>
            <line falsecount="3" truecount="47" num="847" type="cond"/>
            <line num="848" count="47" type="stmt"/>
            <line num="849" count="47" type="stmt"/>
            <line num="850" count="47" type="stmt"/>
            <line num="852" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="nextNull() : void" num="862" count="84" type="method"/>
            <line num="863" count="84" type="stmt"/>
            <line num="864" count="84" type="stmt"/>
            <line falsecount="69" truecount="15" num="864" type="cond"/>
            <line num="865" count="15" type="stmt"/>
            <line num="867" count="80" type="stmt"/>
            <line falsecount="1" truecount="79" num="867" type="cond"/>
            <line num="868" count="79" type="stmt"/>
            <line num="869" count="79" type="stmt"/>
            <line num="871" count="1" type="stmt"/>
            <line complexity="12" visibility="public" signature="nextDouble() : double" num="884" count="107" type="method"/>
            <line num="885" count="107" type="stmt"/>
            <line num="886" count="107" type="stmt"/>
            <line falsecount="84" truecount="23" num="886" type="cond"/>
            <line num="887" count="23" type="stmt"/>
            <line num="890" count="105" type="stmt"/>
            <line falsecount="83" truecount="22" num="890" type="cond"/>
            <line num="891" count="22" type="stmt"/>
            <line num="892" count="22" type="stmt"/>
            <line num="893" count="22" type="stmt"/>
            <line num="896" count="83" type="stmt"/>
            <line falsecount="30" truecount="53" num="896" type="cond"/>
            <line num="897" count="53" type="stmt"/>
            <line num="898" count="53" type="stmt"/>
            <line num="899" count="30" type="stmt"/>
            <line falsecount="22" truecount="8" num="899" type="cond"/>
            <line num="900" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="900" type="cond"/>
            <line num="901" count="22" type="stmt"/>
            <line falsecount="6" truecount="16" num="901" type="cond"/>
            <line num="902" count="16" type="stmt"/>
            <line num="903" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="903" type="cond"/>
            <line num="904" count="4" type="stmt"/>
            <line num="907" count="79" type="stmt"/>
            <line num="908" count="79" type="stmt"/>
            <line num="909" count="79" type="stmt"/>
            <line falsecount="78" truecount="1" num="909" type="cond"/>
            <line num="910" count="1" type="stmt"/>
            <line num="913" count="78" type="stmt"/>
            <line num="914" count="78" type="stmt"/>
            <line num="915" count="78" type="stmt"/>
            <line num="916" count="78" type="stmt"/>
            <line complexity="11" visibility="public" signature="nextLong() : long" num="929" count="97" type="method"/>
            <line num="930" count="97" type="stmt"/>
            <line num="931" count="97" type="stmt"/>
            <line falsecount="93" truecount="4" num="931" type="cond"/>
            <line num="932" count="4" type="stmt"/>
            <line num="935" count="97" type="stmt"/>
            <line falsecount="18" truecount="79" num="935" type="cond"/>
            <line num="936" count="79" type="stmt"/>
            <line num="937" count="79" type="stmt"/>
            <line num="938" count="79" type="stmt"/>
            <line num="941" count="18" type="stmt"/>
            <line falsecount="11" truecount="7" num="941" type="cond"/>
            <line num="942" count="7" type="stmt"/>
            <line num="943" count="7" type="stmt"/>
            <line num="944" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="944" type="cond"/>
            <line num="945" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="945" type="cond"/>
            <line num="946" count="1" type="stmt"/>
            <line num="948" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="948" type="cond"/>
            <line num="950" count="9" type="stmt"/>
            <line num="951" count="9" type="stmt"/>
            <line num="952" count="9" type="stmt"/>
            <line num="953" count="9" type="stmt"/>
            <line num="954" count="9" type="stmt"/>
            <line num="959" count="2" type="stmt"/>
            <line num="962" count="7" type="stmt"/>
            <line num="963" count="7" type="stmt"/>
            <line num="964" count="7" type="stmt"/>
            <line num="965" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="965" type="cond"/>
            <line num="966" count="5" type="stmt"/>
            <line num="968" count="2" type="stmt"/>
            <line num="969" count="2" type="stmt"/>
            <line num="970" count="2" type="stmt"/>
            <line num="971" count="2" type="stmt"/>
            <line complexity="9" visibility="private" signature="nextQuotedValue(char) : String" num="984" count="1563" type="method"/>
            <line num="986" count="1570" type="stmt"/>
            <line num="987" count="1572" type="stmt"/>
            <line num="988" count="1573" type="stmt"/>
            <line num="989" count="1590" type="stmt"/>
            <line num="990" count="1588" type="stmt"/>
            <line num="992" count="1590" type="stmt"/>
            <line num="993" count="1589" type="stmt"/>
            <line falsecount="17" truecount="26081" num="993" type="cond"/>
            <line num="994" count="26087" type="stmt"/>
            <line num="996" count="26090" type="stmt"/>
            <line falsecount="24543" truecount="1570" num="996" type="cond"/>
            <line num="997" count="1569" type="stmt"/>
            <line num="998" count="1569" type="stmt"/>
            <line num="999" count="1568" type="stmt"/>
            <line falsecount="30" truecount="1538" num="999" type="cond"/>
            <line num="1000" count="1539" type="stmt"/>
            <line num="1002" count="30" type="stmt"/>
            <line num="1003" count="30" type="stmt"/>
            <line num="1005" count="24536" type="stmt"/>
            <line falsecount="24480" truecount="57" num="1005" type="cond"/>
            <line num="1006" count="57" type="stmt"/>
            <line num="1007" count="57" type="stmt"/>
            <line num="1008" count="57" type="stmt"/>
            <line falsecount="24" truecount="33" num="1008" type="cond"/>
            <line num="1009" count="33" type="stmt"/>
            <line num="1010" count="33" type="stmt"/>
            <line num="1012" count="57" type="stmt"/>
            <line num="1013" count="57" type="stmt"/>
            <line num="1014" count="53" type="stmt"/>
            <line num="1015" count="53" type="stmt"/>
            <line num="1016" count="53" type="stmt"/>
            <line num="1017" count="24480" type="stmt"/>
            <line falsecount="24481" truecount="4" num="1017" type="cond"/>
            <line num="1018" count="4" type="stmt"/>
            <line num="1019" count="4" type="stmt"/>
            <line num="1023" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="1023" type="cond"/>
            <line num="1024" count="2" type="stmt"/>
            <line num="1025" count="2" type="stmt"/>
            <line num="1027" count="17" type="stmt"/>
            <line num="1028" count="17" type="stmt"/>
            <line num="1029" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="1029" type="cond"/>
            <line num="1030" count="1" type="stmt"/>
            <line complexity="23" visibility="private" signature="nextUnquotedValue() : String" num="1038" count="171" type="method"/>
            <line num="1040" count="171" type="stmt"/>
            <line num="1041" count="171" type="stmt"/>
            <line num="1043" count="171" type="stmt"/>
            <line num="1045" count="221" type="stmt"/>
            <line falsecount="84" truecount="50136" num="1045" type="cond"/>
            <line num="1046" count="50136" type="stmt"/>
            <line num="1047" count="0" type="stmt"/>
            <line num="1048" count="0" type="stmt"/>
            <line num="1049" count="0" type="stmt"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1051" count="0" type="stmt"/>
            <line num="1052" count="0" type="stmt"/>
            <line num="1053" count="0" type="stmt"/>
            <line num="1054" count="1" type="stmt"/>
            <line num="1055" count="0" type="stmt"/>
            <line num="1056" count="35" type="stmt"/>
            <line num="1057" count="85" type="stmt"/>
            <line num="1058" count="13" type="stmt"/>
            <line num="1059" count="2" type="stmt"/>
            <line num="1060" count="0" type="stmt"/>
            <line num="1061" count="0" type="stmt"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="1" type="stmt"/>
            <line num="1064" count="137" type="stmt"/>
            <line num="1069" count="84" type="stmt"/>
            <line falsecount="48" truecount="36" num="1069" type="cond"/>
            <line num="1070" count="36" type="stmt"/>
            <line falsecount="33" truecount="3" num="1070" type="cond"/>
            <line num="1071" count="3" type="stmt"/>
            <line num="1073" count="33" type="stmt"/>
            <line num="1078" count="48" type="stmt"/>
            <line falsecount="44" truecount="4" num="1078" type="cond"/>
            <line num="1079" count="4" type="stmt"/>
            <line num="1081" count="48" type="stmt"/>
            <line num="1082" count="48" type="stmt"/>
            <line num="1083" count="48" type="stmt"/>
            <line num="1084" count="48" type="stmt"/>
            <line falsecount="47" truecount="1" num="1084" type="cond"/>
            <line num="1085" count="1" type="stmt"/>
            <line num="1089" count="171" type="stmt"/>
            <line falsecount="4" truecount="167" num="1089" type="cond"/>
            <line num="1090" count="171" type="stmt"/>
            <line num="1091" count="171" type="stmt"/>
            <line complexity="6" visibility="private" signature="skipQuotedValue(char) : void" num="1094" count="39" type="method"/>
            <line num="1096" count="39" type="stmt"/>
            <line num="1097" count="39" type="stmt"/>
            <line num="1098" count="55" type="stmt"/>
            <line num="1099" count="55" type="stmt"/>
            <line num="1101" count="55" type="stmt"/>
            <line falsecount="16" truecount="16559" num="1101" type="cond"/>
            <line num="1102" count="16559" type="stmt"/>
            <line num="1103" count="16559" type="stmt"/>
            <line falsecount="16520" truecount="39" num="1103" type="cond"/>
            <line num="1104" count="39" type="stmt"/>
            <line num="1105" count="39" type="stmt"/>
            <line num="1106" count="16520" type="stmt"/>
            <line falsecount="16519" truecount="1" num="1106" type="cond"/>
            <line num="1107" count="1" type="stmt"/>
            <line num="1108" count="1" type="stmt"/>
            <line num="1109" count="1" type="stmt"/>
            <line num="1110" count="1" type="stmt"/>
            <line num="1111" count="16519" type="stmt"/>
            <line falsecount="16515" truecount="4" num="1111" type="cond"/>
            <line num="1112" count="4" type="stmt"/>
            <line num="1113" count="4" type="stmt"/>
            <line num="1116" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="1117" type="cond"/>
            <line num="1118" count="0" type="stmt"/>
            <line complexity="19" visibility="private" signature="skipUnquotedValue() : void" num="1121" count="3" type="method"/>
            <line num="1122" count="3" type="stmt"/>
            <line num="1123" count="18" type="stmt"/>
            <line num="1124" count="18" type="stmt"/>
            <line falsecount="16" truecount="16390" num="1124" type="cond"/>
            <line num="1125" count="16390" type="stmt"/>
            <line num="1126" count="0" type="stmt"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1128" count="0" type="stmt"/>
            <line num="1129" count="0" type="stmt"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1131" count="0" type="stmt"/>
            <line num="1132" count="0" type="stmt"/>
            <line num="1133" count="0" type="stmt"/>
            <line num="1134" count="0" type="stmt"/>
            <line num="1135" count="1" type="stmt"/>
            <line num="1136" count="0" type="stmt"/>
            <line num="1137" count="0" type="stmt"/>
            <line num="1138" count="0" type="stmt"/>
            <line num="1139" count="0" type="stmt"/>
            <line num="1140" count="0" type="stmt"/>
            <line num="1141" count="0" type="stmt"/>
            <line num="1142" count="1" type="stmt"/>
            <line num="1143" count="2" type="stmt"/>
            <line num="1144" count="2" type="stmt"/>
            <line num="1147" count="16" type="stmt"/>
            <line falsecount="1" truecount="15" num="1148" type="cond"/>
            <line complexity="12" visibility="public" signature="nextInt() : int" num="1161" count="383" type="method"/>
            <line num="1162" count="386" type="stmt"/>
            <line num="1163" count="389" type="stmt"/>
            <line falsecount="359" truecount="31" num="1163" type="cond"/>
            <line num="1164" count="31" type="stmt"/>
            <line num="1167" count="389" type="stmt"/>
            <line num="1168" count="390" type="stmt"/>
            <line falsecount="27" truecount="363" num="1168" type="cond"/>
            <line num="1169" count="363" type="stmt"/>
            <line num="1170" count="361" type="stmt"/>
            <line falsecount="361" truecount="2" num="1170" type="cond"/>
            <line num="1171" count="2" type="stmt"/>
            <line num="1173" count="362" type="stmt"/>
            <line num="1174" count="362" type="stmt"/>
            <line num="1175" count="361" type="stmt"/>
            <line num="1178" count="27" type="stmt"/>
            <line falsecount="16" truecount="11" num="1178" type="cond"/>
            <line num="1179" count="11" type="stmt"/>
            <line num="1180" count="11" type="stmt"/>
            <line num="1181" count="16" type="stmt"/>
            <line falsecount="6" truecount="10" num="1181" type="cond"/>
            <line num="1182" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="1182" type="cond"/>
            <line num="1183" count="2" type="stmt"/>
            <line num="1185" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="1185" type="cond"/>
            <line num="1187" count="10" type="stmt"/>
            <line num="1188" count="10" type="stmt"/>
            <line num="1189" count="9" type="stmt"/>
            <line num="1190" count="9" type="stmt"/>
            <line num="1191" count="9" type="stmt"/>
            <line num="1196" count="6" type="stmt"/>
            <line num="1199" count="12" type="stmt"/>
            <line num="1200" count="12" type="stmt"/>
            <line num="1201" count="11" type="stmt"/>
            <line num="1202" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="1202" type="cond"/>
            <line num="1203" count="6" type="stmt"/>
            <line num="1205" count="5" type="stmt"/>
            <line num="1206" count="5" type="stmt"/>
            <line num="1207" count="5" type="stmt"/>
            <line num="1208" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="1214" count="7" type="method"/>
            <line num="1215" count="7" type="stmt"/>
            <line num="1216" count="7" type="stmt"/>
            <line num="1217" count="7" type="stmt"/>
            <line num="1218" count="7" type="stmt"/>
            <line complexity="14" visibility="public" signature="skipValue() : void" num="1226" count="66" type="method"/>
            <line num="1227" count="66" type="stmt"/>
            <line num="1228" count="66" type="stmt"/>
            <line num="1229" count="123" type="stmt"/>
            <line num="1230" count="123" type="stmt"/>
            <line falsecount="5" truecount="118" num="1230" type="cond"/>
            <line num="1231" count="118" type="stmt"/>
            <line num="1234" count="104" type="stmt"/>
            <line falsecount="98" truecount="6" num="1234" type="cond"/>
            <line num="1235" count="6" type="stmt"/>
            <line num="1236" count="6" type="stmt"/>
            <line num="1237" count="98" type="stmt"/>
            <line falsecount="90" truecount="8" num="1237" type="cond"/>
            <line num="1238" count="8" type="stmt"/>
            <line num="1239" count="8" type="stmt"/>
            <line num="1240" count="90" type="stmt"/>
            <line falsecount="84" truecount="6" num="1240" type="cond"/>
            <line num="1241" count="6" type="stmt"/>
            <line num="1242" count="6" type="stmt"/>
            <line num="1243" count="84" type="stmt"/>
            <line falsecount="76" truecount="8" num="1243" type="cond"/>
            <line num="1244" count="8" type="stmt"/>
            <line num="1245" count="8" type="stmt"/>
            <line num="1246" count="76" type="stmt"/>
            <line falsecount="73" truecount="3" num="1246" type="cond"/>
            <line num="1247" count="3" type="stmt"/>
            <line num="1248" count="73" type="stmt"/>
            <line falsecount="70" truecount="3" num="1248" type="cond"/>
            <line num="1249" count="3" type="stmt"/>
            <line num="1250" count="70" type="stmt"/>
            <line falsecount="34" truecount="36" num="1250" type="cond"/>
            <line num="1251" count="36" type="stmt"/>
            <line num="1252" count="34" type="stmt"/>
            <line falsecount="31" truecount="3" num="1252" type="cond"/>
            <line num="1253" count="3" type="stmt"/>
            <line num="1255" count="104" type="stmt"/>
            <line falsecount="47" truecount="57" num="1256" type="cond"/>
            <line num="1258" count="47" type="stmt"/>
            <line num="1259" count="47" type="stmt"/>
            <line complexity="2" visibility="private" signature="push(int) : void" num="1262" count="886" type="method"/>
            <line num="1263" count="888" type="stmt"/>
            <line falsecount="888" truecount="2" num="1263" type="cond"/>
            <line num="1264" count="2" type="stmt"/>
            <line num="1265" count="2" type="stmt"/>
            <line num="1266" count="2" type="stmt"/>
            <line num="1267" count="2" type="stmt"/>
            <line num="1269" count="890" type="stmt"/>
            <line complexity="8" visibility="private" signature="fillBuffer(int) : boolean" num="1277" count="1879" type="method"/>
            <line num="1278" count="1883" type="stmt"/>
            <line num="1279" count="1886" type="stmt"/>
            <line num="1280" count="1888" type="stmt"/>
            <line falsecount="1579" truecount="308" num="1280" type="cond"/>
            <line num="1281" count="308" type="stmt"/>
            <line num="1282" count="308" type="stmt"/>
            <line num="1284" count="1580" type="stmt"/>
            <line num="1287" count="1889" type="stmt"/>
            <line num="1288" count="1887" type="stmt"/>
            <line num="1289" count="1889" type="stmt"/>
            <line falsecount="0" truecount="0" num="1289" type="cond"/>
            <line num="1290" count="1010" type="stmt"/>
            <line num="1293" count="1012" type="stmt"/>
            <line falsecount="1005" truecount="3" num="1293" type="cond"/>
            <line num="1294" count="3" type="stmt"/>
            <line num="1295" count="3" type="stmt"/>
            <line num="1296" count="3" type="stmt"/>
            <line num="1299" count="1007" type="stmt"/>
            <line falsecount="0" truecount="1011" num="1299" type="cond"/>
            <line num="1300" count="1007" type="stmt"/>
            <line num="1303" count="874" type="stmt"/>
            <line complexity="15" visibility="private" signature="nextNonWhitespace(boolean) : int" num="1312" count="7569" type="method"/>
            <line num="1321" count="7575" type="stmt"/>
            <line num="1322" count="7585" type="stmt"/>
            <line num="1323" count="7600" type="stmt"/>
            <line num="1324" count="7611" type="stmt"/>
            <line num="1325" count="24694" type="stmt"/>
            <line falsecount="23220" truecount="1484" num="1325" type="cond"/>
            <line num="1326" count="1482" type="stmt"/>
            <line num="1327" count="1483" type="stmt"/>
            <line falsecount="909" truecount="568" num="1327" type="cond"/>
            <line num="1328" count="569" type="stmt"/>
            <line num="1330" count="911" type="stmt"/>
            <line num="1331" count="911" type="stmt"/>
            <line num="1334" count="24131" type="stmt"/>
            <line num="1335" count="24131" type="stmt"/>
            <line falsecount="24006" truecount="128" num="1335" type="cond"/>
            <line num="1336" count="128" type="stmt"/>
            <line num="1337" count="128" type="stmt"/>
            <line num="1338" count="128" type="stmt"/>
            <line num="1339" count="24001" type="stmt"/>
            <line falsecount="7072" truecount="16933" num="1339" type="cond"/>
            <line num="1340" count="16933" type="stmt"/>
            <line num="1343" count="7076" type="stmt"/>
            <line falsecount="7053" truecount="21" num="1343" type="cond"/>
            <line num="1344" count="21" type="stmt"/>
            <line num="1345" count="21" type="stmt"/>
            <line falsecount="17" truecount="4" num="1345" type="cond"/>
            <line num="1346" count="4" type="stmt"/>
            <line num="1347" count="4" type="stmt"/>
            <line num="1348" count="4" type="stmt"/>
            <line num="1349" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="1349" type="cond"/>
            <line num="1350" count="4" type="stmt"/>
            <line num="1354" count="17" type="stmt"/>
            <line num="1355" count="13" type="stmt"/>
            <line num="1356" count="13" type="stmt"/>
            <line num="1357" count="5" type="stmt"/>
            <line num="1359" count="5" type="stmt"/>
            <line num="1360" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="1360" type="cond"/>
            <line num="1361" count="0" type="stmt"/>
            <line num="1363" count="5" type="stmt"/>
            <line num="1364" count="5" type="stmt"/>
            <line num="1365" count="5" type="stmt"/>
            <line num="1367" count="6" type="stmt"/>
            <line num="1369" count="6" type="stmt"/>
            <line num="1370" count="6" type="stmt"/>
            <line num="1371" count="6" type="stmt"/>
            <line num="1372" count="6" type="stmt"/>
            <line num="1373" count="6" type="stmt"/>
            <line num="1375" count="2" type="stmt"/>
            <line num="1376" count="2" type="stmt"/>
            <line num="1378" count="7056" type="stmt"/>
            <line falsecount="7043" truecount="11" num="1378" type="cond"/>
            <line num="1379" count="11" type="stmt"/>
            <line num="1385" count="11" type="stmt"/>
            <line num="1386" count="9" type="stmt"/>
            <line num="1387" count="9" type="stmt"/>
            <line num="1388" count="9" type="stmt"/>
            <line num="1390" count="7047" type="stmt"/>
            <line num="1391" count="7052" type="stmt"/>
            <line num="1394" count="570" type="stmt"/>
            <line falsecount="540" truecount="27" num="1394" type="cond"/>
            <line num="1395" count="27" type="stmt"/>
            <line num="1397" count="543" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkLenient() : void" num="1401" count="1018" type="method"/>
            <line num="1402" count="1032" type="stmt"/>
            <line falsecount="997" truecount="40" num="1402" type="cond"/>
            <line num="1403" count="40" type="stmt"/>
            <line complexity="5" visibility="private" signature="skipToEndOfLine() : void" num="1412" count="15" type="method"/>
            <line num="1413" count="15" type="stmt"/>
            <line falsecount="1" truecount="126" num="1413" type="cond"/>
            <line num="1414" count="126" type="stmt"/>
            <line num="1415" count="126" type="stmt"/>
            <line falsecount="116" truecount="10" num="1415" type="cond"/>
            <line num="1416" count="10" type="stmt"/>
            <line num="1417" count="10" type="stmt"/>
            <line num="1418" count="10" type="stmt"/>
            <line num="1419" count="116" type="stmt"/>
            <line falsecount="112" truecount="4" num="1419" type="cond"/>
            <line num="1420" count="4" type="stmt"/>
            <line complexity="6" visibility="private" signature="skipTo(String) : boolean" num="1428" count="5" type="method"/>
            <line num="1429" count="5" type="stmt"/>
            <line num="1430" count="5" type="stmt"/>
            <line falsecount="0" truecount="72" num="1431" type="cond"/>
            <line num="1432" count="72" type="stmt"/>
            <line falsecount="66" truecount="6" num="1432" type="cond"/>
            <line num="1433" count="6" type="stmt"/>
            <line num="1434" count="6" type="stmt"/>
            <line num="1435" count="6" type="stmt"/>
            <line num="1437" count="66" type="stmt"/>
            <line falsecount="5" truecount="75" num="1437" type="cond"/>
            <line num="1438" count="75" type="stmt"/>
            <line falsecount="14" truecount="61" num="1438" type="cond"/>
            <line num="1439" count="61" type="stmt"/>
            <line num="1442" count="5" type="stmt"/>
            <line num="1444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1447" count="0" type="method"/>
            <line num="1448" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="locationString() : String" num="1451" count="173" type="method"/>
            <line num="1452" count="173" type="stmt"/>
            <line num="1453" count="173" type="stmt"/>
            <line num="1454" count="173" type="stmt"/>
            <line complexity="11" visibility="public" signature="getPath() : String" num="1461" count="243" type="method"/>
            <line num="1462" count="243" type="stmt"/>
            <line num="1463" count="243" type="stmt"/>
            <line falsecount="243" truecount="532" num="1463" type="cond"/>
            <line num="1464" count="532" type="stmt"/>
            <line num="1465" count="9" type="stmt"/>
            <line num="1466" count="142" type="stmt"/>
            <line num="1467" count="151" type="stmt"/>
            <line num="1468" count="151" type="stmt"/>
            <line num="1470" count="7" type="stmt"/>
            <line num="1471" count="45" type="stmt"/>
            <line num="1472" count="86" type="stmt"/>
            <line num="1473" count="138" type="stmt"/>
            <line num="1474" count="138" type="stmt"/>
            <line falsecount="23" truecount="115" num="1474" type="cond"/>
            <line num="1475" count="115" type="stmt"/>
            <line num="1477" count="138" type="stmt"/>
            <line num="1479" count="236" type="stmt"/>
            <line num="1480" count="5" type="stmt"/>
            <line num="1481" count="2" type="stmt"/>
            <line num="1482" count="243" type="stmt"/>
            <line num="1485" count="243" type="stmt"/>
            <line complexity="23" visibility="private" signature="readEscapeCharacter() : char" num="1497" count="58" type="method"/>
            <line num="1498" count="58" type="stmt"/>
            <line falsecount="57" truecount="1" num="1498" type="cond"/>
            <line num="1499" count="1" type="stmt"/>
            <line num="1502" count="57" type="stmt"/>
            <line num="1503" count="57" type="stmt"/>
            <line num="1504" count="17" type="stmt"/>
            <line num="1505" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="1505" type="cond"/>
            <line num="1506" count="1" type="stmt"/>
            <line num="1509" count="16" type="stmt"/>
            <line num="1510" count="16" type="stmt"/>
            <line falsecount="15" truecount="64" num="1510" type="cond"/>
            <line num="1511" count="64" type="stmt"/>
            <line num="1512" count="64" type="stmt"/>
            <line num="1513" count="64" type="stmt"/>
            <line falsecount="10" truecount="54" num="1513" type="cond"/>
            <line num="1514" count="54" type="stmt"/>
            <line num="1515" count="10" type="stmt"/>
            <line falsecount="3" truecount="7" num="1515" type="cond"/>
            <line num="1516" count="7" type="stmt"/>
            <line num="1517" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="1517" type="cond"/>
            <line num="1518" count="2" type="stmt"/>
            <line num="1520" count="1" type="stmt"/>
            <line num="1523" count="15" type="stmt"/>
            <line num="1524" count="15" type="stmt"/>
            <line num="1526" count="1" type="stmt"/>
            <line num="1527" count="1" type="stmt"/>
            <line num="1529" count="1" type="stmt"/>
            <line num="1530" count="1" type="stmt"/>
            <line num="1532" count="4" type="stmt"/>
            <line num="1533" count="4" type="stmt"/>
            <line num="1535" count="2" type="stmt"/>
            <line num="1536" count="2" type="stmt"/>
            <line num="1538" count="1" type="stmt"/>
            <line num="1539" count="1" type="stmt"/>
            <line num="1541" count="2" type="stmt"/>
            <line num="1542" count="2" type="stmt"/>
            <line num="1543" count="2" type="stmt"/>
            <line num="1546" count="0" type="stmt"/>
            <line num="1547" count="19" type="stmt"/>
            <line num="1548" count="5" type="stmt"/>
            <line num="1549" count="4" type="stmt"/>
            <line num="1550" count="30" type="stmt"/>
            <line num="1551" count="1" type="stmt"/>
            <line num="1553" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="syntaxError(String) : IOException" num="1561" count="93" type="method"/>
            <line num="1562" count="93" type="stmt"/>
            <line complexity="8" visibility="private" signature="consumeNonExecutePrefix() : void" num="1568" count="728" type="method"/>
            <line num="1570" count="731" type="stmt"/>
            <line num="1571" count="733" type="stmt"/>
            <line num="1573" count="732" type="stmt"/>
            <line num="1574" count="733" type="stmt"/>
            <line falsecount="586" truecount="146" num="1574" type="cond"/>
            <line num="1575" count="146" type="stmt"/>
            <line num="1578" count="587" type="stmt"/>
            <line num="1579" count="586" type="stmt"/>
            <line falsecount="5" truecount="582" num="1579" type="cond"/>
            <line num="1580" count="582" type="stmt"/>
            <line num="1584" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 1587()" num="1587" count="1" type="method"/>
            <line num="1588" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="promoteNameToValue(JsonReader) : void" num="1589" count="56" type="method"/>
            <line num="1590" count="56" type="stmt"/>
            <line falsecount="55" truecount="1" num="1590" type="cond"/>
            <line num="1591" count="1" type="stmt"/>
            <line num="1592" count="1" type="stmt"/>
            <line num="1594" count="55" type="stmt"/>
            <line num="1595" count="55" type="stmt"/>
            <line falsecount="55" truecount="0" num="1595" type="cond"/>
            <line num="1596" count="0" type="stmt"/>
            <line num="1598" count="55" type="stmt"/>
            <line falsecount="28" truecount="27" num="1598" type="cond"/>
            <line num="1599" count="27" type="stmt"/>
            <line num="1600" count="28" type="stmt"/>
            <line falsecount="8" truecount="20" num="1600" type="cond"/>
            <line num="1601" count="20" type="stmt"/>
            <line num="1602" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="1602" type="cond"/>
            <line num="1603" count="8" type="stmt"/>
            <line num="1605" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/stream/JsonScope.java" name="JsonScope.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="71" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonScope">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/stream/JsonToken.java" name="JsonToken.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="85" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonToken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/stream/JsonWriter.java" name="JsonWriter.java">
            <metrics coveredelements="281" coveredconditionals="69" complexity="85" loc="658" coveredmethods="35" methods="35" elements="292" classes="1" ncloc="318" statements="183" conditionals="74" coveredstatements="177"/>
            <class name="JsonWriter">
               <metrics coveredelements="281" coveredconditionals="69" complexity="85" coveredmethods="35" methods="35" elements="292" statements="183" conditionals="74" coveredstatements="177"/>
            </class>
            <line complexity="2" visibility="package" signature="&lt;clinit&gt;, line 145()" num="145" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line falsecount="1" truecount="32" num="147" type="cond"/>
            <line num="148" count="32" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 170()" num="170" count="1776" type="method"/>
            <line num="171" count="1782" type="stmt"/>
            <line complexity="2" visibility="public" signature="JsonWriter(Writer)" num="198" count="1783" type="method"/>
            <line num="199" count="1784" type="stmt"/>
            <line falsecount="1784" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="1784" type="stmt"/>
            <line complexity="2" visibility="public" signature="setIndent(String) : void" num="213" count="15" type="method"/>
            <line num="214" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="15" type="stmt"/>
            <line num="219" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLenient(boolean) : void" num="235" count="3332" type="method"/>
            <line num="236" count="3341" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLenient() : boolean" num="242" count="1726" type="method"/>
            <line num="243" count="1727" type="stmt"/>
            <line complexity="1" visibility="public" signature="setHtmlSafe(boolean) : void" num="253" count="3313" type="method"/>
            <line num="254" count="3315" type="stmt"/>
            <line complexity="1" visibility="public" signature="isHtmlSafe() : boolean" num="261" count="1654" type="method"/>
            <line num="262" count="1659" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSerializeNulls(boolean) : void" num="269" count="3924" type="method"/>
            <line num="270" count="3921" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSerializeNulls() : boolean" num="277" count="1670" type="method"/>
            <line num="278" count="1669" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginArray() : JsonWriter" num="287" count="2271" type="method"/>
            <line num="288" count="2271" type="stmt"/>
            <line num="289" count="2270" type="stmt"/>
            <line complexity="1" visibility="public" signature="endArray() : JsonWriter" num="297" count="291" type="method"/>
            <line num="298" count="291" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginObject() : JsonWriter" num="307" count="2527" type="method"/>
            <line num="308" count="2527" type="stmt"/>
            <line num="309" count="2531" type="stmt"/>
            <line complexity="1" visibility="public" signature="endObject() : JsonWriter" num="317" count="537" type="method"/>
            <line num="318" count="542" type="stmt"/>
            <line complexity="1" visibility="private" signature="open(int,char) : JsonWriter" num="325" count="4801" type="method"/>
            <line num="326" count="4801" type="stmt"/>
            <line num="327" count="4795" type="stmt"/>
            <line num="328" count="4796" type="stmt"/>
            <line num="329" count="4796" type="stmt"/>
            <line complexity="5" visibility="private" signature="close(int,int,char) : JsonWriter" num="336" count="827" type="method"/>
            <line num="338" count="831" type="stmt"/>
            <line num="339" count="838" type="stmt"/>
            <line falsecount="840" truecount="2" num="339" type="cond"/>
            <line num="340" count="2" type="stmt"/>
            <line num="342" count="838" type="stmt"/>
            <line falsecount="835" truecount="1" num="342" type="cond"/>
            <line num="343" count="1" type="stmt"/>
            <line num="346" count="834" type="stmt"/>
            <line num="347" count="835" type="stmt"/>
            <line falsecount="64" truecount="773" num="347" type="cond"/>
            <line num="348" count="772" type="stmt"/>
            <line num="350" count="836" type="stmt"/>
            <line num="351" count="836" type="stmt"/>
            <line complexity="2" visibility="private" signature="push(int) : void" num="354" count="6572" type="method"/>
            <line num="355" count="6573" type="stmt"/>
            <line falsecount="6566" truecount="13" num="355" type="cond"/>
            <line num="356" count="13" type="stmt"/>
            <line num="358" count="6579" type="stmt"/>
            <line complexity="2" visibility="private" signature="peek() : int" num="364" count="10535" type="method"/>
            <line num="365" count="10562" type="stmt"/>
            <line falsecount="10559" truecount="6" num="365" type="cond"/>
            <line num="366" count="6" type="stmt"/>
            <line num="368" count="10560" type="stmt"/>
            <line complexity="1" visibility="private" signature="replaceTop(int) : void" num="374" count="9274" type="method"/>
            <line num="375" count="9282" type="stmt"/>
            <line complexity="4" visibility="public" signature="name(String) : JsonWriter" num="384" count="3252" type="method"/>
            <line num="385" count="3258" type="stmt"/>
            <line falsecount="3262" truecount="1" num="385" type="cond"/>
            <line num="386" count="1" type="stmt"/>
            <line num="388" count="3264" type="stmt"/>
            <line falsecount="3264" truecount="1" num="388" type="cond"/>
            <line num="389" count="1" type="stmt"/>
            <line num="391" count="3262" type="stmt"/>
            <line falsecount="3263" truecount="1" num="391" type="cond"/>
            <line num="392" count="1" type="stmt"/>
            <line num="394" count="3265" type="stmt"/>
            <line num="395" count="3260" type="stmt"/>
            <line complexity="2" visibility="private" signature="writeDeferredName() : void" num="398" count="6438" type="method"/>
            <line num="399" count="6443" type="stmt"/>
            <line falsecount="3265" truecount="3194" num="399" type="cond"/>
            <line num="400" count="3192" type="stmt"/>
            <line num="401" count="3196" type="stmt"/>
            <line num="402" count="3192" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(String) : JsonWriter" num="412" count="727" type="method"/>
            <line num="413" count="733" type="stmt"/>
            <line falsecount="706" truecount="38" num="413" type="cond"/>
            <line num="414" count="38" type="stmt"/>
            <line num="416" count="711" type="stmt"/>
            <line num="417" count="713" type="stmt"/>
            <line num="418" count="709" type="stmt"/>
            <line num="419" count="714" type="stmt"/>
            <line complexity="2" visibility="public" signature="jsonValue(String) : JsonWriter" num="429" count="1" type="method"/>
            <line num="430" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="nullValue() : JsonWriter" num="444" count="175" type="method"/>
            <line num="445" count="175" type="stmt"/>
            <line falsecount="84" truecount="91" num="445" type="cond"/>
            <line num="446" count="91" type="stmt"/>
            <line falsecount="62" truecount="29" num="446" type="cond"/>
            <line num="447" count="29" type="stmt"/>
            <line num="449" count="62" type="stmt"/>
            <line num="450" count="62" type="stmt"/>
            <line num="453" count="113" type="stmt"/>
            <line num="454" count="113" type="stmt"/>
            <line num="455" count="113" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(boolean) : JsonWriter" num="463" count="25" type="method"/>
            <line num="464" count="25" type="stmt"/>
            <line num="465" count="25" type="stmt"/>
            <line num="466" count="24" type="stmt"/>
            <line falsecount="9" truecount="15" num="466" type="cond"/>
            <line num="467" count="24" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(Boolean) : JsonWriter" num="475" count="94" type="method"/>
            <line num="476" count="94" type="stmt"/>
            <line falsecount="92" truecount="2" num="476" type="cond"/>
            <line num="477" count="2" type="stmt"/>
            <line num="479" count="92" type="stmt"/>
            <line num="480" count="92" type="stmt"/>
            <line num="481" count="92" type="stmt"/>
            <line falsecount="67" truecount="25" num="481" type="cond"/>
            <line num="482" count="92" type="stmt"/>
            <line complexity="4" visibility="public" signature="value(double) : JsonWriter" num="492" count="26" type="method"/>
            <line num="493" count="26" type="stmt"/>
            <line num="494" count="26" type="stmt"/>
            <line falsecount="23" truecount="3" num="494" type="cond"/>
            <line num="495" count="3" type="stmt"/>
            <line num="497" count="23" type="stmt"/>
            <line num="498" count="23" type="stmt"/>
            <line num="499" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(long) : JsonWriter" num="507" count="49" type="method"/>
            <line num="508" count="49" type="stmt"/>
            <line num="509" count="49" type="stmt"/>
            <line num="510" count="49" type="stmt"/>
            <line num="511" count="49" type="stmt"/>
            <line complexity="6" visibility="public" signature="value(Number) : JsonWriter" num="521" count="725" type="method"/>
            <line num="522" count="730" type="stmt"/>
            <line falsecount="725" truecount="16" num="522" type="cond"/>
            <line num="523" count="16" type="stmt"/>
            <line num="526" count="720" type="stmt"/>
            <line num="527" count="723" type="stmt"/>
            <line num="528" count="719" type="stmt"/>
            <line falsecount="721" truecount="3" num="528" type="cond"/>
            <line num="530" count="3" type="stmt"/>
            <line num="532" count="721" type="stmt"/>
            <line num="533" count="718" type="stmt"/>
            <line num="534" count="721" type="stmt"/>
            <line complexity="2" visibility="public" signature="flush() : void" num="541" count="1" type="method"/>
            <line num="542" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="542" type="cond"/>
            <line num="543" count="1" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="close() : void" num="553" count="16" type="method"/>
            <line num="554" count="16" type="stmt"/>
            <line num="556" count="16" type="stmt"/>
            <line num="557" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="557" type="cond"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="16" type="stmt"/>
            <line complexity="9" visibility="private" signature="string(String) : void" num="563" count="3890" type="method"/>
            <line num="564" count="3897" type="stmt"/>
            <line falsecount="148" truecount="3753" num="564" type="cond"/>
            <line num="565" count="3905" type="stmt"/>
            <line num="566" count="3906" type="stmt"/>
            <line num="567" count="3903" type="stmt"/>
            <line num="568" count="3891" type="stmt"/>
            <line falsecount="3896" truecount="27201" num="568" type="cond"/>
            <line num="569" count="27206" type="stmt"/>
            <line num="570" count="27206" type="stmt"/>
            <line num="571" count="27206" type="stmt"/>
            <line falsecount="5" truecount="27204" num="571" type="cond"/>
            <line num="572" count="27215" type="stmt"/>
            <line num="573" count="27213" type="stmt"/>
            <line falsecount="64" truecount="27152" num="573" type="cond"/>
            <line num="574" count="27147" type="stmt"/>
            <line num="576" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="576" type="cond"/>
            <line num="577" count="1" type="stmt"/>
            <line num="578" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="578" type="cond"/>
            <line num="579" count="1" type="stmt"/>
            <line num="581" count="3" type="stmt"/>
            <line num="583" count="66" type="stmt"/>
            <line falsecount="23" truecount="43" num="583" type="cond"/>
            <line num="584" count="43" type="stmt"/>
            <line num="586" count="66" type="stmt"/>
            <line num="587" count="66" type="stmt"/>
            <line num="589" count="3901" type="stmt"/>
            <line falsecount="63" truecount="3838" num="589" type="cond"/>
            <line num="590" count="3840" type="stmt"/>
            <line num="592" count="3892" type="stmt"/>
            <line complexity="3" visibility="private" signature="newline() : void" num="595" count="6585" type="method"/>
            <line num="596" count="6590" type="stmt"/>
            <line falsecount="313" truecount="6284" num="596" type="cond"/>
            <line num="597" count="6281" type="stmt"/>
            <line num="600" count="313" type="stmt"/>
            <line num="601" count="313" type="stmt"/>
            <line falsecount="313" truecount="646" num="601" type="cond"/>
            <line num="602" count="646" type="stmt"/>
            <line complexity="3" visibility="private" signature="beforeName() : void" num="610" count="3185" type="method"/>
            <line num="611" count="3186" type="stmt"/>
            <line num="612" count="3198" type="stmt"/>
            <line falsecount="2497" truecount="701" num="612" type="cond"/>
            <line num="613" count="698" type="stmt"/>
            <line num="614" count="2497" type="stmt"/>
            <line falsecount="2496" truecount="1" num="614" type="cond"/>
            <line num="615" count="1" type="stmt"/>
            <line num="617" count="3195" type="stmt"/>
            <line num="618" count="3193" type="stmt"/>
            <line complexity="7" visibility="private" signature="beforeValue() : void" num="626" count="6524" type="method"/>
            <line num="628" count="6526" type="stmt"/>
            <line num="629" count="3" type="stmt"/>
            <line num="630" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="630" type="cond"/>
            <line num="631" count="2" type="stmt"/>
            <line num="635" count="697" type="stmt"/>
            <line num="636" count="698" type="stmt"/>
            <line num="637" count="695" type="stmt"/>
            <line num="639" count="2222" type="stmt"/>
            <line num="640" count="2222" type="stmt"/>
            <line num="641" count="2222" type="stmt"/>
            <line num="642" count="2222" type="stmt"/>
            <line num="644" count="415" type="stmt"/>
            <line num="645" count="415" type="stmt"/>
            <line num="646" count="415" type="stmt"/>
            <line num="647" count="415" type="stmt"/>
            <line num="649" count="3191" type="stmt"/>
            <line num="650" count="3192" type="stmt"/>
            <line num="651" count="3185" type="stmt"/>
            <line num="652" count="3187" type="stmt"/>
            <line num="654" count="2" type="stmt"/>
            <line num="655" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java" name="MalformedJsonException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="44" coveredmethods="1" methods="3" elements="7" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="MalformedJsonException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="MalformedJsonException(String)" num="28" count="94" type="method"/>
            <line num="29" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="MalformedJsonException(String,Throwable)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MalformedJsonException(Throwable)" num="39" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.reflect">
         <metrics coveredelements="31" complexity="13" loc="173" methods="6" classes="3" statements="24" coveredconditionals="4" coveredmethods="5" elements="34" ncloc="72" files="3" conditionals="4" coveredstatements="22"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/reflect/PreJava9ReflectionAccessor.java" name="PreJava9ReflectionAccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PreJava9ReflectionAccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="makeAccessible(AccessibleObject) : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/reflect/ReflectionAccessor.java" name="ReflectionAccessor.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="54" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReflectionAccessor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getInstance() : ReflectionAccessor" num="51" count="1664" type="method"/>
            <line num="52" count="1664" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/reflect/UnsafeReflectionAccessor.java" name="UnsafeReflectionAccessor.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="11" loc="86" coveredmethods="4" methods="4" elements="30" classes="1" ncloc="54" statements="22" conditionals="4" coveredstatements="21"/>
            <class name="UnsafeReflectionAccessor">
               <metrics coveredelements="29" coveredconditionals="4" complexity="11" coveredmethods="4" methods="4" elements="30" statements="22" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="3" visibility="public" signature="makeAccessible(AccessibleObject) : void" num="38" count="1517" type="method"/>
            <line num="40" count="1516" type="stmt"/>
            <line num="41" count="1517" type="stmt"/>
            <line falsecount="1517" truecount="1" num="41" type="cond"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="makeAccessibleWithUnsafe(AccessibleObject) : boolean" num="54" count="1519" type="method"/>
            <line num="55" count="1517" type="stmt"/>
            <line falsecount="2" truecount="1518" num="55" type="cond"/>
            <line num="56" count="1518" type="stmt"/>
            <line num="57" count="1516" type="stmt"/>
            <line num="58" count="1516" type="stmt"/>
            <line num="59" count="1519" type="stmt"/>
            <line num="60" count="1519" type="stmt"/>
            <line num="61" count="1518" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getUnsafeInstance() : Object" num="68" count="3" type="method"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="getOverrideField() : Field" num="79" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson">
         <metrics coveredelements="911" complexity="365" loc="4727" methods="223" classes="25" statements="675" coveredconditionals="156" coveredmethods="185" elements="1106" ncloc="1638" files="24" conditionals="208" coveredstatements="570"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/ExclusionStrategy.java" name="ExclusionStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="109" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExclusionStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/FieldAttributes.java" name="FieldAttributes.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="10" loc="161" coveredmethods="8" methods="10" elements="21" classes="1" ncloc="41" statements="11" conditionals="0" coveredstatements="9"/>
            <class name="FieldAttributes">
               <metrics coveredelements="17" coveredconditionals="0" complexity="10" coveredmethods="8" methods="10" elements="21" statements="11" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FieldAttributes(Field)" num="44" count="23" type="method"/>
            <line num="45" count="23" type="stmt"/>
            <line num="46" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaringClass() : Class&lt;?&gt;" num="52" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaredType() : Type" num="79" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaredClass() : Class&lt;?&gt;" num="99" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="110" count="10" type="method"/>
            <line num="111" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotations() : Collection&lt;Annotation&gt;" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasModifier(int) : boolean" num="134" count="7" type="method"/>
            <line num="135" count="7" type="stmt"/>
            <line complexity="1" visibility="package" signature="get(Object) : Object" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="isSynthetic() : boolean" num="158" count="1" type="method"/>
            <line num="159" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/FieldNamingPolicy.java" name="FieldNamingPolicy.java">
            <metrics coveredelements="42" coveredconditionals="10" complexity="15" loc="178" coveredmethods="8" methods="8" elements="42" classes="1" ncloc="60" statements="24" conditionals="10" coveredstatements="24"/>
            <class name="FieldNamingPolicy">
               <metrics coveredelements="42" coveredconditionals="10" complexity="15" coveredmethods="8" methods="8" elements="42" statements="24" conditionals="10" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="38" count="1066" type="method"/>
            <line num="39" count="1066" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="54" count="10" type="method"/>
            <line num="55" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="73" count="10" type="method"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="91" count="10" type="method"/>
            <line num="92" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="114" count="10" type="method"/>
            <line num="115" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="137" count="2" type="method"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="4" visibility="package" signature="separateCamelCase(String,String) : String" num="146" count="32" type="method"/>
            <line num="147" count="32" type="stmt"/>
            <line num="148" count="32" type="stmt"/>
            <line falsecount="32" truecount="569" num="148" type="cond"/>
            <line num="149" count="569" type="stmt"/>
            <line num="150" count="569" type="stmt"/>
            <line falsecount="480" truecount="89" num="150" type="cond"/>
            <line num="151" count="89" type="stmt"/>
            <line num="153" count="569" type="stmt"/>
            <line num="155" count="32" type="stmt"/>
            <line complexity="5" visibility="package" signature="upperCaseFirstLetter(String) : String" num="161" count="20" type="method"/>
            <line num="162" count="20" type="stmt"/>
            <line num="163" count="20" type="stmt"/>
            <line num="164" count="20" type="stmt"/>
            <line num="164" count="7" type="stmt"/>
            <line falsecount="20" truecount="7" num="164" type="cond"/>
            <line num="166" count="20" type="stmt"/>
            <line num="167" count="20" type="stmt"/>
            <line falsecount="14" truecount="6" num="167" type="cond"/>
            <line num="168" count="6" type="stmt"/>
            <line num="171" count="14" type="stmt"/>
            <line num="172" count="14" type="stmt"/>
            <line falsecount="4" truecount="10" num="172" type="cond"/>
            <line num="173" count="10" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/FieldNamingStrategy.java" name="FieldNamingStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldNamingStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/Gson.java" name="Gson.java">
            <metrics coveredelements="378" coveredconditionals="62" complexity="100" loc="1043" coveredmethods="49" methods="50" elements="410" classes="2" ncloc="560" statements="288" conditionals="72" coveredstatements="267"/>
            <class name="Gson">
               <metrics coveredelements="366" coveredconditionals="59" complexity="94" coveredmethods="46" methods="47" elements="392" statements="279" conditionals="66" coveredstatements="261"/>
            </class>
            <class name="Gson.FutureTypeAdapter">
               <metrics coveredelements="12" coveredconditionals="3" complexity="6" coveredmethods="3" methods="3" elements="18" statements="9" conditionals="6" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="Gson()" num="184" count="569" type="method"/>
            <line num="185" count="569" type="stmt"/>
            <line complexity="2" visibility="package" signature="Gson(Excluder,FieldNamingStrategy,Map&lt;Type, InstanceCreator&lt;?&gt;&gt;,boolean,boolean,boolean,boolean,boolean,boolean,boolean,LongSerializationPolicy,String,int,int,List&lt;TypeAdapterFactory&gt;,List&lt;TypeAdapterFactory&gt;,List&lt;TypeAdapterFactory&gt;)" num="194" count="832" type="method"/>
            <line num="202" count="832" type="stmt"/>
            <line num="203" count="832" type="stmt"/>
            <line num="204" count="832" type="stmt"/>
            <line num="205" count="832" type="stmt"/>
            <line num="206" count="832" type="stmt"/>
            <line num="207" count="832" type="stmt"/>
            <line num="208" count="832" type="stmt"/>
            <line num="209" count="832" type="stmt"/>
            <line num="210" count="832" type="stmt"/>
            <line num="211" count="832" type="stmt"/>
            <line num="212" count="832" type="stmt"/>
            <line num="213" count="832" type="stmt"/>
            <line num="214" count="832" type="stmt"/>
            <line num="215" count="832" type="stmt"/>
            <line num="216" count="832" type="stmt"/>
            <line num="217" count="832" type="stmt"/>
            <line num="218" count="832" type="stmt"/>
            <line num="220" count="832" type="stmt"/>
            <line num="223" count="832" type="stmt"/>
            <line num="224" count="832" type="stmt"/>
            <line num="227" count="832" type="stmt"/>
            <line num="230" count="832" type="stmt"/>
            <line num="233" count="832" type="stmt"/>
            <line num="234" count="832" type="stmt"/>
            <line num="235" count="832" type="stmt"/>
            <line num="236" count="832" type="stmt"/>
            <line num="237" count="832" type="stmt"/>
            <line num="238" count="832" type="stmt"/>
            <line num="239" count="832" type="stmt"/>
            <line num="240" count="832" type="stmt"/>
            <line num="242" count="832" type="stmt"/>
            <line num="244" count="832" type="stmt"/>
            <line num="245" count="832" type="stmt"/>
            <line num="246" count="832" type="stmt"/>
            <line num="247" count="832" type="stmt"/>
            <line num="248" count="832" type="stmt"/>
            <line num="249" count="832" type="stmt"/>
            <line num="250" count="832" type="stmt"/>
            <line num="251" count="832" type="stmt"/>
            <line num="252" count="832" type="stmt"/>
            <line num="253" count="832" type="stmt"/>
            <line num="254" count="832" type="stmt"/>
            <line num="255" count="832" type="stmt"/>
            <line num="256" count="832" type="stmt"/>
            <line num="257" count="832" type="stmt"/>
            <line num="258" count="832" type="stmt"/>
            <line num="259" count="832" type="stmt"/>
            <line num="260" count="832" type="stmt"/>
            <line num="261" count="832" type="stmt"/>
            <line num="262" count="832" type="stmt"/>
            <line num="263" count="832" type="stmt"/>
            <line num="265" count="832" type="stmt"/>
            <line falsecount="0" truecount="832" num="265" type="cond"/>
            <line num="266" count="832" type="stmt"/>
            <line num="267" count="832" type="stmt"/>
            <line num="268" count="832" type="stmt"/>
            <line num="271" count="832" type="stmt"/>
            <line num="272" count="832" type="stmt"/>
            <line num="275" count="832" type="stmt"/>
            <line num="276" count="832" type="stmt"/>
            <line num="277" count="832" type="stmt"/>
            <line num="278" count="832" type="stmt"/>
            <line num="279" count="832" type="stmt"/>
            <line num="280" count="832" type="stmt"/>
            <line num="283" count="832" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBuilder() : GsonBuilder" num="292" count="1" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="excluder() : Excluder" num="296" count="1" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldNamingStrategy() : FieldNamingStrategy" num="300" count="1" type="method"/>
            <line num="301" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializeNulls() : boolean" num="304" count="1" type="method"/>
            <line num="305" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="htmlSafe() : boolean" num="308" count="1" type="method"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="doubleAdapter(boolean) : TypeAdapter&lt;Number&gt;" num="312" count="832" type="method"/>
            <line num="313" count="832" type="stmt"/>
            <line falsecount="825" truecount="7" num="313" type="cond"/>
            <line num="314" count="7" type="stmt"/>
            <line num="316" count="825" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Double" num="317" count="47" type="method"/>
            <line num="318" count="47" type="stmt"/>
            <line falsecount="46" truecount="1" num="318" type="cond"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="322" count="46" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Number) : void" num="324" count="34" type="method"/>
            <line num="325" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="325" type="cond"/>
            <line num="326" count="2" type="stmt"/>
            <line num="327" count="2" type="stmt"/>
            <line num="329" count="32" type="stmt"/>
            <line num="330" count="32" type="stmt"/>
            <line num="331" count="25" type="stmt"/>
            <line complexity="2" visibility="private" signature="floatAdapter(boolean) : TypeAdapter&lt;Number&gt;" num="336" count="832" type="method"/>
            <line num="337" count="832" type="stmt"/>
            <line falsecount="825" truecount="7" num="337" type="cond"/>
            <line num="338" count="7" type="stmt"/>
            <line num="340" count="825" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Float" num="341" count="17" type="method"/>
            <line num="342" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="342" type="cond"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="346" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Number) : void" num="348" count="15" type="method"/>
            <line num="349" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="349" type="cond"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="14" type="stmt"/>
            <line num="354" count="14" type="stmt"/>
            <line num="355" count="8" type="stmt"/>
            <line complexity="3" visibility="package" signature="checkValidFloatingPoint(double) : void" num="360" count="46" type="method"/>
            <line num="361" count="46" type="stmt"/>
            <line falsecount="33" truecount="13" num="361" type="cond"/>
            <line num="362" count="13" type="stmt"/>
            <line complexity="2" visibility="private" signature="longAdapter(LongSerializationPolicy) : TypeAdapter&lt;Number&gt;" num="368" count="832" type="method"/>
            <line num="369" count="832" type="stmt"/>
            <line falsecount="5" truecount="827" num="369" type="cond"/>
            <line num="370" count="827" type="stmt"/>
            <line num="372" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Number" num="373" count="5" type="method"/>
            <line num="374" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="378" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Number) : void" num="380" count="7" type="method"/>
            <line num="381" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="381" type="cond"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="atomicLongAdapter(TypeAdapter&lt;Number&gt;) : TypeAdapter&lt;AtomicLong&gt;" num="390" count="832" type="method"/>
            <line num="391" count="832" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,AtomicLong) : void" num="392" count="2" type="method"/>
            <line num="393" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : AtomicLong" num="395" count="2" type="method"/>
            <line num="396" count="2" type="stmt"/>
            <line num="397" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="atomicLongArrayAdapter(TypeAdapter&lt;Number&gt;) : TypeAdapter&lt;AtomicLongArray&gt;" num="402" count="832" type="method"/>
            <line num="403" count="832" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,AtomicLongArray) : void" num="404" count="2" type="method"/>
            <line num="405" count="2" type="stmt"/>
            <line num="406" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="406" type="cond"/>
            <line num="407" count="6" type="stmt"/>
            <line num="409" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : AtomicLongArray" num="411" count="2" type="method"/>
            <line num="412" count="2" type="stmt"/>
            <line num="413" count="2" type="stmt"/>
            <line num="414" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="414" type="cond"/>
            <line num="415" count="6" type="stmt"/>
            <line num="416" count="6" type="stmt"/>
            <line num="418" count="2" type="stmt"/>
            <line num="419" count="2" type="stmt"/>
            <line num="420" count="2" type="stmt"/>
            <line num="421" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="421" type="cond"/>
            <line num="422" count="6" type="stmt"/>
            <line num="424" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="getAdapter(TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="435" count="4727" type="method"/>
            <line num="437" count="4729" type="stmt"/>
            <line falsecount="4726" truecount="0" num="437" type="cond"/>
            <line num="438" count="4723" type="stmt"/>
            <line falsecount="2323" truecount="2404" num="438" type="cond"/>
            <line num="439" count="2409" type="stmt"/>
            <line num="442" count="2323" type="stmt"/>
            <line num="443" count="2323" type="stmt"/>
            <line num="444" count="2323" type="stmt"/>
            <line falsecount="1205" truecount="1118" num="444" type="cond"/>
            <line num="445" count="1117" type="stmt"/>
            <line num="446" count="1117" type="stmt"/>
            <line num="447" count="1117" type="stmt"/>
            <line num="451" count="2321" type="stmt"/>
            <line num="452" count="2321" type="stmt"/>
            <line falsecount="2292" truecount="29" num="452" type="cond"/>
            <line num="453" count="29" type="stmt"/>
            <line num="456" count="2292" type="stmt"/>
            <line num="457" count="2293" type="stmt"/>
            <line num="458" count="2292" type="stmt"/>
            <line num="460" count="2292" type="stmt"/>
            <line num="461" count="44383" type="stmt"/>
            <line num="462" count="44383" type="stmt"/>
            <line falsecount="42098" truecount="2292" num="462" type="cond"/>
            <line num="463" count="2292" type="stmt"/>
            <line num="464" count="2292" type="stmt"/>
            <line num="465" count="2292" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="2294" type="stmt"/>
            <line num="472" count="2294" type="stmt"/>
            <line falsecount="1176" truecount="1118" num="472" type="cond"/>
            <line num="473" count="1118" type="stmt"/>
            <line complexity="5" visibility="public" signature="getDelegateAdapter(TypeAdapterFactory,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="528" count="36" type="method"/>
            <line num="531" count="36" type="stmt"/>
            <line falsecount="33" truecount="3" num="531" type="cond"/>
            <line num="532" count="3" type="stmt"/>
            <line num="535" count="36" type="stmt"/>
            <line num="536" count="36" type="stmt"/>
            <line num="537" count="839" type="stmt"/>
            <line falsecount="592" truecount="247" num="537" type="cond"/>
            <line num="538" count="247" type="stmt"/>
            <line falsecount="211" truecount="36" num="538" type="cond"/>
            <line num="539" count="36" type="stmt"/>
            <line num="541" count="247" type="stmt"/>
            <line num="544" count="592" type="stmt"/>
            <line num="545" count="592" type="stmt"/>
            <line falsecount="556" truecount="36" num="545" type="cond"/>
            <line num="546" count="36" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAdapter(Class&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="558" count="58" type="method"/>
            <line num="559" count="58" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJsonTree(Object) : JsonElement" num="575" count="989" type="method"/>
            <line num="576" count="989" type="stmt"/>
            <line falsecount="988" truecount="1" num="576" type="cond"/>
            <line num="577" count="1" type="stmt"/>
            <line num="579" count="988" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJsonTree(Object,Type) : JsonElement" num="598" count="1035" type="method"/>
            <line num="599" count="1035" type="stmt"/>
            <line num="600" count="1035" type="stmt"/>
            <line num="601" count="62" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJson(Object) : String" num="617" count="436" type="method"/>
            <line num="618" count="441" type="stmt"/>
            <line falsecount="451" truecount="0" num="618" type="cond"/>
            <line num="619" count="0" type="stmt"/>
            <line num="621" count="448" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson(Object,Type) : String" num="639" count="586" type="method"/>
            <line num="640" count="590" type="stmt"/>
            <line num="641" count="596" type="stmt"/>
            <line num="642" count="573" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJson(Object,Appendable) : void" num="659" count="1" type="method"/>
            <line num="660" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="660" type="cond"/>
            <line num="661" count="1" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJson(Object,Type,Appendable) : void" num="683" count="592" type="method"/>
            <line num="684" count="598" type="stmt"/>
            <line num="685" count="601" type="stmt"/>
            <line num="686" count="601" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toJson(Object,Type,JsonWriter) : void" num="697" count="1643" type="method"/>
            <line num="699" count="1641" type="stmt"/>
            <line num="700" count="1644" type="stmt"/>
            <line num="701" count="1644" type="stmt"/>
            <line num="702" count="1645" type="stmt"/>
            <line num="703" count="1645" type="stmt"/>
            <line num="704" count="1645" type="stmt"/>
            <line num="705" count="1644" type="stmt"/>
            <line num="706" count="1645" type="stmt"/>
            <line num="707" count="1645" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="711" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line num="715" count="1632" type="stmt"/>
            <line num="716" count="1643" type="stmt"/>
            <line num="717" count="1642" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson(JsonElement) : String" num="728" count="9" type="method"/>
            <line num="729" count="9" type="stmt"/>
            <line num="730" count="9" type="stmt"/>
            <line num="731" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJson(JsonElement,Appendable) : void" num="742" count="11" type="method"/>
            <line num="743" count="11" type="stmt"/>
            <line num="744" count="11" type="stmt"/>
            <line num="745" count="11" type="stmt"/>
            <line num="747" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="newJsonWriter(Writer) : JsonWriter" num="754" count="600" type="method"/>
            <line num="755" count="603" type="stmt"/>
            <line falsecount="608" truecount="2" num="755" type="cond"/>
            <line num="756" count="2" type="stmt"/>
            <line num="758" count="608" type="stmt"/>
            <line num="759" count="612" type="stmt"/>
            <line falsecount="600" truecount="12" num="759" type="cond"/>
            <line num="760" count="12" type="stmt"/>
            <line num="762" count="612" type="stmt"/>
            <line num="763" count="613" type="stmt"/>
            <line complexity="1" visibility="public" signature="newJsonReader(Reader) : JsonReader" num="769" count="562" type="method"/>
            <line num="770" count="564" type="stmt"/>
            <line num="771" count="565" type="stmt"/>
            <line num="772" count="566" type="stmt"/>
            <line complexity="3" visibility="public" signature="toJson(JsonElement,JsonWriter) : void" num="779" count="13" type="method"/>
            <line num="780" count="13" type="stmt"/>
            <line num="781" count="12" type="stmt"/>
            <line num="782" count="12" type="stmt"/>
            <line num="783" count="12" type="stmt"/>
            <line num="784" count="12" type="stmt"/>
            <line num="785" count="12" type="stmt"/>
            <line num="786" count="12" type="stmt"/>
            <line num="787" count="12" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line num="795" count="12" type="stmt"/>
            <line num="796" count="12" type="stmt"/>
            <line num="797" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(String,Class&lt;T&gt;) : T" num="819" count="476" type="method"/>
            <line num="820" count="478" type="stmt"/>
            <line num="821" count="438" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromJson(String,Type) : T" num="843" count="555" type="method"/>
            <line num="845" count="561" type="stmt"/>
            <line falsecount="560" truecount="1" num="845" type="cond"/>
            <line num="846" count="1" type="stmt"/>
            <line num="848" count="561" type="stmt"/>
            <line num="849" count="560" type="stmt"/>
            <line num="850" count="512" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(Reader,Class&lt;T&gt;) : T" num="871" count="4" type="method"/>
            <line num="872" count="4" type="stmt"/>
            <line num="873" count="4" type="stmt"/>
            <line num="874" count="4" type="stmt"/>
            <line num="875" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(Reader,Type) : T" num="897" count="557" type="method"/>
            <line num="899" count="559" type="stmt"/>
            <line num="900" count="559" type="stmt"/>
            <line num="901" count="513" type="stmt"/>
            <line num="902" count="511" type="stmt"/>
            <line complexity="5" visibility="private" signature="assertFullConsumption(Object,JsonReader) : void" num="905" count="510" type="method"/>
            <line num="906" count="514" type="stmt"/>
            <line num="907" count="518" type="stmt"/>
            <line falsecount="516" truecount="0" num="907" type="cond"/>
            <line num="908" count="0" type="stmt"/>
            <line num="911" count="1" type="stmt"/>
            <line num="913" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="fromJson(JsonReader,Type) : T" num="925" count="606" type="method"/>
            <line num="927" count="611" type="stmt"/>
            <line num="928" count="612" type="stmt"/>
            <line num="929" count="608" type="stmt"/>
            <line num="930" count="611" type="stmt"/>
            <line num="931" count="610" type="stmt"/>
            <line num="932" count="608" type="stmt"/>
            <line num="933" count="609" type="stmt"/>
            <line num="934" count="608" type="stmt"/>
            <line num="935" count="607" type="stmt"/>
            <line num="936" count="551" type="stmt"/>
            <line num="942" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="942" type="cond"/>
            <line num="943" count="1" type="stmt"/>
            <line num="945" count="2" type="stmt"/>
            <line num="947" count="24" type="stmt"/>
            <line num="950" count="3" type="stmt"/>
            <line num="952" count="1" type="stmt"/>
            <line num="953" count="1" type="stmt"/>
            <line num="954" count="1" type="stmt"/>
            <line num="956" count="609" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(JsonElement,Class&lt;T&gt;) : T" num="977" count="14" type="method"/>
            <line num="978" count="14" type="stmt"/>
            <line num="979" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromJson(JsonElement,Type) : T" num="1001" count="36" type="method"/>
            <line num="1003" count="36" type="stmt"/>
            <line falsecount="35" truecount="1" num="1003" type="cond"/>
            <line num="1004" count="1" type="stmt"/>
            <line num="1006" count="35" type="stmt"/>
            <line complexity="2" visibility="public" signature="setDelegate(TypeAdapter&lt;T&gt;) : void" num="1012" count="2292" type="method"/>
            <line num="1013" count="2292" type="stmt"/>
            <line falsecount="2292" truecount="0" num="1013" type="cond"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="2292" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : T" num="1019" count="3" type="method"/>
            <line num="1020" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="1020" type="cond"/>
            <line num="1021" count="0" type="stmt"/>
            <line num="1023" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,T) : void" num="1026" count="1981" type="method"/>
            <line num="1027" count="1981" type="stmt"/>
            <line falsecount="1981" truecount="0" num="1027" type="cond"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1030" count="1981" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1034" count="0" type="method"/>
            <line num="1036" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java" name="GsonBuilder.java">
            <metrics coveredelements="133" coveredconditionals="15" complexity="41" loc="637" coveredmethods="25" methods="27" elements="151" classes="1" ncloc="225" statements="104" conditionals="20" coveredstatements="93"/>
            <class name="GsonBuilder">
               <metrics coveredelements="133" coveredconditionals="15" complexity="41" coveredmethods="25" methods="27" elements="151" statements="104" conditionals="20" coveredstatements="93"/>
            </class>
            <line complexity="1" visibility="public" signature="GsonBuilder()" num="105" count="284" type="method"/>
            <line complexity="1" visibility="package" signature="GsonBuilder(Gson)" num="114" count="1" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setVersion(double) : GsonBuilder" num="140" count="15" type="method"/>
            <line num="141" count="15" type="stmt"/>
            <line num="142" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeFieldsWithModifiers(int) : GsonBuilder" num="156" count="2" type="method"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateNonExecutableJson() : GsonBuilder" num="170" count="3" type="method"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeFieldsWithoutExposeAnnotation() : GsonBuilder" num="181" count="8" type="method"/>
            <line num="182" count="8" type="stmt"/>
            <line num="183" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializeNulls() : GsonBuilder" num="193" count="33" type="method"/>
            <line num="194" count="33" type="stmt"/>
            <line num="195" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="enableComplexMapKeySerialization() : GsonBuilder" num="274" count="9" type="method"/>
            <line num="275" count="9" type="stmt"/>
            <line num="276" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="disableInnerClassSerialization() : GsonBuilder" num="285" count="1" type="method"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLongSerializationPolicy(LongSerializationPolicy) : GsonBuilder" num="298" count="6" type="method"/>
            <line num="299" count="6" type="stmt"/>
            <line num="300" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFieldNamingPolicy(FieldNamingPolicy) : GsonBuilder" num="311" count="15" type="method"/>
            <line num="312" count="15" type="stmt"/>
            <line num="313" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFieldNamingStrategy(FieldNamingStrategy) : GsonBuilder" num="324" count="1" type="method"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExclusionStrategies(ExclusionStrategy) : GsonBuilder" num="339" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addSerializationExclusionStrategy(ExclusionStrategy) : GsonBuilder" num="358" count="4" type="method"/>
            <line num="359" count="4" type="stmt"/>
            <line num="360" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="addDeserializationExclusionStrategy(ExclusionStrategy) : GsonBuilder" num="375" count="5" type="method"/>
            <line num="376" count="5" type="stmt"/>
            <line num="377" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPrettyPrinting() : GsonBuilder" num="386" count="11" type="method"/>
            <line num="387" count="11" type="stmt"/>
            <line num="388" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLenient() : GsonBuilder" num="399" count="1" type="method"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disableHtmlEscaping() : GsonBuilder" num="411" count="3" type="method"/>
            <line num="412" count="3" type="stmt"/>
            <line num="413" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormat(String) : GsonBuilder" num="432" count="6" type="method"/>
            <line num="434" count="6" type="stmt"/>
            <line num="435" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormat(int) : GsonBuilder" num="452" count="2" type="method"/>
            <line num="453" count="2" type="stmt"/>
            <line num="454" count="2" type="stmt"/>
            <line num="455" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormat(int,int) : GsonBuilder" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="registerTypeAdapter(Type,Object) : GsonBuilder" num="496" count="130" type="method"/>
            <line num="498" count="130" type="stmt"/>
            <line num="502" count="130" type="stmt"/>
            <line falsecount="105" truecount="25" num="502" type="cond"/>
            <line num="503" count="25" type="stmt"/>
            <line num="505" count="130" type="stmt"/>
            <line falsecount="48" truecount="82" num="505" type="cond"/>
            <line num="506" count="82" type="stmt"/>
            <line num="507" count="82" type="stmt"/>
            <line num="509" count="130" type="stmt"/>
            <line falsecount="101" truecount="29" num="509" type="cond"/>
            <line num="510" count="29" type="stmt"/>
            <line num="512" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="registerTypeAdapterFactory(TypeAdapterFactory) : GsonBuilder" num="523" count="2" type="method"/>
            <line num="524" count="2" type="stmt"/>
            <line num="525" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="registerTypeHierarchyAdapter(Class&lt;?&gt;,Object) : GsonBuilder" num="542" count="20" type="method"/>
            <line num="544" count="20" type="stmt"/>
            <line num="547" count="20" type="stmt"/>
            <line falsecount="2" truecount="18" num="547" type="cond"/>
            <line num="548" count="18" type="stmt"/>
            <line num="550" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="550" type="cond"/>
            <line num="551" count="2" type="stmt"/>
            <line num="553" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializeSpecialFloatingPointValues() : GsonBuilder" num="576" count="7" type="method"/>
            <line num="577" count="7" type="stmt"/>
            <line num="578" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : Gson" num="587" count="261" type="method"/>
            <line num="588" count="261" type="stmt"/>
            <line num="589" count="261" type="stmt"/>
            <line num="590" count="261" type="stmt"/>
            <line num="592" count="261" type="stmt"/>
            <line num="593" count="261" type="stmt"/>
            <line num="594" count="261" type="stmt"/>
            <line num="596" count="261" type="stmt"/>
            <line num="598" count="261" type="stmt"/>
            <line complexity="8" visibility="private" signature="addTypeAdaptersForDate(String,int,int,List&lt;TypeAdapterFactory&gt;) : void" num="606" count="261" type="method"/>
            <line num="608" count="261" type="stmt"/>
            <line num="609" count="261" type="stmt"/>
            <line num="610" count="261" type="stmt"/>
            <line num="611" count="261" type="stmt"/>
            <line num="613" count="261" type="stmt"/>
            <line falsecount="255" truecount="6" num="613" type="cond"/>
            <line num="614" count="6" type="stmt"/>
            <line num="616" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="616" type="cond"/>
            <line num="617" count="6" type="stmt"/>
            <line num="618" count="6" type="stmt"/>
            <line num="620" count="255" type="stmt"/>
            <line falsecount="255" truecount="0" num="620" type="cond"/>
            <line num="621" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="628" count="255" type="stmt"/>
            <line num="631" count="6" type="stmt"/>
            <line num="632" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="632" type="cond"/>
            <line num="633" count="6" type="stmt"/>
            <line num="634" count="6" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/InstanceCreator.java" name="InstanceCreator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="92" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstanceCreator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonArray.java" name="JsonArray.java">
            <metrics coveredelements="71" coveredconditionals="16" complexity="49" loc="393" coveredmethods="22" methods="31" elements="129" classes="1" ncloc="163" statements="62" conditionals="36" coveredstatements="33"/>
            <class name="JsonArray">
               <metrics coveredelements="71" coveredconditionals="16" complexity="49" coveredmethods="22" methods="31" elements="129" statements="62" conditionals="36" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonArray()" num="39" count="92" type="method"/>
            <line num="40" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonArray(int)" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="deepCopy() : JsonArray" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="53" type="cond"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(Boolean) : void" num="68" count="13" type="method"/>
            <line num="69" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="69" type="cond"/>
            <line complexity="2" visibility="public" signature="add(Character) : void" num="77" count="13" type="method"/>
            <line num="78" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="78" type="cond"/>
            <line complexity="2" visibility="public" signature="add(Number) : void" num="86" count="24" type="method"/>
            <line num="87" count="24" type="stmt"/>
            <line falsecount="16" truecount="8" num="87" type="cond"/>
            <line complexity="2" visibility="public" signature="add(String) : void" num="95" count="10" type="method"/>
            <line num="96" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="96" type="cond"/>
            <line complexity="2" visibility="public" signature="add(JsonElement) : void" num="104" count="142" type="method"/>
            <line num="105" count="142" type="stmt"/>
            <line falsecount="142" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="142" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(JsonArray) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int,JsonElement) : JsonElement" num="128" count="4" type="method"/>
            <line num="129" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(JsonElement) : boolean" num="139" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(int) : JsonElement" num="152" count="3" type="method"/>
            <line num="153" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(JsonElement) : boolean" num="162" count="2" type="method"/>
            <line num="163" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="171" count="8" type="method"/>
            <line num="172" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;JsonElement&gt;" num="190" count="58" type="method"/>
            <line num="191" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : JsonElement" num="202" count="13" type="method"/>
            <line num="203" count="13" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsNumber() : Number" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsString() : String" num="230" count="1" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="232" type="cond"/>
            <line num="233" count="1" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsDouble() : double" num="246" count="1" type="method"/>
            <line num="248" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="248" type="cond"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBigDecimal() : BigDecimal" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBigInteger() : BigInteger" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsFloat() : float" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsLong() : long" num="312" count="1" type="method"/>
            <line num="314" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="314" type="cond"/>
            <line num="315" count="1" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsInt() : int" num="328" count="1" type="method"/>
            <line num="330" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="330" type="cond"/>
            <line num="331" count="1" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsByte() : byte" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsCharacter() : char" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsShort() : short" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBoolean() : boolean" num="376" count="1" type="method"/>
            <line num="378" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="378" type="cond"/>
            <line num="379" count="1" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="384" count="17" type="method"/>
            <line num="386" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="389" count="4" type="method"/>
            <line num="391" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonDeserializationContext.java" name="JsonDeserializationContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonDeserializationContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonDeserializer.java" name="JsonDeserializer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="91" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonDeserializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonElement.java" name="JsonElement.java">
            <metrics coveredelements="35" coveredconditionals="5" complexity="26" loc="322" coveredmethods="10" methods="21" elements="64" classes="1" ncloc="95" statements="35" conditionals="8" coveredstatements="20"/>
            <class name="JsonElement">
               <metrics coveredelements="35" coveredconditionals="5" complexity="26" coveredmethods="10" methods="21" elements="64" statements="35" conditionals="8" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="isJsonArray() : boolean" num="46" count="148" type="method"/>
            <line num="47" count="148" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJsonObject() : boolean" num="55" count="217" type="method"/>
            <line num="56" count="217" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJsonPrimitive() : boolean" num="64" count="562" type="method"/>
            <line num="65" count="562" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJsonNull() : boolean" num="74" count="533" type="method"/>
            <line num="75" count="533" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonObject() : JsonObject" num="87" count="124" type="method"/>
            <line num="88" count="124" type="stmt"/>
            <line falsecount="1" truecount="123" num="88" type="cond"/>
            <line num="89" count="123" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonArray() : JsonArray" num="103" count="36" type="method"/>
            <line num="104" count="36" type="stmt"/>
            <line falsecount="1" truecount="35" num="104" type="cond"/>
            <line num="105" count="35" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonPrimitive() : JsonPrimitive" num="119" count="233" type="method"/>
            <line num="120" count="233" type="stmt"/>
            <line falsecount="0" truecount="233" num="120" type="cond"/>
            <line num="121" count="233" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonNull() : JsonNull" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBoolean() : boolean" num="152" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsNumber() : Number" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsString() : String" num="178" count="1" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsFloat() : float" num="204" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsLong() : long" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsInt() : int" num="230" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsByte() : byte" num="244" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsCharacter() : char" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBigDecimal() : BigDecimal" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBigInteger() : BigInteger" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsShort() : short" num="303" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="310" count="22" type="method"/>
            <line num="312" count="22" type="stmt"/>
            <line num="313" count="22" type="stmt"/>
            <line num="314" count="22" type="stmt"/>
            <line num="315" count="22" type="stmt"/>
            <line num="316" count="22" type="stmt"/>
            <line num="317" count="22" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonIOException.java" name="JsonIOException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="45" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="JsonIOException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonIOException(String)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonIOException(String,Throwable)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonIOException(Throwable)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonNull.java" name="JsonNull.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="67" coveredmethods="4" methods="4" elements="7" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JsonNull">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonNull()" num="38" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="deepCopy() : JsonNull" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="55" count="6" type="method"/>
            <line num="57" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="63" count="17" type="method"/>
            <line num="65" count="17" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonObject.java" name="JsonObject.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="22" loc="205" coveredmethods="14" methods="17" elements="47" classes="1" ncloc="67" statements="20" conditionals="10" coveredstatements="17"/>
            <class name="JsonObject">
               <metrics coveredelements="38" coveredconditionals="7" complexity="22" coveredmethods="14" methods="17" elements="47" statements="20" conditionals="10" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="deepCopy() : JsonObject" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(String,JsonElement) : void" num="57" count="1288" type="method"/>
            <line num="58" count="1288" type="stmt"/>
            <line falsecount="1287" truecount="1" num="58" type="cond"/>
            <line complexity="1" visibility="public" signature="remove(String) : JsonElement" num="68" count="3" type="method"/>
            <line num="69" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProperty(String,String) : void" num="79" count="990" type="method"/>
            <line num="80" count="990" type="stmt"/>
            <line falsecount="988" truecount="2" num="80" type="cond"/>
            <line complexity="2" visibility="public" signature="addProperty(String,Number) : void" num="90" count="11" type="method"/>
            <line num="91" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="91" type="cond"/>
            <line complexity="2" visibility="public" signature="addProperty(String,Boolean) : void" num="101" count="2" type="method"/>
            <line num="102" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="102" type="cond"/>
            <line complexity="2" visibility="public" signature="addProperty(String,Character) : void" num="112" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="113" type="cond"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Map.Entry&lt;String, JsonElement&gt;&gt;" num="122" count="117" type="method"/>
            <line num="123" count="117" type="stmt"/>
            <line complexity="1" visibility="public" signature="keySet() : Set&lt;String&gt;" num="132" count="3" type="method"/>
            <line num="133" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="141" count="5" type="method"/>
            <line num="142" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="has(String) : boolean" num="151" count="8" type="method"/>
            <line num="152" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(String) : JsonElement" num="161" count="92" type="method"/>
            <line num="162" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsJsonPrimitive(String) : JsonPrimitive" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsJsonArray(String) : JsonArray" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsJsonObject(String) : JsonObject" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="195" count="27" type="method"/>
            <line num="197" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="201" count="8" type="method"/>
            <line num="203" count="8" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonParseException.java" name="JsonParseException.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="64" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="JsonParseException">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonParseException(String)" num="41" count="5" type="method"/>
            <line num="42" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonParseException(String,Throwable)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonParseException(Throwable)" num="61" count="51" type="method"/>
            <line num="62" count="51" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonParser.java" name="JsonParser.java">
            <metrics coveredelements="16" coveredconditionals="1" complexity="14" loc="112" coveredmethods="3" methods="7" elements="29" classes="1" ncloc="57" statements="20" conditionals="2" coveredstatements="12"/>
            <class name="JsonParser">
               <metrics coveredelements="16" coveredconditionals="1" complexity="14" coveredmethods="3" methods="7" elements="29" statements="20" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonParser()" num="36" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="parseString(String) : JsonElement" num="46" count="29" type="method"/>
            <line num="47" count="29" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseReader(Reader) : JsonElement" num="57" count="31" type="method"/>
            <line num="58" count="31" type="stmt"/>
            <line num="59" count="31" type="stmt"/>
            <line num="60" count="31" type="stmt"/>
            <line num="61" count="30" type="stmt"/>
            <line falsecount="29" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="29" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="parseReader(JsonReader) : JsonElement" num="80" count="31" type="method"/>
            <line num="82" count="31" type="stmt"/>
            <line num="83" count="31" type="stmt"/>
            <line num="84" count="31" type="stmt"/>
            <line num="85" count="31" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : JsonElement" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(Reader) : JsonElement" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(JsonReader) : JsonElement" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonPrimitive.java" name="JsonPrimitive.java">
            <metrics coveredelements="108" coveredconditionals="34" complexity="47" loc="295" coveredmethods="23" methods="23" elements="118" classes="1" ncloc="136" statements="53" conditionals="42" coveredstatements="51"/>
            <class name="JsonPrimitive">
               <metrics coveredelements="108" coveredconditionals="34" complexity="47" coveredmethods="23" methods="23" elements="118" statements="53" conditionals="42" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonPrimitive(Boolean)" num="42" count="40" type="method"/>
            <line num="43" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonPrimitive(Number)" num="51" count="264" type="method"/>
            <line num="52" count="264" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonPrimitive(String)" num="60" count="1234" type="method"/>
            <line num="61" count="1234" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonPrimitive(Character)" num="70" count="19" type="method"/>
            <line num="73" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="deepCopy() : JsonPrimitive" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBoolean() : boolean" num="90" count="482" type="method"/>
            <line num="91" count="482" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBoolean() : boolean" num="99" count="27" type="method"/>
            <line num="101" count="27" type="stmt"/>
            <line falsecount="6" truecount="21" num="101" type="cond"/>
            <line num="102" count="21" type="stmt"/>
            <line num="105" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNumber() : boolean" num="113" count="628" type="method"/>
            <line num="114" count="628" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsNumber() : Number" num="123" count="319" type="method"/>
            <line num="125" count="319" type="stmt"/>
            <line falsecount="319" truecount="0" num="125" type="cond"/>
            <line complexity="1" visibility="public" signature="isString() : boolean" num="133" count="213" type="method"/>
            <line num="134" count="213" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAsString() : String" num="142" count="235" type="method"/>
            <line num="144" count="235" type="stmt"/>
            <line falsecount="230" truecount="5" num="144" type="cond"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="230" type="stmt"/>
            <line falsecount="229" truecount="1" num="146" type="cond"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="229" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsDouble() : double" num="159" count="15" type="method"/>
            <line num="161" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="161" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsBigDecimal() : BigDecimal" num="170" count="2" type="method"/>
            <line num="172" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="172" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsBigInteger() : BigInteger" num="181" count="1" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="183" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsFloat() : float" num="193" count="1" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="195" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsLong() : long" num="204" count="24" type="method"/>
            <line num="206" count="24" type="stmt"/>
            <line falsecount="4" truecount="20" num="206" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsShort() : short" num="215" count="1" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="217" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsInt() : int" num="226" count="41" type="method"/>
            <line num="228" count="41" type="stmt"/>
            <line falsecount="5" truecount="36" num="228" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsByte() : byte" num="231" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="233" type="cond"/>
            <line complexity="1" visibility="public" signature="getAsCharacter() : char" num="236" count="3" type="method"/>
            <line num="238" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="hashCode() : int" num="241" count="56" type="method"/>
            <line num="243" count="56" type="stmt"/>
            <line falsecount="56" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="56" type="stmt"/>
            <line falsecount="28" truecount="28" num="247" type="cond"/>
            <line num="248" count="28" type="stmt"/>
            <line num="249" count="28" type="stmt"/>
            <line num="251" count="28" type="stmt"/>
            <line falsecount="8" truecount="20" num="251" type="cond"/>
            <line num="252" count="20" type="stmt"/>
            <line num="253" count="20" type="stmt"/>
            <line num="255" count="8" type="stmt"/>
            <line complexity="9" visibility="public" signature="equals(Object) : boolean" num="258" count="123" type="method"/>
            <line num="260" count="123" type="stmt"/>
            <line falsecount="119" truecount="4" num="260" type="cond"/>
            <line num="261" count="4" type="stmt"/>
            <line num="263" count="119" type="stmt"/>
            <line falsecount="89" truecount="30" num="263" type="cond"/>
            <line num="264" count="30" type="stmt"/>
            <line num="266" count="89" type="stmt"/>
            <line num="267" count="89" type="stmt"/>
            <line falsecount="89" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="89" type="stmt"/>
            <line falsecount="63" truecount="26" num="270" type="cond"/>
            <line num="271" count="26" type="stmt"/>
            <line num="273" count="63" type="stmt"/>
            <line falsecount="33" truecount="30" num="273" type="cond"/>
            <line num="274" count="30" type="stmt"/>
            <line num="277" count="30" type="stmt"/>
            <line num="278" count="30" type="stmt"/>
            <line num="280" count="33" type="stmt"/>
            <line complexity="2" visibility="private" signature="isIntegral(JsonPrimitive) : boolean" num="287" count="181" type="method"/>
            <line num="288" count="181" type="stmt"/>
            <line falsecount="41" truecount="140" num="288" type="cond"/>
            <line num="289" count="140" type="stmt"/>
            <line num="290" count="140" type="stmt"/>
            <line num="293" count="41" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonSerializationContext.java" name="JsonSerializationContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonSerializationContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonSerializer.java" name="JsonSerializer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="89" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonSerializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonStreamParser.java" name="JsonStreamParser.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="12" loc="126" coveredmethods="4" methods="5" elements="26" classes="1" ncloc="51" statements="17" conditionals="4" coveredstatements="11"/>
            <class name="JsonStreamParser">
               <metrics coveredelements="17" coveredconditionals="2" complexity="12" coveredmethods="4" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonStreamParser(String)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonStreamParser(Reader)" num="69" count="6" type="method"/>
            <line num="70" count="6" type="stmt"/>
            <line num="71" count="6" type="stmt"/>
            <line num="72" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="next() : JsonElement" num="84" count="13" type="method"/>
            <line num="85" count="13" type="stmt"/>
            <line falsecount="12" truecount="1" num="85" type="cond"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="12" type="stmt"/>
            <line num="90" count="12" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="106" count="24" type="method"/>
            <line num="107" count="24" type="stmt"/>
            <line num="108" count="24" type="stmt"/>
            <line num="109" count="24" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/JsonSyntaxException.java" name="JsonSyntaxException.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="47" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="JsonSyntaxException">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonSyntaxException(String)" num="29" count="5" type="method"/>
            <line num="30" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonSyntaxException(String,Throwable)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonSyntaxException(Throwable)" num="44" count="51" type="method"/>
            <line num="45" count="51" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/LongSerializationPolicy.java" name="LongSerializationPolicy.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="58" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="LongSerializationPolicy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="serialize(Long) : JsonElement" num="35" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long) : JsonElement" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/TypeAdapter.java" name="TypeAdapter.java">
            <metrics coveredelements="37" coveredconditionals="4" complexity="14" loc="290" coveredmethods="9" methods="9" elements="40" classes="1" ncloc="70" statements="27" conditionals="4" coveredstatements="24"/>
            <class name="TypeAdapter">
               <metrics coveredelements="37" coveredconditionals="4" complexity="14" coveredmethods="9" methods="9" elements="40" statements="27" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="toJson(Writer,T) : void" num="140" count="31" type="method"/>
            <line num="141" count="31" type="stmt"/>
            <line num="142" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullSafe() : TypeAdapter&lt;T&gt;" num="185" count="1696" type="method"/>
            <line num="186" count="1696" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,T) : void" num="187" count="36" type="method"/>
            <line num="188" count="36" type="stmt"/>
            <line falsecount="30" truecount="6" num="188" type="cond"/>
            <line num="189" count="6" type="stmt"/>
            <line num="191" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : T" num="194" count="38" type="method"/>
            <line num="195" count="38" type="stmt"/>
            <line falsecount="32" truecount="6" num="195" type="cond"/>
            <line num="196" count="6" type="stmt"/>
            <line num="197" count="6" type="stmt"/>
            <line num="199" count="32" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJson(T) : String" num="214" count="31" type="method"/>
            <line num="215" count="31" type="stmt"/>
            <line num="216" count="31" type="stmt"/>
            <line num="217" count="31" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="31" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJsonTree(T) : JsonElement" num="231" count="16" type="method"/>
            <line num="232" count="16" type="stmt"/>
            <line num="233" count="16" type="stmt"/>
            <line num="234" count="16" type="stmt"/>
            <line num="235" count="16" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(Reader) : T" num="258" count="55" type="method"/>
            <line num="259" count="55" type="stmt"/>
            <line num="260" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(String) : T" num="272" count="55" type="method"/>
            <line num="273" count="55" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromJsonTree(JsonElement) : T" num="282" count="3" type="method"/>
            <line num="283" count="3" type="stmt"/>
            <line num="284" count="3" type="stmt"/>
            <line num="285" count="3" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/TypeAdapterFactory.java" name="TypeAdapterFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="170" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TypeAdapterFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.google.gson.annotations">
         <metrics coveredelements="0" complexity="0" loc="409" methods="0" classes="5" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="65" files="5" conditionals="0" coveredstatements="0"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/annotations/Expose.java" name="Expose.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Expose">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/annotations/JsonAdapter.java" name="JsonAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="104" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/annotations/SerializedName.java" name="SerializedName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="93" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SerializedName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/annotations/Since.java" name="Since.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="63" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Since">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/annotations/Until.java" name="Until.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="68" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Until">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.google.gson.internal.bind.util">
         <metrics coveredelements="177" complexity="55" loc="352" methods="8" classes="1" statements="148" coveredconditionals="45" coveredmethods="8" elements="220" ncloc="204" files="1" conditionals="64" coveredstatements="124"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java" name="ISO8601Utils.java">
            <metrics coveredelements="177" coveredconditionals="45" complexity="55" loc="352" coveredmethods="8" methods="8" elements="220" classes="1" ncloc="204" statements="148" conditionals="64" coveredstatements="124"/>
            <class name="ISO8601Utils">
               <metrics coveredelements="177" coveredconditionals="45" complexity="55" coveredmethods="8" methods="8" elements="220" statements="148" conditionals="64" coveredstatements="124"/>
            </class>
            <line complexity="1" visibility="public" signature="format(Date) : String" num="44" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="format(Date,boolean) : String" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="format(Date,boolean,TimeZone) : String" num="67" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="72" count="3" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="73" type="cond"/>
            <line num="74" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="74" type="cond"/>
            <line num="75" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="94" type="cond"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="97" type="cond"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="32" visibility="public" signature="parse(String,ParsePosition) : Date" num="123" count="31" type="method"/>
            <line num="124" count="31" type="stmt"/>
            <line num="125" count="31" type="stmt"/>
            <line num="126" count="31" type="stmt"/>
            <line num="129" count="31" type="stmt"/>
            <line num="130" count="31" type="stmt"/>
            <line falsecount="0" truecount="31" num="130" type="cond"/>
            <line num="131" count="31" type="stmt"/>
            <line num="135" count="31" type="stmt"/>
            <line num="136" count="31" type="stmt"/>
            <line falsecount="0" truecount="31" num="136" type="cond"/>
            <line num="137" count="31" type="stmt"/>
            <line num="141" count="31" type="stmt"/>
            <line num="143" count="31" type="stmt"/>
            <line num="144" count="31" type="stmt"/>
            <line num="145" count="31" type="stmt"/>
            <line num="146" count="31" type="stmt"/>
            <line num="149" count="31" type="stmt"/>
            <line num="151" count="31" type="stmt"/>
            <line falsecount="30" truecount="1" num="151" type="cond"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="158" type="cond"/>
            <line num="161" count="30" type="stmt"/>
            <line num="162" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="162" type="cond"/>
            <line num="163" count="30" type="stmt"/>
            <line num="166" count="30" type="stmt"/>
            <line num="167" count="30" type="stmt"/>
            <line falsecount="1" truecount="29" num="167" type="cond"/>
            <line num="168" count="29" type="stmt"/>
            <line num="171" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="171" type="cond"/>
            <line num="172" count="30" type="stmt"/>
            <line num="173" count="30" type="stmt"/>
            <line falsecount="1" truecount="29" num="173" type="cond"/>
            <line num="174" count="29" type="stmt"/>
            <line num="175" count="29" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="28" truecount="0" num="175" type="cond"/>
            <line num="177" count="29" type="stmt"/>
            <line falsecount="28" truecount="1" num="177" type="cond"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="200" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="30" type="stmt"/>
            <line num="205" count="30" type="stmt"/>
            <line num="207" count="30" type="stmt"/>
            <line falsecount="6" truecount="24" num="207" type="cond"/>
            <line num="208" count="24" type="stmt"/>
            <line num="209" count="24" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="210" type="cond"/>
            <line num="211" count="6" type="stmt"/>
            <line num="214" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="214" type="cond"/>
            <line num="216" count="6" type="stmt"/>
            <line num="218" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="218" type="cond"/>
            <line num="219" count="1" type="stmt"/>
            <line num="225" count="5" type="stmt"/>
            <line num="228" count="5" type="stmt"/>
            <line num="230" count="5" type="stmt"/>
            <line num="231" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="231" type="cond"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="30" type="stmt"/>
            <line num="249" count="30" type="stmt"/>
            <line num="250" count="30" type="stmt"/>
            <line num="251" count="30" type="stmt"/>
            <line num="252" count="30" type="stmt"/>
            <line num="253" count="30" type="stmt"/>
            <line num="254" count="30" type="stmt"/>
            <line num="255" count="30" type="stmt"/>
            <line num="256" count="30" type="stmt"/>
            <line num="258" count="30" type="stmt"/>
            <line num="259" count="30" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkOffset(String,int,char) : boolean" num="287" count="182" type="method"/>
            <line num="288" count="182" type="stmt"/>
            <line complexity="8" visibility="private" signature="parseInt(String,int,int) : int" num="300" count="183" type="method"/>
            <line num="301" count="183" type="stmt"/>
            <line falsecount="183" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="305" count="183" type="stmt"/>
            <line num="306" count="183" type="stmt"/>
            <line num="307" count="183" type="stmt"/>
            <line num="308" count="183" type="stmt"/>
            <line falsecount="0" truecount="183" num="308" type="cond"/>
            <line num="309" count="183" type="stmt"/>
            <line num="310" count="183" type="stmt"/>
            <line falsecount="183" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="183" type="stmt"/>
            <line num="315" count="183" type="stmt"/>
            <line falsecount="183" truecount="246" num="315" type="cond"/>
            <line num="316" count="246" type="stmt"/>
            <line num="317" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="246" type="stmt"/>
            <line num="321" count="246" type="stmt"/>
            <line num="323" count="183" type="stmt"/>
            <line complexity="2" visibility="private" signature="padInt(StringBuilder,int,int) : void" num="333" count="22" type="method"/>
            <line num="334" count="22" type="stmt"/>
            <line num="335" count="22" type="stmt"/>
            <line falsecount="22" truecount="10" num="335" type="cond"/>
            <line num="336" count="10" type="stmt"/>
            <line num="338" count="22" type="stmt"/>
            <line complexity="4" visibility="private" signature="indexOfNonDigit(String,int) : int" num="344" count="1" type="method"/>
            <line num="345" count="1" type="stmt"/>
            <line falsecount="0" truecount="3" num="345" type="cond"/>
            <line num="346" count="3" type="stmt"/>
            <line num="347" count="3" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line falsecount="2" truecount="1" num="347" type="cond"/>
            <line num="349" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.sql">
         <metrics coveredelements="69" complexity="28" loc="253" methods="16" classes="4" statements="45" coveredconditionals="17" coveredmethods="15" elements="79" ncloc="165" files="4" conditionals="18" coveredstatements="37"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/sql/SqlDateTypeAdapter.java" name="SqlDateTypeAdapter.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="8" loc="70" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="42" statements="9" conditionals="6" coveredstatements="8"/>
            <class name="SqlDateTypeAdapter">
               <metrics coveredelements="18" coveredconditionals="6" complexity="8" coveredmethods="4" methods="4" elements="19" statements="9" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="40" count="914" type="method"/>
            <line num="42" count="913" type="stmt"/>
            <line falsecount="910" truecount="3" num="42" type="cond"/>
            <line complexity="1" visibility="private" signature="SqlDateTypeAdapter()" num="49" count="3" type="method"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : java.sql.Date" num="52" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="54" type="cond"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,java.sql.Date) : void" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="68" type="cond"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/sql/SqlTimeTypeAdapter.java" name="SqlTimeTypeAdapter.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="8" loc="69" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="41" statements="9" conditionals="6" coveredstatements="8"/>
            <class name="SqlTimeTypeAdapter">
               <metrics coveredelements="18" coveredconditionals="6" complexity="8" coveredmethods="4" methods="4" elements="19" statements="9" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="42" count="916" type="method"/>
            <line num="44" count="917" type="stmt"/>
            <line falsecount="913" truecount="3" num="44" type="cond"/>
            <line complexity="1" visibility="private" signature="SqlTimeTypeAdapter()" num="50" count="3" type="method"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : Time" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="54" type="cond"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Time) : void" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="67" type="cond"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/sql/SqlTimestampTypeAdapter.java" name="SqlTimestampTypeAdapter.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="6" loc="43" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="36" statements="8" conditionals="4" coveredstatements="8"/>
            <class name="SqlTimestampTypeAdapter">
               <metrics coveredelements="16" coveredconditionals="4" complexity="6" coveredmethods="4" methods="4" elements="16" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="16" count="910" type="method"/>
            <line num="18" count="910" type="stmt"/>
            <line falsecount="908" truecount="3" num="18" type="cond"/>
            <line num="19" count="3" type="stmt"/>
            <line num="20" count="3" type="stmt"/>
            <line num="22" count="907" type="stmt"/>
            <line complexity="1" visibility="private" signature="SqlTimestampTypeAdapter(TypeAdapter&lt;Date&gt;)" num="29" count="3" type="method"/>
            <line num="30" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Timestamp" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="36" type="cond"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Timestamp) : void" num="39" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/internal/sql/SqlTypesSupport.java" name="SqlTypesSupport.java">
            <metrics coveredelements="17" coveredconditionals="1" complexity="6" loc="71" coveredmethods="3" methods="4" elements="25" classes="1" ncloc="46" statements="19" conditionals="2" coveredstatements="13"/>
            <class name="SqlTypesSupport">
               <metrics coveredelements="17" coveredconditionals="1" complexity="6" coveredmethods="3" methods="4" elements="25" statements="19" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="3" visibility="package" signature="&lt;clinit&gt;, line 34()" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="44" type="cond"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="deserialize(Date) : java.sql.Date" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="deserialize(Date) : Timestamp" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SqlTypesSupport()" num="69" count="0" type="method"/>
         </file>
      </package>
      <package name="com.google.gson.reflect">
         <metrics coveredelements="96" complexity="41" loc="320" methods="20" classes="1" statements="84" coveredconditionals="22" coveredmethods="17" elements="146" ncloc="176" files="1" conditionals="42" coveredstatements="57"/>
         <file path="/tmp/v1/gson/src/main/java/com/google/gson/reflect/TypeToken.java" name="TypeToken.java">
            <metrics coveredelements="96" coveredconditionals="22" complexity="41" loc="320" coveredmethods="17" methods="20" elements="146" classes="1" ncloc="176" statements="84" conditionals="42" coveredstatements="57"/>
            <class name="TypeToken">
               <metrics coveredelements="96" coveredconditionals="22" complexity="41" coveredmethods="17" methods="20" elements="146" statements="84" conditionals="42" coveredstatements="57"/>
            </class>
            <line complexity="1" visibility="protected" signature="TypeToken()" num="60" count="152" type="method"/>
            <line num="62" count="152" type="stmt"/>
            <line num="63" count="152" type="stmt"/>
            <line num="64" count="152" type="stmt"/>
            <line complexity="1" visibility="package" signature="TypeToken(Type)" num="70" count="5529" type="method"/>
            <line num="72" count="5531" type="stmt"/>
            <line num="73" count="5531" type="stmt"/>
            <line num="74" count="5540" type="stmt"/>
            <line complexity="2" visibility="package" signature="getSuperclassTypeParameter(Class&lt;?&gt;) : Type" num="81" count="152" type="method"/>
            <line num="82" count="152" type="stmt"/>
            <line num="83" count="152" type="stmt"/>
            <line falsecount="152" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="152" type="stmt"/>
            <line num="87" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawType() : Class&lt;? super T&gt;" num="93" count="46590" type="method"/>
            <line num="94" count="46595" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : Type" num="100" count="9629" type="method"/>
            <line num="101" count="9642" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAssignableFrom(Class&lt;?&gt;) : boolean" num="110" count="4" type="method"/>
            <line num="112" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="isAssignableFrom(Type) : boolean" num="121" count="15" type="method"/>
            <line num="123" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="15" type="stmt"/>
            <line falsecount="9" truecount="6" num="127" type="cond"/>
            <line num="128" count="6" type="stmt"/>
            <line num="131" count="9" type="stmt"/>
            <line falsecount="5" truecount="4" num="131" type="cond"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="133" type="cond"/>
            <line num="134" count="5" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAssignableFrom(TypeToken&lt;?&gt;) : boolean" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isAssignableFrom(Type,GenericArrayType) : boolean" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="isAssignableFrom(Type,ParameterizedType,Map&lt;String, Type&gt;) : boolean" num="185" count="30" type="method"/>
            <line num="188" count="30" type="stmt"/>
            <line falsecount="15" truecount="15" num="188" type="cond"/>
            <line num="189" count="15" type="stmt"/>
            <line num="192" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="197" count="15" type="stmt"/>
            <line num="198" count="15" type="stmt"/>
            <line num="199" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="199" type="cond"/>
            <line num="200" count="15" type="stmt"/>
            <line num="204" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="204" type="cond"/>
            <line num="205" count="15" type="stmt"/>
            <line num="206" count="15" type="stmt"/>
            <line num="207" count="15" type="stmt"/>
            <line falsecount="15" truecount="15" num="207" type="cond"/>
            <line num="208" count="15" type="stmt"/>
            <line num="209" count="15" type="stmt"/>
            <line num="210" count="15" type="stmt"/>
            <line falsecount="15" truecount="10" num="210" type="cond"/>
            <line num="211" count="10" type="stmt"/>
            <line num="212" count="10" type="stmt"/>
            <line num="214" count="15" type="stmt"/>
            <line num="218" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="15" type="stmt"/>
            <line num="224" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="230" count="15" type="stmt"/>
            <line num="231" count="15" type="stmt"/>
            <line complexity="4" visibility="private" signature="typeEquals(ParameterizedType,ParameterizedType,Map&lt;String, Type&gt;) : boolean" num="238" count="15" type="method"/>
            <line num="240" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="240" type="cond"/>
            <line num="241" count="5" type="stmt"/>
            <line num="242" count="5" type="stmt"/>
            <line num="243" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="243" type="cond"/>
            <line num="244" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="244" type="cond"/>
            <line num="245" count="5" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildUnexpectedTypeError(Type,Class&lt;?&gt;) : AssertionError" num="253" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="matches(Type,Type,Map&lt;String, Type&gt;) : boolean" num="272" count="5" type="method"/>
            <line num="273" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="279" count="13913" type="method"/>
            <line num="280" count="13919" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="283" count="3160" type="method"/>
            <line num="284" count="3164" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="288" count="1" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Type) : TypeToken&lt;?&gt;" num="295" count="5382" type="method"/>
            <line num="296" count="5386" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Class&lt;T&gt;) : TypeToken&lt;T&gt;" num="302" count="135" type="method"/>
            <line num="303" count="135" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterized(Type,Type) : TypeToken&lt;?&gt;" num="310" count="5" type="method"/>
            <line num="311" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArray(Type) : TypeToken&lt;?&gt;" num="317" count="2" type="method"/>
            <line num="318" count="2" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="Gson 2.8.9-SNAPSHOT" timestamp="1651498830866">
      <metrics coveredelements="8644" complexity="2037" loc="19213" methods="1549" classes="360" statements="7564" packages="12" coveredconditionals="254" coveredmethods="1464" elements="9511" ncloc="14508" files="106" conditionals="398" coveredstatements="6926"/>
      <package name="com.google.gson.internal">
         <metrics coveredelements="354" complexity="76" loc="736" methods="51" classes="14" statements="283" coveredconditionals="30" coveredmethods="51" elements="366" ncloc="498" files="7" conditionals="32" coveredstatements="273"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/GsonBuildConfigTest.java" name="GsonBuildConfigTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GsonBuildConfigTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testEnsureGsonBuildConfigGetsUpdatedToMavenVersion() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/GsonTypesTest.java" name="GsonTypesTest.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="6" loc="74" coveredmethods="3" methods="3" elements="26" classes="5" ncloc="39" statements="19" conditionals="4" coveredstatements="17"/>
            <class name="GsonTypesTest">
               <metrics coveredelements="23" complexity="6" methods="3" testruns="2" statements="19" coveredconditionals="3" coveredmethods="3" elements="26" testfailures="0" testduration="0.0" conditionals="4" coveredstatements="17" testpasses="2"/>
            </class>
            <class name="GsonTypesTest.D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GsonTypesTest.A">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GsonTypesTest.B">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GsonTypesTest.C">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testNewParameterizedTypeWithoutOwner() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetFirstTypeArgument() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFirstTypeArgument(Type) : Type" num="67" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="4" truecount="1" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="4" truecount="0" num="71" type="cond"/>
            <line num="72" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/JavaVersionTest.java" name="JavaVersionTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="7" loc="81" coveredmethods="7" methods="7" elements="25" classes="1" ncloc="45" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="JavaVersionTest">
               <metrics coveredelements="25" complexity="7" methods="7" testruns="7" statements="18" coveredconditionals="0" coveredmethods="7" elements="25" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="18" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetMajorJavaVersion() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJava6() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJava7() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJava8() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJava9() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJava10() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnknownVersionFormat() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java" name="LazilyParsedNumberTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="32" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="LazilyParsedNumberTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="21" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java" name="LinkedHashTreeMapTest.java">
            <metrics coveredelements="194" coveredconditionals="23" complexity="38" loc="291" coveredmethods="23" methods="23" elements="198" classes="1" ncloc="240" statements="151" conditionals="24" coveredstatements="148"/>
            <class name="LinkedHashTreeMapTest">
               <metrics coveredelements="194" complexity="38" methods="23" testruns="15" statements="151" coveredconditionals="23" coveredmethods="23" elements="198" testfailures="0" testduration="0.022000000000000002" conditionals="24" coveredstatements="148" testpasses="15"/>
            </class>
            <line complexity="1" visibility="public" signature="testIterationOrder() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveRootDoesNotDoubleUnlink() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPutNullKeyFails() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPutNonComparableKeyFails() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNonComparableKeyReturnsFalse() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullKeyIsAlwaysFalse() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutOverrides() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyStringValues() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testForceDoublingAndRehash() : void" num="104" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="108" type="cond"/>
            <line num="109" count="1000" type="stmt"/>
            <line num="110" count="1000" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="113" type="cond"/>
            <line num="114" count="1000" type="stmt"/>
            <line num="115" count="1000" type="stmt"/>
            <line num="116" count="1000" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="120" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsAndHashCode() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAvlWalker() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertAvlWalker(Node&lt;String, String&gt;,String) : void" num="159" count="5" type="method"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line num="162" count="5" type="stmt"/>
            <line num="163" count="23" type="stmt"/>
            <line num="165" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAvlBuilder() : void" num="168" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertAvlBuilder(int,String) : void" num="191" count="18" type="method"/>
            <line num="192" count="18" type="stmt"/>
            <line num="193" count="18" type="stmt"/>
            <line num="194" count="18" type="stmt"/>
            <line num="195" count="18" type="stmt"/>
            <line falsecount="18" truecount="197" num="195" type="cond"/>
            <line num="196" count="197" type="stmt"/>
            <line num="198" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleCapacity() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDoubleCapacityAllNodesOnLeft() : void" num="211" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="221" type="cond"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="node(String) : Node&lt;String, String&gt;" num="229" count="230" type="method"/>
            <line num="230" count="230" type="stmt"/>
            <line complexity="3" visibility="private" signature="node(Node&lt;String, String&gt;,String,Node&lt;String, String&gt;) : Node&lt;String, String&gt;" num="233" count="17" type="method"/>
            <line num="235" count="17" type="stmt"/>
            <line num="236" count="17" type="stmt"/>
            <line falsecount="4" truecount="13" num="236" type="cond"/>
            <line num="237" count="13" type="stmt"/>
            <line num="238" count="13" type="stmt"/>
            <line num="240" count="17" type="stmt"/>
            <line falsecount="4" truecount="13" num="240" type="cond"/>
            <line num="241" count="13" type="stmt"/>
            <line num="242" count="13" type="stmt"/>
            <line num="244" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertTree(String,Node&lt;?, ?&gt;) : void" num="247" count="21" type="method"/>
            <line num="248" count="21" type="stmt"/>
            <line num="249" count="21" type="stmt"/>
            <line complexity="5" visibility="private" signature="assertConsistent(Node&lt;?, ?&gt;) : void" num="252" count="210" type="method"/>
            <line num="253" count="210" type="stmt"/>
            <line num="254" count="210" type="stmt"/>
            <line falsecount="121" truecount="89" num="254" type="cond"/>
            <line num="255" count="89" type="stmt"/>
            <line num="256" count="89" type="stmt"/>
            <line num="257" count="89" type="stmt"/>
            <line num="259" count="210" type="stmt"/>
            <line num="260" count="210" type="stmt"/>
            <line falsecount="111" truecount="99" num="260" type="cond"/>
            <line num="261" count="99" type="stmt"/>
            <line num="262" count="99" type="stmt"/>
            <line num="263" count="99" type="stmt"/>
            <line num="265" count="210" type="stmt"/>
            <line falsecount="22" truecount="188" num="265" type="cond"/>
            <line num="266" count="188" type="stmt"/>
            <line num="268" count="210" type="stmt"/>
            <line falsecount="210" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="toString(Node&lt;?, ?&gt;) : String" num="273" count="217" type="method"/>
            <line num="274" count="217" type="stmt"/>
            <line falsecount="207" truecount="10" num="274" type="cond"/>
            <line num="275" count="10" type="stmt"/>
            <line num="276" count="207" type="stmt"/>
            <line falsecount="98" truecount="109" num="276" type="cond"/>
            <line num="277" count="109" type="stmt"/>
            <line num="279" count="98" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertIterationOrder(Iterable&lt;T&gt;,T) : void" num="283" count="4" type="method"/>
            <line num="285" count="4" type="stmt"/>
            <line num="286" count="4" type="stmt"/>
            <line num="287" count="8" type="stmt"/>
            <line num="289" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java" name="LinkedTreeMapTest.java">
            <metrics coveredelements="88" coveredconditionals="4" complexity="16" loc="151" coveredmethods="12" methods="12" elements="90" classes="1" ncloc="115" statements="74" conditionals="4" coveredstatements="72"/>
            <class name="LinkedTreeMapTest">
               <metrics coveredelements="88" complexity="16" methods="12" testruns="11" statements="74" coveredconditionals="4" coveredmethods="12" elements="90" testfailures="0" testduration="0.022" conditionals="4" coveredstatements="72" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="testIterationOrder() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveRootDoesNotDoubleUnlink() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPutNullKeyFails() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPutNonComparableKeyFails() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNonComparableKeyReturnsFalse() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsNullKeyIsAlwaysFalse() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutOverrides() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyStringValues() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLargeSetOfRandomKeys() : void" num="101" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="105" type="cond"/>
            <line num="106" count="1000" type="stmt"/>
            <line num="107" count="1000" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="110" type="cond"/>
            <line num="111" count="1000" type="stmt"/>
            <line num="112" count="1000" type="stmt"/>
            <line num="113" count="1000" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="117" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsAndHashCode() : void" num="127" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertIterationOrder(Iterable&lt;T&gt;,T) : void" num="143" count="4" type="method"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="147" count="8" type="stmt"/>
            <line num="149" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java" name="UnsafeAllocatorInstantiationTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="74" coveredmethods="3" methods="3" elements="17" classes="4" ncloc="36" statements="14" conditionals="0" coveredstatements="11"/>
            <class name="UnsafeAllocatorInstantiationTest">
               <metrics coveredelements="14" complexity="6" methods="3" testruns="3" statements="14" coveredconditionals="0" coveredmethods="3" elements="17" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="3"/>
            </class>
            <class name="UnsafeAllocatorInstantiationTest.Interface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnsafeAllocatorInstantiationTest.AbstractClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnsafeAllocatorInstantiationTest.ConcreteClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testInterfaceInstantiation() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAbstractClassInstantiation() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConcreteClassInstantiation() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.bind">
         <metrics coveredelements="494" complexity="103" loc="939" methods="62" classes="9" statements="459" coveredconditionals="7" coveredmethods="62" elements="535" ncloc="752" files="5" conditionals="14" coveredstatements="425"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/bind/DefaultDateTypeAdapterTest.java" name="DefaultDateTypeAdapterTest.java">
            <metrics coveredelements="119" coveredconditionals="7" complexity="25" loc="218" coveredmethods="16" methods="16" elements="128" classes="1" ncloc="175" statements="98" conditionals="14" coveredstatements="96"/>
            <class name="DefaultDateTypeAdapterTest">
               <metrics coveredelements="119" complexity="25" methods="16" testruns="11" statements="98" coveredconditionals="7" coveredmethods="16" elements="128" testfailures="0" testduration="0.13000000000000003" conditionals="14" coveredstatements="96" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="testFormattingInEnUs() : void" num="43" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFormattingInFr() : void" num="47" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="assertFormattingAlwaysEmitsUsLocale(Locale) : void" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="57" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testParsingDatesFormattedWithSystemLocale() : void" num="79" testsuccess="true" count="1" testduration="0.082" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="85" type="cond"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="97" type="cond"/>
            <line falsecount="1" truecount="0" num="97" type="cond"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParsingDatesFormattedWithUsLocale() : void" num="108" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFormatUsesDefaultTimezone() : void" num="132" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="138" type="cond"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateDeserializationISO8601() : void" num="148" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateSerialization() : void" num="157" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDatePattern() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidDatePattern() : void" num="177" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullValue() : void" num="184" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnexpectedToken() : void" num="190" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="dateAdapter(TypeAdapterFactory) : TypeAdapter&lt;Date&gt;" num="198" count="43" type="method"/>
            <line num="199" count="43" type="stmt"/>
            <line num="200" count="43" type="stmt"/>
            <line num="201" count="43" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFormatted(String,TypeAdapterFactory) : void" num="204" count="17" type="method"/>
            <line num="205" count="17" type="stmt"/>
            <line num="206" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertParsed(String,TypeAdapterFactory) : void" num="209" count="22" type="method"/>
            <line num="210" count="22" type="stmt"/>
            <line num="211" count="22" type="stmt"/>
            <line num="212" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="toLiteral(String) : String" num="215" count="63" type="method"/>
            <line num="216" count="63" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java" name="JsonElementReaderTest.java">
            <metrics coveredelements="211" coveredconditionals="0" complexity="42" loc="348" coveredmethods="18" methods="18" elements="235" classes="1" ncloc="311" statements="217" conditionals="0" coveredstatements="193"/>
            <class name="JsonElementReaderTest">
               <metrics coveredelements="211" complexity="42" methods="18" testruns="18" statements="217" coveredconditionals="0" coveredmethods="18" elements="235" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="193" testpasses="18"/>
            </class>
            <line complexity="1" visibility="public" signature="testNumbers() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNansAndInfinities() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStrictNansAndInfinities() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumbersFromStrings() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsFromNumbers() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleans() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStrings() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArray() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObject() : void" num="137" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArray() : void" num="155" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedArrays() : void" num="162" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedObjects() : void" num="175" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyObject() : void" num="191" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipValue() : void" num="198" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="17" visibility="public" signature="testWrongType() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testNextJsonElement() : void" num="302" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEarlyClose() : void" num="337" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/bind/JsonTreeReaderTest.java" name="JsonTreeReaderTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="2" loc="50" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="32" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="JsonTreeReaderTest">
               <metrics coveredelements="20" complexity="2" methods="2" testruns="2" statements="18" coveredconditionals="0" coveredmethods="2" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testSkipValue_emptyJsonObject() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipValue_filledJsonObject() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java" name="JsonTreeWriterTest.java">
            <metrics coveredelements="121" coveredconditionals="0" complexity="25" loc="203" coveredmethods="17" methods="17" elements="129" classes="1" ncloc="169" statements="112" conditionals="0" coveredstatements="104"/>
            <class name="JsonTreeWriterTest">
               <metrics coveredelements="121" complexity="25" methods="17" testruns="17" statements="112" coveredconditionals="0" coveredmethods="17" elements="129" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="104" testpasses="17"/>
            </class>
            <line complexity="1" visibility="public" signature="testArray() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedArray() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObject() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedObject() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteAfterClose() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPrematureClose() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeNullsFalse() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeNullsTrue() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyWriter() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginArray() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginObject() : void" num="128" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValueString() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoolValue() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoolMaisValue() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNansAndInfinities() : void" num="151" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStrictNansAndInfinities() : void" num="162" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStrictBoxedNansAndInfinities() : void" num="183" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java" name="RecursiveTypesResolveTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="9" loc="120" coveredmethods="9" methods="9" elements="23" classes="5" ncloc="65" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="RecursiveTypesResolveTest">
               <metrics coveredelements="23" complexity="9" methods="9" testruns="9" statements="14" coveredconditionals="0" coveredmethods="9" elements="23" testfailures="0" testduration="0.018" conditionals="0" coveredstatements="14" testpasses="9"/>
            </class>
            <class name="RecursiveTypesResolveTest.Foo1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RecursiveTypesResolveTest.Foo2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RecursiveTypesResolveTest.TestType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RecursiveTypesResolveTest.TestType2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testRecursiveResolveSimple() : void" num="50" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIssue603PrintStream() : void" num="60" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIssue440WeakReference() : void" num="65" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleSupertype() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleSubtype() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuperSubtype() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubSupertype() : void" num="90" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRecursiveTypeVariablesResolve1() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRecursiveTypeVariablesResolve12() : void" num="115" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.stream">
         <metrics coveredelements="1640" complexity="312" loc="2693" methods="181" classes="4" statements="1577" coveredconditionals="36" coveredmethods="177" elements="1796" ncloc="2351" files="3" conditionals="38" coveredstatements="1427"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java" name="JsonReaderPathTest.java">
            <metrics coveredelements="169" coveredconditionals="0" complexity="13" loc="257" coveredmethods="13" methods="13" elements="169" classes="2" ncloc="212" statements="156" conditionals="0" coveredstatements="156"/>
            <class name="JsonReaderPathTest">
               <metrics coveredelements="164" complexity="11" methods="11" testruns="20" statements="153" coveredconditionals="0" coveredmethods="11" elements="164" testfailures="1" testduration="0.04400000000000001" conditionals="0" coveredstatements="153" testpasses="19"/>
            </class>
            <class name="JsonReaderPathTest.Factory">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : List&lt;Object[]&gt;" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="path() : void" num="47" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectPath() : void" num="86" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayPath() : void" num="126" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="multipleTopLevelValuesInOneDocument() : void" num="156" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipArrayElements() : void" num="169" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipObjectNames() : void" num="177" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipObjectValues() : void" num="184" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipNestedStructures() : void" num="195" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayOfObjects() : void" num="202" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayOfArrays() : void" num="222" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : JsonReader" num="244" count="10" type="method"/>
            <line num="245" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : JsonReader" num="249" count="9" type="method"/>
            <line num="250" count="9" type="stmt"/>
            <line num="251" count="9" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java" name="JsonReaderTest.java">
            <metrics coveredelements="1062" coveredconditionals="28" complexity="234" loc="1788" coveredmethods="125" methods="129" elements="1196" classes="1" ncloc="1558" statements="1037" conditionals="30" coveredstatements="909"/>
            <class name="JsonReaderTest">
               <metrics coveredelements="1062" complexity="234" methods="129" testruns="120" statements="1037" coveredconditionals="28" coveredmethods="125" elements="1196" testfailures="0" testduration="0.07100000000000001" conditionals="30" coveredstatements="909" testpasses="120"/>
            </class>
            <line complexity="1" visibility="public" signature="testReadArray() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadEmptyArray() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadObject() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadEmptyObject() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipArray() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipArrayAfterPeek() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipTopLevelObject() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipObject() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipObjectAfterPeek() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipInteger() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipDouble() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHelloWorld() : void" num="160" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidJsonInput() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNulls() : void" num="192" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testEmptyString() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharacterUnescaping() : void" num="214" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnescapingInvalidCharacters() : void" num="260" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnescapingTruncatedCharacters() : void" num="271" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnescapingTruncatedSequence() : void" num="282" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegersWithFractionalPartSpecified() : void" num="293" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubles() : void" num="301" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="302" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictNonFiniteDoubles() : void" num="326" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictQuotedNonFiniteDoubles() : void" num="337" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNonFiniteDoubles() : void" num="348" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientQuotedNonFiniteDoubles() : void" num="359" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictNonFiniteDoublesWithSkipValue() : void" num="370" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLongs() : void" num="381" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="382" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="disabled_testNumberWithOctalPrefix() : void" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleans() : void" num="443" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeekingUnquotedStringsPrefixedWithBooleans() : void" num="452" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMalformedNumbers() : void" num="466" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="478" count="1" type="stmt"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line num="499" count="1" type="stmt"/>
            <line num="500" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNotANumber(String) : void" num="503" count="24" type="method"/>
            <line num="504" count="24" type="stmt"/>
            <line num="505" count="24" type="stmt"/>
            <line num="506" count="24" type="stmt"/>
            <line num="507" count="24" type="stmt"/>
            <line num="508" count="24" type="stmt"/>
            <line num="509" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeekingUnquotedStringsPrefixedWithIntegers() : void" num="512" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="1" type="stmt"/>
            <line num="517" count="1" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="522" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeekLongMinValue() : void" num="525" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="526" count="1" type="stmt"/>
            <line num="527" count="1" type="stmt"/>
            <line num="528" count="1" type="stmt"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeekLongMaxValue() : void" num="533" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="1" type="stmt"/>
            <line num="538" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLongLargerThanMaxLongThatWrapsAround() : void" num="541" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="545" count="1" type="stmt"/>
            <line num="546" count="1" type="stmt"/>
            <line num="547" count="1" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLongLargerThanMinLongThatWrapsAround() : void" num="553" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="554" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="1" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeZero() : void" num="569" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="570" count="1" type="stmt"/>
            <line num="571" count="1" type="stmt"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
            <line num="574" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testPeekLargerThanLongMaxValue() : void" num="581" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testPeekLargerThanLongMinValue() : void" num="597" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabled_testHighPrecisionLong() : void" num="614" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeekMuchLargerThanLongMinValue() : void" num="622" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="623" count="1" type="stmt"/>
            <line num="624" count="1" type="stmt"/>
            <line num="625" count="1" type="stmt"/>
            <line num="626" count="1" type="stmt"/>
            <line num="627" count="1" type="stmt"/>
            <line num="628" count="1" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="632" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQuotedNumberWithEscape() : void" num="635" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="636" count="1" type="stmt"/>
            <line num="637" count="1" type="stmt"/>
            <line num="638" count="1" type="stmt"/>
            <line num="639" count="1" type="stmt"/>
            <line num="640" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedCaseLiterals() : void" num="643" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="644" count="1" type="stmt"/>
            <line num="645" count="1" type="stmt"/>
            <line num="646" count="1" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="648" count="1" type="stmt"/>
            <line num="649" count="1" type="stmt"/>
            <line num="650" count="1" type="stmt"/>
            <line num="651" count="1" type="stmt"/>
            <line num="652" count="1" type="stmt"/>
            <line num="653" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMissingValue() : void" num="656" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="657" count="1" type="stmt"/>
            <line num="658" count="1" type="stmt"/>
            <line num="659" count="1" type="stmt"/>
            <line num="660" count="1" type="stmt"/>
            <line num="661" count="1" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPrematureEndOfInput() : void" num="667" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="668" count="1" type="stmt"/>
            <line num="669" count="1" type="stmt"/>
            <line num="670" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="672" count="1" type="stmt"/>
            <line num="673" count="1" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testPrematurelyClosed() : void" num="679" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="680" count="1" type="stmt"/>
            <line num="681" count="1" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="683" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="689" count="1" type="stmt"/>
            <line num="690" count="1" type="stmt"/>
            <line num="691" count="1" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="697" count="1" type="stmt"/>
            <line num="698" count="1" type="stmt"/>
            <line num="699" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="701" count="1" type="stmt"/>
            <line num="702" count="1" type="stmt"/>
            <line num="703" count="1" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="testNextFailuresDoNotAdvance() : void" num="709" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="710" count="1" type="stmt"/>
            <line num="711" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="717" count="1" type="stmt"/>
            <line num="718" count="1" type="stmt"/>
            <line num="719" count="1" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="723" count="1" type="stmt"/>
            <line num="724" count="1" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line num="728" count="1" type="stmt"/>
            <line num="729" count="1" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="733" count="1" type="stmt"/>
            <line num="734" count="1" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="738" count="1" type="stmt"/>
            <line num="739" count="1" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="743" count="1" type="stmt"/>
            <line num="744" count="1" type="stmt"/>
            <line num="745" count="1" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line num="749" count="1" type="stmt"/>
            <line num="750" count="1" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="754" count="1" type="stmt"/>
            <line num="755" count="1" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line num="759" count="1" type="stmt"/>
            <line num="760" count="1" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line num="764" count="1" type="stmt"/>
            <line num="765" count="1" type="stmt"/>
            <line num="766" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testIntegerMismatchFailuresDoNotAdvance() : void" num="769" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="770" count="1" type="stmt"/>
            <line num="771" count="1" type="stmt"/>
            <line num="772" count="1" type="stmt"/>
            <line num="773" count="1" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line num="777" count="1" type="stmt"/>
            <line num="778" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStringNullIsNotNull() : void" num="781" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="782" count="1" type="stmt"/>
            <line num="783" count="1" type="stmt"/>
            <line num="784" count="1" type="stmt"/>
            <line num="785" count="1" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullLiteralIsNotAString() : void" num="791" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="792" count="1" type="stmt"/>
            <line num="793" count="1" type="stmt"/>
            <line num="794" count="1" type="stmt"/>
            <line num="795" count="1" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStrictNameValueSeparator() : void" num="801" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="802" count="1" type="stmt"/>
            <line num="803" count="1" type="stmt"/>
            <line num="804" count="1" type="stmt"/>
            <line num="805" count="1" type="stmt"/>
            <line num="806" count="1" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="811" count="1" type="stmt"/>
            <line num="812" count="1" type="stmt"/>
            <line num="813" count="1" type="stmt"/>
            <line num="814" count="1" type="stmt"/>
            <line num="815" count="1" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNameValueSeparator() : void" num="821" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="822" count="1" type="stmt"/>
            <line num="823" count="1" type="stmt"/>
            <line num="824" count="1" type="stmt"/>
            <line num="825" count="1" type="stmt"/>
            <line num="826" count="1" type="stmt"/>
            <line num="828" count="1" type="stmt"/>
            <line num="829" count="1" type="stmt"/>
            <line num="830" count="1" type="stmt"/>
            <line num="831" count="1" type="stmt"/>
            <line num="832" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStrictNameValueSeparatorWithSkipValue() : void" num="835" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="836" count="1" type="stmt"/>
            <line num="837" count="1" type="stmt"/>
            <line num="838" count="1" type="stmt"/>
            <line num="839" count="1" type="stmt"/>
            <line num="840" count="1" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line num="845" count="1" type="stmt"/>
            <line num="846" count="1" type="stmt"/>
            <line num="847" count="1" type="stmt"/>
            <line num="848" count="1" type="stmt"/>
            <line num="849" count="1" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCommentsInStringValue() : void" num="855" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="856" count="1" type="stmt"/>
            <line num="857" count="1" type="stmt"/>
            <line num="858" count="1" type="stmt"/>
            <line num="859" count="1" type="stmt"/>
            <line num="861" count="1" type="stmt"/>
            <line num="862" count="1" type="stmt"/>
            <line num="863" count="1" type="stmt"/>
            <line num="864" count="1" type="stmt"/>
            <line num="865" count="1" type="stmt"/>
            <line num="867" count="1" type="stmt"/>
            <line num="868" count="1" type="stmt"/>
            <line num="869" count="1" type="stmt"/>
            <line num="870" count="1" type="stmt"/>
            <line num="871" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStrictComments() : void" num="874" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="875" count="1" type="stmt"/>
            <line num="876" count="1" type="stmt"/>
            <line num="877" count="1" type="stmt"/>
            <line num="878" count="1" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line num="883" count="1" type="stmt"/>
            <line num="884" count="1" type="stmt"/>
            <line num="885" count="1" type="stmt"/>
            <line num="886" count="1" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="891" count="1" type="stmt"/>
            <line num="892" count="1" type="stmt"/>
            <line num="893" count="1" type="stmt"/>
            <line num="894" count="1" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientComments() : void" num="900" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="901" count="1" type="stmt"/>
            <line num="902" count="1" type="stmt"/>
            <line num="903" count="1" type="stmt"/>
            <line num="904" count="1" type="stmt"/>
            <line num="906" count="1" type="stmt"/>
            <line num="907" count="1" type="stmt"/>
            <line num="908" count="1" type="stmt"/>
            <line num="909" count="1" type="stmt"/>
            <line num="911" count="1" type="stmt"/>
            <line num="912" count="1" type="stmt"/>
            <line num="913" count="1" type="stmt"/>
            <line num="914" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStrictCommentsWithSkipValue() : void" num="917" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="918" count="1" type="stmt"/>
            <line num="919" count="1" type="stmt"/>
            <line num="920" count="1" type="stmt"/>
            <line num="921" count="1" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line num="926" count="1" type="stmt"/>
            <line num="927" count="1" type="stmt"/>
            <line num="928" count="1" type="stmt"/>
            <line num="929" count="1" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="934" count="1" type="stmt"/>
            <line num="935" count="1" type="stmt"/>
            <line num="936" count="1" type="stmt"/>
            <line num="937" count="1" type="stmt"/>
            <line num="938" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictUnquotedNames() : void" num="943" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="944" count="1" type="stmt"/>
            <line num="945" count="1" type="stmt"/>
            <line num="946" count="1" type="stmt"/>
            <line num="947" count="1" type="stmt"/>
            <line num="948" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientUnquotedNames() : void" num="953" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="954" count="1" type="stmt"/>
            <line num="955" count="1" type="stmt"/>
            <line num="956" count="1" type="stmt"/>
            <line num="957" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictUnquotedNamesWithSkipValue() : void" num="960" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="961" count="1" type="stmt"/>
            <line num="962" count="1" type="stmt"/>
            <line num="963" count="1" type="stmt"/>
            <line num="964" count="1" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSingleQuotedNames() : void" num="970" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="971" count="1" type="stmt"/>
            <line num="972" count="1" type="stmt"/>
            <line num="973" count="1" type="stmt"/>
            <line num="974" count="1" type="stmt"/>
            <line num="975" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSingleQuotedNames() : void" num="980" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="981" count="1" type="stmt"/>
            <line num="982" count="1" type="stmt"/>
            <line num="983" count="1" type="stmt"/>
            <line num="984" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSingleQuotedNamesWithSkipValue() : void" num="987" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="988" count="1" type="stmt"/>
            <line num="989" count="1" type="stmt"/>
            <line num="990" count="1" type="stmt"/>
            <line num="991" count="1" type="stmt"/>
            <line num="992" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictUnquotedStrings() : void" num="997" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="998" count="1" type="stmt"/>
            <line num="999" count="1" type="stmt"/>
            <line num="1000" count="1" type="stmt"/>
            <line num="1001" count="1" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictUnquotedStringsWithSkipValue() : void" num="1007" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1008" count="1" type="stmt"/>
            <line num="1009" count="1" type="stmt"/>
            <line num="1010" count="1" type="stmt"/>
            <line num="1011" count="1" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientUnquotedStrings() : void" num="1017" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1018" count="1" type="stmt"/>
            <line num="1019" count="1" type="stmt"/>
            <line num="1020" count="1" type="stmt"/>
            <line num="1021" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSingleQuotedStrings() : void" num="1024" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1025" count="1" type="stmt"/>
            <line num="1026" count="1" type="stmt"/>
            <line num="1027" count="1" type="stmt"/>
            <line num="1028" count="1" type="stmt"/>
            <line num="1029" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSingleQuotedStrings() : void" num="1034" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1035" count="1" type="stmt"/>
            <line num="1036" count="1" type="stmt"/>
            <line num="1037" count="1" type="stmt"/>
            <line num="1038" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSingleQuotedStringsWithSkipValue() : void" num="1041" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1042" count="1" type="stmt"/>
            <line num="1043" count="1" type="stmt"/>
            <line num="1044" count="1" type="stmt"/>
            <line num="1045" count="1" type="stmt"/>
            <line num="1046" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSemicolonDelimitedArray() : void" num="1051" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1052" count="1" type="stmt"/>
            <line num="1053" count="1" type="stmt"/>
            <line num="1054" count="1" type="stmt"/>
            <line num="1055" count="1" type="stmt"/>
            <line num="1056" count="0" type="stmt"/>
            <line num="1057" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSemicolonDelimitedArray() : void" num="1062" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1063" count="1" type="stmt"/>
            <line num="1064" count="1" type="stmt"/>
            <line num="1065" count="1" type="stmt"/>
            <line num="1066" count="1" type="stmt"/>
            <line num="1067" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSemicolonDelimitedArrayWithSkipValue() : void" num="1070" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1071" count="1" type="stmt"/>
            <line num="1072" count="1" type="stmt"/>
            <line num="1073" count="1" type="stmt"/>
            <line num="1074" count="1" type="stmt"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1076" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSemicolonDelimitedNameValuePair() : void" num="1081" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1082" count="1" type="stmt"/>
            <line num="1083" count="1" type="stmt"/>
            <line num="1084" count="1" type="stmt"/>
            <line num="1085" count="1" type="stmt"/>
            <line num="1086" count="1" type="stmt"/>
            <line num="1087" count="0" type="stmt"/>
            <line num="1088" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSemicolonDelimitedNameValuePair() : void" num="1093" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1094" count="1" type="stmt"/>
            <line num="1095" count="1" type="stmt"/>
            <line num="1096" count="1" type="stmt"/>
            <line num="1097" count="1" type="stmt"/>
            <line num="1098" count="1" type="stmt"/>
            <line num="1099" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSemicolonDelimitedNameValuePairWithSkipValue() : void" num="1102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1103" count="1" type="stmt"/>
            <line num="1104" count="1" type="stmt"/>
            <line num="1105" count="1" type="stmt"/>
            <line num="1106" count="1" type="stmt"/>
            <line num="1107" count="1" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line num="1109" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testStrictUnnecessaryArraySeparators() : void" num="1114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1115" count="1" type="stmt"/>
            <line num="1116" count="1" type="stmt"/>
            <line num="1117" count="1" type="stmt"/>
            <line num="1118" count="1" type="stmt"/>
            <line num="1119" count="1" type="stmt"/>
            <line num="1120" count="0" type="stmt"/>
            <line num="1124" count="1" type="stmt"/>
            <line num="1125" count="1" type="stmt"/>
            <line num="1126" count="1" type="stmt"/>
            <line num="1127" count="1" type="stmt"/>
            <line num="1128" count="0" type="stmt"/>
            <line num="1132" count="1" type="stmt"/>
            <line num="1133" count="1" type="stmt"/>
            <line num="1134" count="1" type="stmt"/>
            <line num="1135" count="1" type="stmt"/>
            <line num="1136" count="1" type="stmt"/>
            <line num="1137" count="0" type="stmt"/>
            <line num="1141" count="1" type="stmt"/>
            <line num="1142" count="1" type="stmt"/>
            <line num="1143" count="1" type="stmt"/>
            <line num="1144" count="1" type="stmt"/>
            <line num="1145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientUnnecessaryArraySeparators() : void" num="1150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1151" count="1" type="stmt"/>
            <line num="1152" count="1" type="stmt"/>
            <line num="1153" count="1" type="stmt"/>
            <line num="1154" count="1" type="stmt"/>
            <line num="1155" count="1" type="stmt"/>
            <line num="1156" count="1" type="stmt"/>
            <line num="1157" count="1" type="stmt"/>
            <line num="1159" count="1" type="stmt"/>
            <line num="1160" count="1" type="stmt"/>
            <line num="1161" count="1" type="stmt"/>
            <line num="1162" count="1" type="stmt"/>
            <line num="1163" count="1" type="stmt"/>
            <line num="1164" count="1" type="stmt"/>
            <line num="1166" count="1" type="stmt"/>
            <line num="1167" count="1" type="stmt"/>
            <line num="1168" count="1" type="stmt"/>
            <line num="1169" count="1" type="stmt"/>
            <line num="1170" count="1" type="stmt"/>
            <line num="1171" count="1" type="stmt"/>
            <line num="1173" count="1" type="stmt"/>
            <line num="1174" count="1" type="stmt"/>
            <line num="1175" count="1" type="stmt"/>
            <line num="1176" count="1" type="stmt"/>
            <line num="1177" count="1" type="stmt"/>
            <line num="1178" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testStrictUnnecessaryArraySeparatorsWithSkipValue() : void" num="1181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1182" count="1" type="stmt"/>
            <line num="1183" count="1" type="stmt"/>
            <line num="1184" count="1" type="stmt"/>
            <line num="1185" count="1" type="stmt"/>
            <line num="1186" count="1" type="stmt"/>
            <line num="1187" count="0" type="stmt"/>
            <line num="1191" count="1" type="stmt"/>
            <line num="1192" count="1" type="stmt"/>
            <line num="1193" count="1" type="stmt"/>
            <line num="1194" count="1" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line num="1199" count="1" type="stmt"/>
            <line num="1200" count="1" type="stmt"/>
            <line num="1201" count="1" type="stmt"/>
            <line num="1202" count="1" type="stmt"/>
            <line num="1203" count="1" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1208" count="1" type="stmt"/>
            <line num="1209" count="1" type="stmt"/>
            <line num="1210" count="1" type="stmt"/>
            <line num="1211" count="1" type="stmt"/>
            <line num="1212" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictMultipleTopLevelValues() : void" num="1217" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1218" count="1" type="stmt"/>
            <line num="1219" count="1" type="stmt"/>
            <line num="1220" count="1" type="stmt"/>
            <line num="1221" count="1" type="stmt"/>
            <line num="1222" count="1" type="stmt"/>
            <line num="1223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientMultipleTopLevelValues() : void" num="1228" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1229" count="1" type="stmt"/>
            <line num="1230" count="1" type="stmt"/>
            <line num="1231" count="1" type="stmt"/>
            <line num="1232" count="1" type="stmt"/>
            <line num="1233" count="1" type="stmt"/>
            <line num="1234" count="1" type="stmt"/>
            <line num="1235" count="1" type="stmt"/>
            <line num="1236" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictMultipleTopLevelValuesWithSkipValue() : void" num="1239" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1240" count="1" type="stmt"/>
            <line num="1241" count="1" type="stmt"/>
            <line num="1242" count="1" type="stmt"/>
            <line num="1243" count="1" type="stmt"/>
            <line num="1244" count="1" type="stmt"/>
            <line num="1245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelValueTypes() : void" num="1250" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1251" count="1" type="stmt"/>
            <line num="1252" count="1" type="stmt"/>
            <line num="1253" count="1" type="stmt"/>
            <line num="1255" count="1" type="stmt"/>
            <line num="1256" count="1" type="stmt"/>
            <line num="1257" count="1" type="stmt"/>
            <line num="1259" count="1" type="stmt"/>
            <line num="1260" count="1" type="stmt"/>
            <line num="1261" count="1" type="stmt"/>
            <line num="1262" count="1" type="stmt"/>
            <line num="1264" count="1" type="stmt"/>
            <line num="1265" count="1" type="stmt"/>
            <line num="1266" count="1" type="stmt"/>
            <line num="1268" count="1" type="stmt"/>
            <line num="1269" count="1" type="stmt"/>
            <line num="1270" count="1" type="stmt"/>
            <line num="1272" count="1" type="stmt"/>
            <line num="1273" count="1" type="stmt"/>
            <line num="1274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelValueTypeWithSkipValue() : void" num="1277" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1278" count="1" type="stmt"/>
            <line num="1279" count="1" type="stmt"/>
            <line num="1280" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictNonExecutePrefix() : void" num="1283" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1284" count="1" type="stmt"/>
            <line num="1285" count="1" type="stmt"/>
            <line num="1286" count="1" type="stmt"/>
            <line num="1287" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictNonExecutePrefixWithSkipValue() : void" num="1292" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1293" count="1" type="stmt"/>
            <line num="1294" count="1" type="stmt"/>
            <line num="1295" count="1" type="stmt"/>
            <line num="1296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNonExecutePrefix() : void" num="1301" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1302" count="1" type="stmt"/>
            <line num="1303" count="1" type="stmt"/>
            <line num="1304" count="1" type="stmt"/>
            <line num="1305" count="1" type="stmt"/>
            <line num="1306" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNonExecutePrefixWithLeadingWhitespace() : void" num="1309" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1310" count="1" type="stmt"/>
            <line num="1311" count="1" type="stmt"/>
            <line num="1312" count="1" type="stmt"/>
            <line num="1313" count="1" type="stmt"/>
            <line num="1314" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLenientPartialNonExecutePrefix() : void" num="1317" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1318" count="1" type="stmt"/>
            <line num="1319" count="1" type="stmt"/>
            <line num="1320" count="1" type="stmt"/>
            <line num="1321" count="1" type="stmt"/>
            <line num="1322" count="1" type="stmt"/>
            <line num="1323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBomIgnoredAsFirstCharacterOfDocument() : void" num="1328" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1329" count="1" type="stmt"/>
            <line num="1330" count="1" type="stmt"/>
            <line num="1331" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBomForbiddenAsOtherCharacterInDocument() : void" num="1334" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1335" count="1" type="stmt"/>
            <line num="1336" count="1" type="stmt"/>
            <line num="1337" count="1" type="stmt"/>
            <line num="1338" count="1" type="stmt"/>
            <line num="1339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPosition() : void" num="1344" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1345" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionGreaterThanBufferSize() : void" num="1349" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="1350" count="1" type="stmt"/>
            <line num="1351" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionOverSlashSlashEndOfLineComment() : void" num="1355" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1356" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionOverHashEndOfLineComment() : void" num="1360" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1361" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionOverCStyleComment() : void" num="1365" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1366" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionOverQuotedString() : void" num="1370" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1371" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionOverUnquotedString() : void" num="1375" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1376" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithEscapedNewlineCharacter() : void" num="1379" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1380" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailWithPositionIsOffsetByBom() : void" num="1383" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1384" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="testFailWithPosition(String,String) : void" num="1388" count="9" type="method"/>
            <line num="1390" count="9" type="stmt"/>
            <line num="1391" count="9" type="stmt"/>
            <line num="1392" count="9" type="stmt"/>
            <line num="1393" count="9" type="stmt"/>
            <line num="1394" count="9" type="stmt"/>
            <line num="1395" count="9" type="stmt"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1398" count="9" type="stmt"/>
            <line num="1402" count="9" type="stmt"/>
            <line num="1403" count="9" type="stmt"/>
            <line num="1404" count="9" type="stmt"/>
            <line num="1405" count="9" type="stmt"/>
            <line num="1406" count="9" type="stmt"/>
            <line num="1407" count="9" type="stmt"/>
            <line num="1408" count="0" type="stmt"/>
            <line num="1410" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFailWithPositionDeepPath() : void" num="1414" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1415" count="1" type="stmt"/>
            <line num="1416" count="1" type="stmt"/>
            <line num="1417" count="1" type="stmt"/>
            <line num="1418" count="1" type="stmt"/>
            <line num="1419" count="1" type="stmt"/>
            <line num="1420" count="1" type="stmt"/>
            <line num="1421" count="1" type="stmt"/>
            <line num="1422" count="1" type="stmt"/>
            <line num="1423" count="1" type="stmt"/>
            <line num="1424" count="1" type="stmt"/>
            <line num="1425" count="0" type="stmt"/>
            <line num="1427" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictVeryLongNumber() : void" num="1431" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="1432" count="1" type="stmt"/>
            <line num="1433" count="1" type="stmt"/>
            <line num="1434" count="1" type="stmt"/>
            <line num="1435" count="1" type="stmt"/>
            <line num="1436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientVeryLongNumber() : void" num="1441" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="1442" count="1" type="stmt"/>
            <line num="1443" count="1" type="stmt"/>
            <line num="1444" count="1" type="stmt"/>
            <line num="1445" count="1" type="stmt"/>
            <line num="1446" count="1" type="stmt"/>
            <line num="1447" count="1" type="stmt"/>
            <line num="1448" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVeryLongUnquotedLiteral() : void" num="1451" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="1452" count="1" type="stmt"/>
            <line num="1453" count="1" type="stmt"/>
            <line num="1454" count="1" type="stmt"/>
            <line num="1455" count="1" type="stmt"/>
            <line num="1456" count="1" type="stmt"/>
            <line num="1457" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDeeplyNestedArrays() : void" num="1460" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1462" count="1" type="stmt"/>
            <line num="1464" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="1464" type="cond"/>
            <line num="1465" count="40" type="stmt"/>
            <line num="1467" count="1" type="stmt"/>
            <line num="1469" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="1469" type="cond"/>
            <line num="1470" count="40" type="stmt"/>
            <line num="1472" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testDeeplyNestedObjects() : void" num="1475" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1477" count="1" type="stmt"/>
            <line num="1478" count="1" type="stmt"/>
            <line num="1479" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="1479" type="cond"/>
            <line num="1480" count="40" type="stmt"/>
            <line num="1483" count="1" type="stmt"/>
            <line num="1484" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="1484" type="cond"/>
            <line num="1485" count="40" type="stmt"/>
            <line num="1486" count="40" type="stmt"/>
            <line num="1488" count="1" type="stmt"/>
            <line num="1490" count="1" type="stmt"/>
            <line num="1491" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="1491" type="cond"/>
            <line num="1492" count="40" type="stmt"/>
            <line num="1494" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStringEndingInSlash() : void" num="1498" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1499" count="1" type="stmt"/>
            <line num="1500" count="1" type="stmt"/>
            <line num="1501" count="1" type="stmt"/>
            <line num="1502" count="1" type="stmt"/>
            <line num="1503" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDocumentWithCommentEndingInSlash() : void" num="1508" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1509" count="1" type="stmt"/>
            <line num="1510" count="1" type="stmt"/>
            <line num="1511" count="1" type="stmt"/>
            <line num="1512" count="1" type="stmt"/>
            <line num="1513" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStringWithLeadingSlash() : void" num="1518" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1519" count="1" type="stmt"/>
            <line num="1520" count="1" type="stmt"/>
            <line num="1521" count="1" type="stmt"/>
            <line num="1522" count="1" type="stmt"/>
            <line num="1523" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnterminatedObject() : void" num="1528" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1529" count="1" type="stmt"/>
            <line num="1530" count="1" type="stmt"/>
            <line num="1531" count="1" type="stmt"/>
            <line num="1532" count="1" type="stmt"/>
            <line num="1533" count="1" type="stmt"/>
            <line num="1534" count="1" type="stmt"/>
            <line num="1535" count="1" type="stmt"/>
            <line num="1536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVeryLongQuotedString() : void" num="1541" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="1542" count="1" type="stmt"/>
            <line num="1543" count="1" type="stmt"/>
            <line num="1544" count="1" type="stmt"/>
            <line num="1545" count="1" type="stmt"/>
            <line num="1546" count="1" type="stmt"/>
            <line num="1547" count="1" type="stmt"/>
            <line num="1548" count="1" type="stmt"/>
            <line num="1549" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVeryLongUnquotedString() : void" num="1552" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="1553" count="1" type="stmt"/>
            <line num="1554" count="1" type="stmt"/>
            <line num="1555" count="1" type="stmt"/>
            <line num="1556" count="1" type="stmt"/>
            <line num="1557" count="1" type="stmt"/>
            <line num="1558" count="1" type="stmt"/>
            <line num="1559" count="1" type="stmt"/>
            <line num="1560" count="1" type="stmt"/>
            <line num="1561" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testVeryLongUnterminatedString() : void" num="1564" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="1565" count="1" type="stmt"/>
            <line num="1566" count="1" type="stmt"/>
            <line num="1567" count="1" type="stmt"/>
            <line num="1568" count="1" type="stmt"/>
            <line num="1569" count="1" type="stmt"/>
            <line num="1570" count="1" type="stmt"/>
            <line num="1571" count="1" type="stmt"/>
            <line num="1572" count="1" type="stmt"/>
            <line num="1573" count="1" type="stmt"/>
            <line num="1574" count="1" type="stmt"/>
            <line num="1575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipVeryLongUnquotedString() : void" num="1580" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1581" count="1" type="stmt"/>
            <line num="1582" count="1" type="stmt"/>
            <line num="1583" count="1" type="stmt"/>
            <line num="1584" count="1" type="stmt"/>
            <line num="1585" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipTopLevelUnquotedString() : void" num="1588" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="1589" count="1" type="stmt"/>
            <line num="1590" count="1" type="stmt"/>
            <line num="1591" count="1" type="stmt"/>
            <line num="1592" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipVeryLongQuotedString() : void" num="1595" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="1596" count="1" type="stmt"/>
            <line num="1597" count="1" type="stmt"/>
            <line num="1598" count="1" type="stmt"/>
            <line num="1599" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipTopLevelQuotedString() : void" num="1602" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="1603" count="1" type="stmt"/>
            <line num="1604" count="1" type="stmt"/>
            <line num="1605" count="1" type="stmt"/>
            <line num="1606" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringAsNumberWithTruncatedExponent() : void" num="1609" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1610" count="1" type="stmt"/>
            <line num="1611" count="1" type="stmt"/>
            <line num="1612" count="1" type="stmt"/>
            <line num="1613" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringAsNumberWithDigitAndNonDigitExponent() : void" num="1616" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1617" count="1" type="stmt"/>
            <line num="1618" count="1" type="stmt"/>
            <line num="1619" count="1" type="stmt"/>
            <line num="1620" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringAsNumberWithNonDigitExponent() : void" num="1623" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1624" count="1" type="stmt"/>
            <line num="1625" count="1" type="stmt"/>
            <line num="1626" count="1" type="stmt"/>
            <line num="1627" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyStringName() : void" num="1630" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1631" count="1" type="stmt"/>
            <line num="1632" count="1" type="stmt"/>
            <line num="1633" count="1" type="stmt"/>
            <line num="1634" count="1" type="stmt"/>
            <line num="1635" count="1" type="stmt"/>
            <line num="1636" count="1" type="stmt"/>
            <line num="1637" count="1" type="stmt"/>
            <line num="1638" count="1" type="stmt"/>
            <line num="1639" count="1" type="stmt"/>
            <line num="1640" count="1" type="stmt"/>
            <line num="1641" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictExtraCommasInMaps() : void" num="1644" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1645" count="1" type="stmt"/>
            <line num="1646" count="1" type="stmt"/>
            <line num="1647" count="1" type="stmt"/>
            <line num="1648" count="1" type="stmt"/>
            <line num="1649" count="1" type="stmt"/>
            <line num="1650" count="1" type="stmt"/>
            <line num="1651" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLenientExtraCommasInMaps() : void" num="1656" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1657" count="1" type="stmt"/>
            <line num="1658" count="1" type="stmt"/>
            <line num="1659" count="1" type="stmt"/>
            <line num="1660" count="1" type="stmt"/>
            <line num="1661" count="1" type="stmt"/>
            <line num="1662" count="1" type="stmt"/>
            <line num="1663" count="1" type="stmt"/>
            <line num="1664" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="repeat(char,int) : String" num="1669" count="8" type="method"/>
            <line num="1670" count="8" type="stmt"/>
            <line num="1671" count="8" type="stmt"/>
            <line num="1672" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMalformedDocuments() : void" num="1675" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="1676" count="1" type="stmt"/>
            <line num="1677" count="1" type="stmt"/>
            <line num="1678" count="1" type="stmt"/>
            <line num="1679" count="1" type="stmt"/>
            <line num="1680" count="1" type="stmt"/>
            <line num="1681" count="1" type="stmt"/>
            <line num="1682" count="1" type="stmt"/>
            <line num="1683" count="1" type="stmt"/>
            <line num="1684" count="1" type="stmt"/>
            <line num="1685" count="1" type="stmt"/>
            <line num="1686" count="1" type="stmt"/>
            <line num="1687" count="1" type="stmt"/>
            <line num="1688" count="1" type="stmt"/>
            <line num="1689" count="1" type="stmt"/>
            <line num="1690" count="1" type="stmt"/>
            <line num="1691" count="1" type="stmt"/>
            <line num="1692" count="1" type="stmt"/>
            <line num="1693" count="1" type="stmt"/>
            <line num="1694" count="1" type="stmt"/>
            <line num="1695" count="1" type="stmt"/>
            <line num="1696" count="1" type="stmt"/>
            <line num="1697" count="1" type="stmt"/>
            <line num="1698" count="1" type="stmt"/>
            <line num="1699" count="1" type="stmt"/>
            <line num="1700" count="1" type="stmt"/>
            <line num="1701" count="1" type="stmt"/>
            <line num="1702" count="1" type="stmt"/>
            <line num="1703" count="1" type="stmt"/>
            <line num="1704" count="1" type="stmt"/>
            <line num="1705" count="1" type="stmt"/>
            <line num="1706" count="1" type="stmt"/>
            <line num="1707" count="1" type="stmt"/>
            <line num="1708" count="1" type="stmt"/>
            <line num="1709" count="1" type="stmt"/>
            <line num="1710" count="1" type="stmt"/>
            <line num="1711" count="1" type="stmt"/>
            <line num="1712" count="1" type="stmt"/>
            <line num="1713" count="1" type="stmt"/>
            <line num="1714" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnterminatedStringFailure() : void" num="1721" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1722" count="1" type="stmt"/>
            <line num="1723" count="1" type="stmt"/>
            <line num="1724" count="1" type="stmt"/>
            <line num="1725" count="1" type="stmt"/>
            <line num="1726" count="1" type="stmt"/>
            <line num="1727" count="1" type="stmt"/>
            <line num="1728" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="assertDocument(String,Object) : void" num="1733" count="39" type="method"/>
            <line num="1734" count="39" type="stmt"/>
            <line num="1735" count="39" type="stmt"/>
            <line num="1736" count="39" type="stmt"/>
            <line num="1737" count="123" type="stmt"/>
            <line falsecount="92" truecount="31" num="1737" type="cond"/>
            <line num="1738" count="31" type="stmt"/>
            <line num="1739" count="92" type="stmt"/>
            <line falsecount="84" truecount="8" num="1739" type="cond"/>
            <line num="1740" count="8" type="stmt"/>
            <line num="1741" count="84" type="stmt"/>
            <line falsecount="84" truecount="0" num="1741" type="cond"/>
            <line num="1742" count="0" type="stmt"/>
            <line num="1743" count="84" type="stmt"/>
            <line falsecount="83" truecount="1" num="1743" type="cond"/>
            <line num="1744" count="1" type="stmt"/>
            <line num="1745" count="83" type="stmt"/>
            <line falsecount="57" truecount="26" num="1745" type="cond"/>
            <line num="1746" count="26" type="stmt"/>
            <line num="1747" count="57" type="stmt"/>
            <line falsecount="55" truecount="2" num="1747" type="cond"/>
            <line num="1748" count="2" type="stmt"/>
            <line num="1749" count="55" type="stmt"/>
            <line falsecount="43" truecount="12" num="1749" type="cond"/>
            <line num="1750" count="12" type="stmt"/>
            <line num="1751" count="43" type="stmt"/>
            <line falsecount="39" truecount="4" num="1751" type="cond"/>
            <line num="1752" count="4" type="stmt"/>
            <line num="1753" count="39" type="stmt"/>
            <line falsecount="37" truecount="2" num="1753" type="cond"/>
            <line num="1754" count="2" type="stmt"/>
            <line num="1755" count="37" type="stmt"/>
            <line falsecount="0" truecount="37" num="1755" type="cond"/>
            <line num="1756" count="37" type="stmt"/>
            <line num="1757" count="37" type="stmt"/>
            <line num="1758" count="0" type="stmt"/>
            <line num="1762" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reader(String) : Reader" num="1770" count="217" type="method"/>
            <line num="1771" count="217" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java" name="JsonWriterTest.java">
            <metrics coveredelements="409" coveredconditionals="8" complexity="65" loc="648" coveredmethods="39" methods="39" elements="431" classes="1" ncloc="581" statements="384" conditionals="8" coveredstatements="362"/>
            <class name="JsonWriterTest">
               <metrics coveredelements="409" complexity="65" methods="39" testruns="39" statements="384" coveredconditionals="8" coveredmethods="39" elements="431" testfailures="0" testduration="0.006" conditionals="8" coveredstatements="362" testpasses="39"/>
            </class>
            <line complexity="1" visibility="public" signature="testTopLevelValueTypes() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidTopLevelTypes() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTwoNames() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNameWithoutValue() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testValueWithoutName() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultipleTopLevelValues() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadNestingObject() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadNestingArray() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullName() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullStringValue() : void" num="153" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonValue() : void" num="163" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testNonFiniteDoubles() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testNonFiniteBoxedDoubles() : void" num="196" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonFiniteDoublesWhenLenient() : void" num="217" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonFiniteBoxedDoublesWhenLenient() : void" num="229" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubles() : void" num="241" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongs() : void" num="267" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumbers() : void" num="285" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleans() : void" num="301" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoxedBooleans() : void" num="311" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="322" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStrings() : void" num="331" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnicodeLineBreaksEscaped() : void" num="374" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArray() : void" num="383" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyObject() : void" num="391" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectsInArrays() : void" num="399" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArraysInObjects() : void" num="416" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDeepNestingArrays() : void" num="435" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="438" type="cond"/>
            <line num="439" count="20" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="441" type="cond"/>
            <line num="442" count="20" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDeepNestingObjects() : void" num="447" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="451" type="cond"/>
            <line num="452" count="20" type="stmt"/>
            <line num="453" count="20" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="455" type="cond"/>
            <line num="456" count="20" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedName() : void" num="464" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="465" count="1" type="stmt"/>
            <line num="466" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="469" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintObject() : void" num="475" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="476" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line num="478" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="481" count="1" type="stmt"/>
            <line num="482" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="495" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArray() : void" num="512" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="517" count="1" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line num="519" count="1" type="stmt"/>
            <line num="520" count="1" type="stmt"/>
            <line num="521" count="1" type="stmt"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line num="526" count="1" type="stmt"/>
            <line num="527" count="1" type="stmt"/>
            <line num="528" count="1" type="stmt"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="546" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientWriterPermitsMultipleTopLevelValues() : void" num="549" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictWriterDoesNotPermitMultipleTopLevelValues() : void" num="561" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="562" count="1" type="stmt"/>
            <line num="563" count="1" type="stmt"/>
            <line num="564" count="1" type="stmt"/>
            <line num="565" count="1" type="stmt"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testClosedWriterThrowsOnStructure() : void" num="573" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="574" count="1" type="stmt"/>
            <line num="575" count="1" type="stmt"/>
            <line num="576" count="1" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="580" count="1" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="584" count="1" type="stmt"/>
            <line num="585" count="1" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="1" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="594" count="1" type="stmt"/>
            <line num="595" count="1" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testClosedWriterThrowsOnName() : void" num="601" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="1" type="stmt"/>
            <line num="604" count="1" type="stmt"/>
            <line num="605" count="1" type="stmt"/>
            <line num="606" count="1" type="stmt"/>
            <line num="607" count="1" type="stmt"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testClosedWriterThrowsOnValue() : void" num="614" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="615" count="1" type="stmt"/>
            <line num="616" count="1" type="stmt"/>
            <line num="617" count="1" type="stmt"/>
            <line num="618" count="1" type="stmt"/>
            <line num="619" count="1" type="stmt"/>
            <line num="620" count="1" type="stmt"/>
            <line num="621" count="1" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testClosedWriterThrowsOnFlush() : void" num="627" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="628" count="1" type="stmt"/>
            <line num="629" count="1" type="stmt"/>
            <line num="630" count="1" type="stmt"/>
            <line num="631" count="1" type="stmt"/>
            <line num="632" count="1" type="stmt"/>
            <line num="633" count="1" type="stmt"/>
            <line num="634" count="1" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriterCloseIsIdempotent() : void" num="640" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line num="643" count="1" type="stmt"/>
            <line num="644" count="1" type="stmt"/>
            <line num="645" count="1" type="stmt"/>
            <line num="646" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.reflect">
         <metrics coveredelements="22" complexity="6" loc="77" methods="4" classes="2" statements="19" coveredconditionals="2" coveredmethods="3" elements="25" ncloc="49" files="1" conditionals="2" coveredstatements="17"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/reflect/UnsafeReflectionAccessorTest.java" name="UnsafeReflectionAccessorTest.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="6" loc="77" coveredmethods="3" methods="4" elements="25" classes="2" ncloc="49" statements="19" conditionals="2" coveredstatements="17"/>
            <class name="UnsafeReflectionAccessorTest">
               <metrics coveredelements="22" complexity="5" methods="3" testruns="2" statements="18" coveredconditionals="2" coveredmethods="3" elements="23" testfailures="0" testduration="0.027" conditionals="2" coveredstatements="17" testpasses="2"/>
            </class>
            <class name="UnsafeReflectionAccessorTest.ClassWithPrivateFinalFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testMakeAccessibleWithUnsafe() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMakeAccessibleWithRestrictiveSecurityManager() : void" num="46" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkPermission(Permission) : void" num="51" count="7" type="method"/>
            <line num="53" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="53" type="cond"/>
            <line num="54" count="2" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithPrivateFinalFields(String)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson">
         <metrics coveredelements="936" complexity="233" loc="2552" methods="169" classes="43" statements="836" coveredconditionals="22" coveredmethods="157" elements="1047" ncloc="1656" files="26" conditionals="42" coveredstatements="757"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/CommentsTest.java" name="CommentsTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="CommentsTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testParseComments() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java" name="DefaultInetAddressTypeAdapterTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="18" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="DefaultInetAddressTypeAdapterTest">
               <metrics coveredelements="9" complexity="2" methods="2" testruns="1" statements="7" coveredconditionals="0" coveredmethods="2" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInetAddressSerializationAndDeserialization() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java" name="DefaultMapJsonSerializerTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="64" coveredmethods="3" methods="3" elements="23" classes="1" ncloc="35" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="DefaultMapJsonSerializerTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="3" statements="20" coveredconditionals="0" coveredmethods="3" elements="23" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="20" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testEmptyMapNoTypeSerialization() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyMapSerialization() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonEmptyMapSerialization() : void" num="52" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java" name="ExposeAnnotationExclusionStrategyTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="7" loc="89" coveredmethods="7" methods="7" elements="25" classes="2" ncloc="52" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="ExposeAnnotationExclusionStrategyTest">
               <metrics coveredelements="25" complexity="7" methods="7" testruns="6" statements="18" coveredconditionals="0" coveredmethods="7" elements="25" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="18" testpasses="6"/>
            </class>
            <class name="ExposeAnnotationExclusionStrategyTest.MockObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testNeverSkipClasses() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipNonAnnotatedFields() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipExplicitlySkippedFields() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipExposedAnnotatedFields() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipExplicitlyExposedAnnotatedFields() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDifferentSerializeAndDeserializeField() : void" num="63" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createFieldAttributes(String) : Field" num="69" count="5" type="method"/>
            <line num="70" count="5" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/FieldAttributesTest.java" name="FieldAttributesTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="8" loc="83" coveredmethods="7" methods="7" elements="25" classes="2" ncloc="48" statements="18" conditionals="0" coveredstatements="17"/>
            <class name="FieldAttributesTest">
               <metrics coveredelements="24" complexity="8" methods="7" testruns="6" statements="18" coveredconditionals="0" coveredmethods="7" elements="25" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="17" testpasses="6"/>
            </class>
            <class name="FieldAttributesTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullField() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeclaringClass() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModifiers() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsSynthetic() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testName() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeclaredTypeAndClass() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/GenericArrayTypeTest.java" name="GenericArrayTypeTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="3" loc="57" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="27" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="GenericArrayTypeTest">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="2" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOurTypeFunctionality() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/GsonBuilderTest.java" name="GsonBuilderTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="87" coveredmethods="4" methods="6" elements="18" classes="3" ncloc="56" statements="12" conditionals="0" coveredstatements="10"/>
            <class name="GsonBuilderTest">
               <metrics coveredelements="14" complexity="6" methods="6" testruns="4" statements="12" coveredconditionals="0" coveredmethods="4" elements="18" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="10" testpasses="4"/>
            </class>
            <class name="GsonBuilderTest.HasModifiers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GsonBuilderTest.HasTransients">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Object) : void" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Object" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreatingMoreThanOnce() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeFieldsWithModifiers() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisterTypeAdapterForCoreType() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransientFieldExclusion() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/GsonTest.java" name="GsonTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="80" coveredmethods="2" methods="5" elements="15" classes="2" ncloc="48" statements="10" conditionals="0" coveredstatements="8"/>
            <class name="GsonTest">
               <metrics coveredelements="10" complexity="3" methods="3" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.036" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <class name="GsonTest.TestTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverridesDefaultExcluder() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClonedTypeAdapterFactoryListsAreIndependent() : void" num="60" testsuccess="true" count="1" testduration="0.036" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Object) : void" num="75" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Object" num="78" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java" name="GsonTypeAdapterTest.java">
            <metrics coveredelements="58" coveredconditionals="4" complexity="17" loc="148" coveredmethods="11" methods="12" elements="63" classes="5" ncloc="108" statements="47" conditionals="4" coveredstatements="43"/>
            <class name="GsonTypeAdapterTest">
               <metrics coveredelements="49" complexity="13" methods="8" testruns="5" statements="42" coveredconditionals="4" coveredmethods="7" elements="54" testfailures="0" testduration="0.007" conditionals="4" coveredstatements="38" testpasses="5"/>
            </class>
            <class name="GsonTypeAdapterTest.ExceptionTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="GsonTypeAdapterTest.AtomicIntegerTypeAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="GsonTypeAdapterTest.Abstract">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GsonTypeAdapterTest.Concrete">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line num="37" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDefaultTypeAdapterThrowsParseException() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTypeAdapterThrowsException() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeAdapterProperlyConvertsTypes() : void" num="62" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeAdapterDoesNotAffectNonAdaptedTypes() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(AtomicLong,Type,JsonSerializationContext) : JsonElement" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : AtomicLong" num="87" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(AtomicInteger,Type,JsonSerializationContext) : JsonElement" num="96" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : AtomicInteger" num="100" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializerForAbstractClass() : void" num="116" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertSerialized(String,Class&lt;?&gt;,boolean,boolean,Object) : void" num="130" count="8" type="method"/>
            <line num="132" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Abstract" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="8" type="stmt"/>
            <line num="139" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="139" type="cond"/>
            <line num="140" count="4" type="stmt"/>
            <line num="142" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="142" type="cond"/>
            <line num="143" count="4" type="stmt"/>
            <line num="145" count="8" type="stmt"/>
            <line num="146" count="8" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java" name="InnerClassExclusionStrategyTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="58" coveredmethods="4" methods="4" elements="12" classes="3" ncloc="29" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="InnerClassExclusionStrategyTest">
               <metrics coveredelements="12" complexity="4" methods="4" testruns="4" statements="8" coveredconditionals="0" coveredmethods="4" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="4"/>
            </class>
            <class name="InnerClassExclusionStrategyTest.InnerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InnerClassExclusionStrategyTest.StaticNestedClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testExcludeInnerClassObject() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeInnerClassField() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeStaticNestedClassObject() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeStaticNestedClassField() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JavaSerializationTest.java" name="JavaSerializationTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="4" loc="75" coveredmethods="4" methods="4" elements="26" classes="1" ncloc="47" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="JavaSerializationTest">
               <metrics coveredelements="26" complexity="4" methods="4" testruns="3" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.035" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testMapIsSerializable() : void" num="40" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListIsSerializable() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberIsSerializable() : void" num="56" testsuccess="true" count="1" testduration="0.026" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="serializedCopy(T) : T" num="65" count="3" type="method"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line num="72" count="3" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java" name="JsonArrayTest.java">
            <metrics coveredelements="82" coveredconditionals="0" complexity="16" loc="165" coveredmethods="6" methods="6" elements="92" classes="1" ncloc="129" statements="86" conditionals="0" coveredstatements="76"/>
            <class name="JsonArrayTest">
               <metrics coveredelements="82" complexity="16" methods="6" testruns="6" statements="86" coveredconditionals="0" coveredmethods="6" elements="92" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="76" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testEqualsOnEmptyArray() : void" num="27" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsNonEmptyArray() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemove() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSet() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepCopy() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="9" visibility="public" signature="testFailedGetArrayValues() : void" num="102" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JsonNullTest.java" name="JsonNullTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="40" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="JsonNullTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testEqualsAndHashcode() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepCopy() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JsonObjectTest.java" name="JsonObjectTest.java">
            <metrics coveredelements="107" coveredconditionals="0" complexity="15" loc="201" coveredmethods="14" methods="14" elements="108" classes="1" ncloc="128" statements="94" conditionals="0" coveredstatements="93"/>
            <class name="JsonObjectTest">
               <metrics coveredelements="107" complexity="15" methods="14" testruns="14" statements="94" coveredconditionals="0" coveredmethods="14" elements="108" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="93" testpasses="14"/>
            </class>
            <line complexity="1" visibility="public" signature="testAddingAndRemovingObjectProperties() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingNullPropertyValue() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAddingNullOrEmptyPropertyName() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingBooleanProperties() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingStringProperties() : void" num="81" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingCharacterProperties() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPropertyWithQuotes() : void" num="113" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWritePropertyWithEmptyStringName() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadPropertyWithEmptyStringName() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsOnEmptyObject() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsNonEmptyObject() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="161" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepCopy() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeySet() : void" num="190" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JsonParserTest.java" name="JsonParserTest.java">
            <metrics coveredelements="58" coveredconditionals="0" complexity="12" loc="119" coveredmethods="10" methods="10" elements="60" classes="1" ncloc="82" statements="50" conditionals="0" coveredstatements="48"/>
            <class name="JsonParserTest">
               <metrics coveredelements="58" complexity="12" methods="10" testruns="10" statements="50" coveredconditionals="0" coveredmethods="10" elements="60" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="48" testpasses="10"/>
            </class>
            <line complexity="2" visibility="public" signature="testParseInvalidJson() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseUnquotedStringArrayFails() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseString() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseEmptyString() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseEmptyWhitespaceInput() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseUnquotedSingleWordStringFails() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testParseUnquotedMultiWordStringFails() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseMixedArray() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseReader() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteTwoObjects() : void" num="101" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java" name="JsonPrimitiveTest.java">
            <metrics coveredelements="157" coveredconditionals="0" complexity="30" loc="274" coveredmethods="25" methods="25" elements="162" classes="1" ncloc="208" statements="137" conditionals="0" coveredstatements="132"/>
            <class name="JsonPrimitiveTest">
               <metrics coveredelements="157" complexity="30" methods="25" testruns="25" statements="137" coveredconditionals="0" coveredmethods="25" elements="162" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="132" testpasses="25"/>
            </class>
            <line complexity="5" visibility="public" signature="testNulls() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoolean() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParsingStringAsBoolean() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParsingStringAsNumber() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsAndChar() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testExponential() : void" num="116" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsShort() : void" num="129" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsInteger() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsLong() : void" num="143" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsBigInteger() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortEqualsInteger() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortEqualsLong() : void" num="164" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortEqualsBigInteger() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerEqualsLong() : void" num="178" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerEqualsBigInteger() : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongEqualsBigInteger() : void" num="192" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatEqualsDouble() : void" num="199" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatEqualsBigDecimal() : void" num="206" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleEqualsBigDecimal() : void" num="213" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidJsonOnToString() : void" num="220" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="228" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsAcrossTypes() : void" num="248" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsIntegerAndBigInteger() : void" num="256" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsDoesNotEquateStringAndNonStringTypes() : void" num="264" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepCopy() : void" num="270" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/JsonStreamParserTest.java" name="JsonStreamParserTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="6" loc="74" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="44" statements="25" conditionals="0" coveredstatements="24"/>
            <class name="JsonStreamParserTest">
               <metrics coveredelements="29" complexity="6" methods="5" testruns="4" statements="25" coveredconditionals="0" coveredmethods="5" elements="30" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="24" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="30" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseTwoStrings() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoSideEffectForHasNext() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCallingNextBeyondAvailableInput() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java" name="LongSerializationPolicyTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="4" loc="64" coveredmethods="4" methods="4" elements="22" classes="1" ncloc="34" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="LongSerializationPolicyTest">
               <metrics coveredelements="22" complexity="4" methods="4" testruns="4" statements="18" coveredconditionals="0" coveredmethods="4" elements="22" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="18" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testDefaultLongSerialization() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultLongSerializationIntegration() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringLongSerialization() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringLongSerializationIntegration() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/MixedStreamTest.java" name="MixedStreamTest.java">
            <metrics coveredelements="108" coveredconditionals="0" complexity="24" loc="239" coveredmethods="15" methods="16" elements="118" classes="2" ncloc="190" statements="102" conditionals="0" coveredstatements="93"/>
            <class name="MixedStreamTest">
               <metrics coveredelements="102" complexity="20" methods="12" testruns="12" statements="98" coveredconditionals="0" coveredmethods="12" elements="110" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="90" testpasses="12"/>
            </class>
            <class name="MixedStreamTest.Car">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testWriteMixedStreamed() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadMixedStreamed() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReaderDoesNotMutateState() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteDoesNotMutateState() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReadInvalidState() : void" num="109" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReadClosed() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteInvalidState() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteClosed() : void" num="143" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteNulls() : void" num="156" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testReadNulls() : void" num="169" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteHtmlSafe() : void" num="183" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteLenient() : void" num="199" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Car(String,int)" num="221" count="3" type="method"/>
            <line num="222" count="3" type="stmt"/>
            <line num="223" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="Car()" num="227" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="229" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="233" count="3" type="method"/>
            <line num="234" count="3" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/MockExclusionStrategy.java" name="MockExclusionStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="43" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="MockExclusionStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MockExclusionStrategy(boolean,boolean)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java" name="ObjectTypeAdapterTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="63" coveredmethods="5" methods="5" elements="19" classes="2" ncloc="39" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ObjectTypeAdapterTest">
               <metrics coveredelements="19" complexity="5" methods="5" testruns="5" statements="14" coveredconditionals="0" coveredmethods="5" elements="19" testfailures="0" testduration="0.023" conditionals="0" coveredstatements="14" testpasses="5"/>
            </class>
            <class name="ObjectTypeAdapterTest.RuntimeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testDeserialize() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerialize() : void" num="37" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeNullValue() : void" num="42" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializeNullValue() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeObject() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/OverrideCoreTypeAdaptersTest.java" name="OverrideCoreTypeAdaptersTest.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="8" loc="77" coveredmethods="7" methods="7" elements="29" classes="1" ncloc="52" statements="20" conditionals="2" coveredstatements="20"/>
            <class name="OverrideCoreTypeAdaptersTest">
               <metrics coveredelements="29" complexity="8" methods="7" testruns="3" statements="20" coveredconditionals="2" coveredmethods="7" elements="29" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="20" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="write(JsonWriter,Boolean) : void" num="30" count="3" type="method"/>
            <line num="31" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="31" type="cond"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Boolean" num="33" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,String) : void" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : String" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverrideWrapperBooleanAdapter() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverridePrimitiveBooleanAdapter() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverrideStringAdapter() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java" name="ParameterizedTypeFixtures.java">
            <metrics coveredelements="73" coveredconditionals="16" complexity="30" loc="177" coveredmethods="10" methods="11" elements="102" classes="4" ncloc="129" statements="63" conditionals="28" coveredstatements="47"/>
            <class name="ParameterizedTypeFixtures">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypeFixtures.MyParameterizedType">
               <metrics coveredelements="32" coveredconditionals="8" complexity="20" coveredmethods="5" methods="6" elements="56" statements="32" conditionals="18" coveredstatements="19"/>
            </class>
            <class name="ParameterizedTypeFixtures.MyParameterizedTypeInstanceCreator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ParameterizedTypeFixtures.MyParameterizedTypeAdapter">
               <metrics coveredelements="37" coveredconditionals="8" complexity="8" coveredmethods="3" methods="3" elements="42" statements="29" conditionals="10" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="MyParameterizedType(T)" num="40" count="12" type="method"/>
            <line num="41" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : T" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="8" visibility="private" signature="getExpectedJson(Object) : String" num="52" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="54" type="cond"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="83" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyParameterizedTypeInstanceCreator(T)" num="118" count="4" type="method"/>
            <line num="119" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : MyParameterizedType&lt;T&gt;" num="121" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getExpectedJson(MyParameterizedType&lt;T&gt;) : String" num="128" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="134" type="cond"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="138" type="cond"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(MyParameterizedType&lt;T&gt;,Type,JsonSerializationContext) : JsonElement" num="145" count="2" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : MyParameterizedType&lt;T&gt;" num="153" count="2" type="method"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="162" type="cond"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="164" type="cond"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/ParameterizedTypeTest.java" name="ParameterizedTypeTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="57" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="28" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ParameterizedTypeTest">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="2" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOurTypeFunctionality() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotEquals() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java" name="PrimitiveTypeAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="73" coveredmethods="0" methods="1" elements="31" classes="1" ncloc="45" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="PrimitiveTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="1" elements="31" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="12" visibility="public" signature="adaptType(Object,Class&lt;T&gt;) : T" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java" name="VersionExclusionStrategyTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="12" classes="2" ncloc="27" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="VersionExclusionStrategyTest">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="3" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="9" testpasses="3"/>
            </class>
            <class name="VersionExclusionStrategyTest.MockObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testClassAndFieldAreAtSameVersion() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassAndFieldAreBehindInVersion() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassAndFieldAreAheadInVersion() : void" num="43" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.bind.util">
         <metrics coveredelements="46" complexity="9" loc="94" methods="9" classes="1" statements="41" coveredconditionals="0" coveredmethods="8" elements="50" ncloc="78" files="1" conditionals="0" coveredstatements="38"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/bind/util/ISO8601UtilsTest.java" name="ISO8601UtilsTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="9" loc="94" coveredmethods="8" methods="9" elements="50" classes="1" ncloc="78" statements="41" conditionals="0" coveredstatements="38"/>
            <class name="ISO8601UtilsTest">
               <metrics coveredelements="46" complexity="9" methods="9" testruns="7" statements="41" coveredconditionals="0" coveredmethods="8" elements="50" testfailures="1" testduration="0.032" conditionals="0" coveredstatements="38" testpasses="6"/>
            </class>
            <line complexity="1" visibility="private" signature="utcTimeZone() : TimeZone" num="18" count="3" type="method"/>
            <line num="19" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="createUtcCalendar() : GregorianCalendar" num="22" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateFormatString() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateFormatWithMilliseconds() : void" num="42" testsuccess="true" count="1" testduration="0.028" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateFormatWithTimezone() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateParseWithDefaultTimezone() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateParseWithTimezone() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateParseSpecialTimezone() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateParseInvalidTime() : void" num="88" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.internal.sql">
         <metrics coveredelements="77" complexity="14" loc="140" methods="13" classes="2" statements="64" coveredconditionals="1" coveredmethods="13" elements="79" ncloc="118" files="2" conditionals="2" coveredstatements="63"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/sql/SqlTypesGsonTest.java" name="SqlTypesGsonTest.java">
            <metrics coveredelements="70" coveredconditionals="1" complexity="13" loc="124" coveredmethods="12" methods="12" elements="72" classes="1" ncloc="106" statements="58" conditionals="2" coveredstatements="57"/>
            <class name="SqlTypesGsonTest">
               <metrics coveredelements="70" complexity="13" methods="12" testruns="9" statements="58" coveredconditionals="1" coveredmethods="12" elements="72" testfailures="0" testduration="0.007" conditionals="2" coveredstatements="57" testpasses="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="21" count="9" type="method"/>
            <line num="23" count="9" type="stmt"/>
            <line num="24" count="9" type="stmt"/>
            <line num="25" count="9" type="stmt"/>
            <line num="26" count="9" type="stmt"/>
            <line num="27" count="9" type="stmt"/>
            <line num="28" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="31" count="9" type="method"/>
            <line num="33" count="9" type="stmt"/>
            <line num="34" count="9" type="stmt"/>
            <line num="35" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSerializationAndDeserialization() : void" num="38" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testNullSerializationAndDeserialization(Class&lt;?&gt;) : void" num="44" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultSqlDateSerialization() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultSqlDateDeserialization() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqlDateSerialization() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultSqlTimeSerialization() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultSqlTimeDeserialization() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDefaultSqlTimestampSerialization() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="93" type="cond"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultSqlTimestampDeserialization() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTimestampSerialization() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/internal/sql/SqlTypesSupportTest.java" name="SqlTypesSupportTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="12" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="SqlTypesSupportTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSupported() : void" num="6" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="7" count="1" type="stmt"/>
            <line num="9" count="1" type="stmt"/>
            <line num="10" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.reflect">
         <metrics coveredelements="41" complexity="6" loc="105" methods="6" classes="1" statements="35" coveredconditionals="0" coveredmethods="6" elements="41" ncloc="64" files="1" conditionals="0" coveredstatements="35"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java" name="TypeTokenTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="6" loc="105" coveredmethods="6" methods="6" elements="41" classes="1" ncloc="64" statements="35" conditionals="0" coveredstatements="35"/>
            <class name="TypeTokenTest">
               <metrics coveredelements="41" complexity="6" methods="6" testruns="6" statements="35" coveredconditionals="0" coveredmethods="6" elements="41" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="35" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testIsAssignableFromRawTypes() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsAssignableFromWithTypeParameters() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsAssignableFromWithBasicWildcards() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsAssignableFromWithNestedWildcards() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayFactory() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedFactory() : void" num="93" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.regression">
         <metrics coveredelements="16" complexity="6" loc="61" methods="4" classes="3" statements="10" coveredconditionals="2" coveredmethods="4" elements="16" ncloc="36" files="1" conditionals="2" coveredstatements="10"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java" name="JsonAdapterNullSafeTest.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="6" loc="61" coveredmethods="4" methods="4" elements="16" classes="3" ncloc="36" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="JsonAdapterNullSafeTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <class name="JsonAdapterNullSafeTest.Device">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterNullSafeTest.Device.JsonAdapterFactory">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testNullSafeBugSerialize() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSafeBugDeserialize() : void" num="34" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Device(String)" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.functional">
         <metrics coveredelements="4836" complexity="1160" loc="10997" methods="975" classes="251" statements="3966" coveredconditionals="130" coveredmethods="942" elements="5137" ncloc="8283" files="56" conditionals="196" coveredstatements="3764"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ArrayTest.java" name="ArrayTest.java">
            <metrics coveredelements="145" coveredconditionals="6" complexity="31" loc="268" coveredmethods="27" methods="27" elements="146" classes="1" ncloc="198" statements="113" conditionals="6" coveredstatements="112"/>
            <class name="ArrayTest">
               <metrics coveredelements="145" complexity="31" methods="27" testruns="26" statements="113" coveredconditionals="6" coveredmethods="27" elements="146" testfailures="0" testduration="0.008" conditionals="6" coveredstatements="112" testpasses="26"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="42" count="26" type="method"/>
            <line num="44" count="26" type="stmt"/>
            <line num="45" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelArrayOfIntsSerialization() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelArrayOfIntsDeserialization() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidArrayDeserialization() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArraySerialization() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArrayDeserialization() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullsInArraySerialization() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullsInArrayDeserialization() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="95" type="cond"/>
            <line num="96" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleNullInArraySerialization() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleNullInArrayDeserialization() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullsInArrayWithSerializeNullPropertySetSerialization() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfStringsSerialization() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfStringsDeserialization() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStringArraySerialization() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStringArrayDeserialization() : void" num="138" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testArrayOfCollectionSerialization() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="152" type="cond"/>
            <line num="153" count="3" type="stmt"/>
            <line num="154" count="3" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="160" type="cond"/>
            <line num="161" count="2" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfCollectionDeserialization() : void" num="170" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfPrimitivesAsObjectsSerialization() : void" num="180" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfPrimitivesAsObjectsDeserialization() : void" num="188" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectArrayWithNonPrimitivesSerialization() : void" num="198" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfNullSerialization() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfNullDeserialization() : void" num="217" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultidimenstionalArraysSerialization() : void" num="225" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiDimenstionalObjectArraysSerialization() : void" num="235" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixingTypesInObjectArraySerialization() : void" num="243" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultidimenstionalArraysDeserialization() : void" num="251" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayElementsAreArrays() : void" num="260" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java" name="CircularReferenceTest.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="11" loc="126" coveredmethods="8" methods="8" elements="47" classes="4" ncloc="89" statements="39" conditionals="0" coveredstatements="35"/>
            <class name="CircularReferenceTest">
               <metrics coveredelements="43" complexity="11" methods="8" testruns="6" statements="39" coveredconditionals="0" coveredmethods="8" elements="47" testfailures="0" testduration="0.048" conditionals="0" coveredstatements="35" testpasses="6"/>
            </class>
            <class name="CircularReferenceTest.ContainsReferenceToSelfType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CircularReferenceTest.ClassWithSelfReference">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CircularReferenceTest.ClassWithSelfReferenceArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="41" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCircularSerialization() : void" num="47" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelfReferenceIgnoredInSerialization() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSelfReferenceArrayFieldSerialization() : void" num="67" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSelfReferenceCustomHandlerSerialization() : void" num="78" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithSelfReference,Type,JsonSerializationContext) : JsonElement" num="82" count="973" type="method"/>
            <line num="84" count="973" type="stmt"/>
            <line num="85" count="973" type="stmt"/>
            <line num="86" count="973" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirectedAcyclicGraphSerialization() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirectedAcyclicGraphDeserialization() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java" name="CollectionTest.java">
            <metrics coveredelements="252" coveredconditionals="11" complexity="42" loc="415" coveredmethods="35" methods="35" elements="257" classes="6" ncloc="341" statements="208" conditionals="14" coveredstatements="206"/>
            <class name="CollectionTest">
               <metrics coveredelements="246" complexity="39" methods="32" testruns="29" statements="205" coveredconditionals="11" coveredmethods="32" elements="251" testfailures="0" testduration="0.02600000000000001" conditionals="14" coveredstatements="203" testpasses="29"/>
            </class>
            <class name="CollectionTest.HasArrayListField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CollectionTest.ObjectWithWildcardCollection">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CollectionTest.Entry">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CollectionTest.BigClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CollectionTest.SmallClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="55" count="29" type="method"/>
            <line num="57" count="29" type="stmt"/>
            <line num="58" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelCollectionOfIntegersSerialization() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelCollectionOfIntegersDeserialization() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testTopLevelListOfIntegerCollectionsDeserialization() : void" num="76" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="81" type="cond"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="83" type="cond"/>
            <line num="84" count="9" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="88" type="cond"/>
            <line num="89" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinkedListSerialization() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinkedListDeserialization() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQueueSerialization() : void" num="111" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQueueDeserialization() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPriorityQueue() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVector() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStack() : void" num="152" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullsInListSerialization() : void" num="163" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullsInListDeserialization() : void" num="174" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="182" type="cond"/>
            <line num="183" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfObjectSerialization() : void" num="187" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfObjectWithNullSerialization() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfStringsSerialization() : void" num="208" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfBagOfPrimitivesSerialization() : void" num="215" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfStringsDeserialization() : void" num="230" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawCollectionOfIntegersSerialization() : void" num="239" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawCollectionSerialization() : void" num="244" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawCollectionDeserializationNotAlllowed() : void" num="252" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawCollectionOfBagOfPrimitivesNotAllowed() : void" num="265" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardPrimitiveCollectionSerilaization() : void" num="280" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardPrimitiveCollectionDeserilaization() : void" num="290" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardCollectionField() : void" num="299" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldIsArrayList() : void" num="318" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUserCollectionTypeAdapter() : void" num="328" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(List&lt;String&gt;,Type,JsonSerializationContext) : JsonElement" num="331" count="1" type="method"/>
            <line num="333" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="toIntArray(Collection) : int[]" num="346" count="4" type="method"/>
            <line num="348" count="4" type="stmt"/>
            <line num="349" count="4" type="stmt"/>
            <line num="350" count="4" type="stmt"/>
            <line falsecount="4" truecount="19" num="350" type="cond"/>
            <line num="351" count="19" type="stmt"/>
            <line num="352" count="19" type="stmt"/>
            <line falsecount="0" truecount="19" num="352" type="cond"/>
            <line num="353" count="19" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="358" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ObjectWithWildcardCollection(Collection&lt;? extends BagOfPrimitives&gt;)" num="364" count="1" type="method"/>
            <line num="365" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCollection() : Collection&lt;? extends BagOfPrimitives&gt;" num="368" count="1" type="method"/>
            <line num="369" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Entry(int)" num="375" count="2" type="method"/>
            <line num="376" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetSerialization() : void" num="379" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetDeserialization() : void" num="387" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIssue1107() : void" num="401" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="402" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java" name="ConcurrencyTest.java">
            <metrics coveredelements="61" coveredconditionals="12" complexity="17" loc="140" coveredmethods="9" methods="9" elements="63" classes="2" ncloc="91" statements="42" conditionals="12" coveredstatements="40"/>
            <class name="ConcurrencyTest">
               <metrics coveredelements="55" complexity="15" methods="7" testruns="4" statements="38" coveredconditionals="12" coveredmethods="7" elements="57" testfailures="0" testduration="0.023" conditionals="12" coveredstatements="36" testpasses="4"/>
            </class>
            <class name="ConcurrencyTest.MyObject">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSingleThreadSerialization() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="48" type="cond"/>
            <line num="49" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSingleThreadDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="58" type="cond"/>
            <line num="59" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiThreadSerialization() : void" num="67" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="72" type="cond"/>
            <line num="73" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="74" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line num="78" count="10" type="stmt"/>
            <line falsecount="8" truecount="88" num="78" type="cond"/>
            <line num="79" count="96" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="10" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiThreadDeserialization() : void" num="98" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="103" type="cond"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="105" count="10" type="method"/>
            <line num="106" count="10" type="stmt"/>
            <line num="107" count="10" type="stmt"/>
            <line num="108" count="10" type="stmt"/>
            <line falsecount="9" truecount="98" num="108" type="cond"/>
            <line num="109" count="99" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="10" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="MyObject()" num="130" count="118" type="method"/>
            <line num="131" count="116" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyObject(String,String,int)" num="134" count="111" type="method"/>
            <line num="135" count="116" type="stmt"/>
            <line num="136" count="119" type="stmt"/>
            <line num="137" count="119" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java" name="CustomDeserializerTest.java">
            <metrics coveredelements="69" coveredconditionals="0" complexity="22" loc="212" coveredmethods="21" methods="22" elements="71" classes="9" ncloc="159" statements="49" conditionals="0" coveredstatements="48"/>
            <class name="CustomDeserializerTest">
               <metrics coveredelements="51" complexity="13" methods="13" testruns="7" statements="38" coveredconditionals="0" coveredmethods="13" elements="51" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="38" testpasses="7"/>
            </class>
            <class name="CustomDeserializerTest.DataHolder">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CustomDeserializerTest.DataHolderWrapper">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomDeserializerTest.DataHolderDeserializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomDeserializerTest.MyBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.SubTypes">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CustomDeserializerTest.SubType1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.SubType2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.ClassWithBaseArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="45" count="7" type="method"/>
            <line num="47" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultConstructorNotCalledOnObject() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultConstructorNotCalledOnField() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="DataHolder()" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolder(String)" num="76" count="5" type="method"/>
            <line num="77" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : String" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="DataHolderWrapper()" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolderWrapper(DataHolder)" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWrappedData() : DataHolder" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : DataHolder" num="104" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonTypeFieldBasedDeserialization() : void" num="113" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : MyBase" num="116" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="SubTypes(Type)" num="134" count="2" type="method"/>
            <line num="135" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSubclass() : Type" num="137" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForTopLevelObject() : void" num="151" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="154" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNull() : void" num="165" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="168" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForArrayElements() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="182" count="2" type="method"/>
            <line num="185" count="2" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForArrayElementsForArrayField() : void" num="194" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="197" count="2" type="method"/>
            <line num="200" count="2" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/CustomSerializerTest.java" name="CustomSerializerTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="6" loc="102" coveredmethods="6" methods="6" elements="32" classes="1" ncloc="71" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="CustomSerializerTest">
               <metrics coveredelements="32" complexity="6" methods="6" testruns="5" statements="26" coveredconditionals="0" coveredmethods="6" elements="32" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="26" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testBaseClassSerializerInvokedForBaseClassFields() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializerReturnsNull() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="94" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java" name="CustomTypeAdaptersTest.java">
            <metrics coveredelements="189" coveredconditionals="7" complexity="54" loc="465" coveredmethods="39" methods="48" elements="226" classes="12" ncloc="386" statements="168" conditionals="10" coveredstatements="143"/>
            <class name="CustomTypeAdaptersTest">
               <metrics coveredelements="163" complexity="36" methods="33" testruns="19" statements="142" coveredconditionals="5" coveredmethods="30" elements="181" testfailures="0" testduration="0.020000000000000007" conditionals="6" coveredstatements="128" testpasses="19"/>
            </class>
            <class name="CustomTypeAdaptersTest.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.Derived">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.FooTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.StringHolder">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="CustomTypeAdaptersTest.StringHolderTypeAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolder">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolderWrapper">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolderSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolderDeserializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.DateTypeAdapter">
               <metrics coveredelements="6" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="51" count="19" type="method"/>
            <line num="53" count="19" type="stmt"/>
            <line num="54" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializers() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithCustomTypeConverter,Type,JsonSerializationContext) : JsonElement" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializers() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : ClassWithCustomTypeConverter" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disable_testCustomSerializersOfSelf() : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="disable_testCustomDeserializersOfSelf() : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomNestedSerializers() : void" num="109" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(BagOfPrimitives,Type,JsonSerializationContext) : JsonElement" num="112" count="1" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomNestedDeserializers() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : BagOfPrimitives" num="124" count="1" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterDoesNotAppliesToSubClasses() : void" num="135" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="137" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass() : void" num="152" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="154" count="2" type="method"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createGsonObjectWithFooTypeAdapter() : Gson" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Foo()" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Foo(int,long)" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Foo" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Foo,Type,JsonSerializationContext) : JsonElement" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializerInvokedForPrimitives() : void" num="211" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="serialize(Boolean,Type,JsonSerializationContext) : JsonElement" num="214" count="1" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="215" type="cond"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerInvokedForPrimitives() : void" num="223" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Object" num="227" count="1" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomByteArraySerializer() : void" num="237" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(byte[],Type,JsonSerializationContext) : JsonElement" num="239" count="1" type="method"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="10" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCustomByteArrayDeserializerAndInstanceCreator() : void" num="253" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : byte[]" num="256" count="1" type="method"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="260" type="cond"/>
            <line num="261" count="10" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="270" type="cond"/>
            <line num="271" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="StringHolder(String)" num="279" count="2" type="method"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="StringHolder(String,String)" num="284" count="4" type="method"/>
            <line num="285" count="4" type="stmt"/>
            <line num="286" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : StringHolder" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : StringHolder" num="298" count="2" type="method"/>
            <line num="300" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(StringHolder,Type,JsonSerializationContext) : JsonElement" num="303" count="4" type="method"/>
            <line num="305" count="4" type="stmt"/>
            <line num="306" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForCollectionElementSerializationWithType() : void" num="311" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForCollectionElementSerialization() : void" num="324" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="325" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForCollectionElementDeserialization() : void" num="336" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="337" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForMapElementSerializationWithType() : void" num="349" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="350" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForMapElementSerialization() : void" num="362" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="363" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForMapElementDeserialization() : void" num="374" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="375" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnsureCustomSerializerNotInvokedForNullValues() : void" num="386" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="387" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnsureCustomDeserializerNotInvokedForNullValues() : void" num="395" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="396" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisterHierarchyAdapterForDate() : void" num="405" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="406" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolder(String)" num="418" count="1" type="method"/>
            <line num="419" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolderWrapper(DataHolder)" num="426" count="1" type="method"/>
            <line num="427" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(DataHolder,Type,JsonSerializationContext) : JsonElement" num="432" count="1" type="method"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : DataHolder" num="441" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="446" type="cond"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Date" num="454" count="2" type="method"/>
            <line num="456" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="456" type="cond"/>
            <line complexity="1" visibility="public" signature="serialize(Date,Type,JsonSerializationContext) : JsonElement" num="460" count="2" type="method"/>
            <line num="462" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java" name="DefaultTypeAdaptersTest.java">
            <metrics coveredelements="392" coveredconditionals="2" complexity="81" loc="678" coveredmethods="72" methods="73" elements="404" classes="6" ncloc="570" statements="327" conditionals="4" coveredstatements="318"/>
            <class name="DefaultTypeAdaptersTest">
               <metrics coveredelements="371" complexity="70" methods="64" testruns="57" statements="313" coveredconditionals="2" coveredmethods="63" elements="381" testfailures="0" testduration="0.03800000000000002" conditionals="4" coveredstatements="306" testpasses="57"/>
            </class>
            <class name="DefaultTypeAdaptersTest.ClassWithUrlField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DefaultTypeAdaptersTest.ClassWithBigDecimal">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdaptersTest.ClassWithBigInteger">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdaptersTest.MyClassTypeAdapter">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="DefaultTypeAdaptersTest.NumberAsStringAdapter">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="73" count="57" type="method"/>
            <line num="75" count="57" type="stmt"/>
            <line num="76" count="57" type="stmt"/>
            <line num="77" count="57" type="stmt"/>
            <line num="78" count="57" type="stmt"/>
            <line num="79" count="57" type="stmt"/>
            <line num="80" count="57" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="83" count="57" type="method"/>
            <line num="85" count="57" type="stmt"/>
            <line num="86" count="57" type="stmt"/>
            <line num="87" count="57" type="stmt"/>
            <line complexity="2" visibility="public" signature="testClassSerialization() : void" num="90" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testClassDeserialization() : void" num="101" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlSerialization() : void" num="112" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlDeserialization() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlNullSerialization() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlNullDeserialization() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUriSerialization() : void" num="143" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUriDeserialization() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSerialization() : void" num="156" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testNullSerializationAndDeserialization(Class&lt;?&gt;) : void" num="188" count="29" type="method"/>
            <line num="189" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSerializationAndDeserialization(Gson,Class&lt;?&gt;) : void" num="192" count="32" type="method"/>
            <line num="193" count="32" type="stmt"/>
            <line num="194" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUuidSerialization() : void" num="197" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUuidDeserialization() : void" num="203" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleSerializationWithLanguage() : void" num="210" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleDeserializationWithLanguage() : void" num="215" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleSerializationWithLanguageCountry() : void" num="221" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleDeserializationWithLanguageCountry() : void" num="226" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleSerializationWithLanguageCountryVariant() : void" num="232" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleDeserializationWithLanguageCountryVariant() : void" num="238" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalFieldSerialization() : void" num="246" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalFieldDeserialization() : void" num="253" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadValueForBigDecimalDeserialization() : void" num="260" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerFieldSerialization() : void" num="267" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerFieldDeserialization() : void" num="273" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverrideBigIntegerTypeAdapter() : void" num="280" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverrideBigDecimalTypeAdapter() : void" num="288" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetSerialization() : void" num="296" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBitSetSerialization() : void" num="307" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBitSetDeserialization() : void" num="317" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDefaultDateSerialization() : void" num="337" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="340" type="cond"/>
            <line num="341" count="1" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultDateDeserialization() : void" num="347" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEqualsDate(Date,int,int,int) : void" num="356" count="3" type="method"/>
            <line num="358" count="3" type="stmt"/>
            <line num="359" count="3" type="stmt"/>
            <line num="360" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEqualsTime(Date,int,int,int) : void" num="363" count="3" type="method"/>
            <line num="365" count="3" type="stmt"/>
            <line num="366" count="3" type="stmt"/>
            <line num="367" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDefaultDateSerializationUsingBuilder() : void" num="370" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="374" type="cond"/>
            <line num="375" count="1" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultDateDeserializationUsingBuilder() : void" num="381" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultCalendarSerialization() : void" num="389" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultCalendarDeserialization() : void" num="400" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultGregorianCalendarSerialization() : void" num="412" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultGregorianCalendarDeserialization() : void" num="424" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateSerializationWithPattern() : void" num="436" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateDeserializationWithPattern() : void" num="444" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateSerializationWithPatternNotOverridenByTypeAdapter() : void" num="456" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Date" num="461" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line num="469" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateSerializationInCollection() : void" num="475" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="476" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line num="478" count="1" type="stmt"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="481" count="1" type="stmt"/>
            <line num="482" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonPrimitiveSerialization() : void" num="493" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="494" count="1" type="stmt"/>
            <line num="495" count="1" type="stmt"/>
            <line num="496" count="1" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonPrimitiveDeserialization() : void" num="500" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="501" count="1" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="1" type="stmt"/>
            <line num="506" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line num="508" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonNullSerialization() : void" num="511" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="512" count="1" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullJsonElementSerialization() : void" num="516" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="517" count="1" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonArraySerialization() : void" num="521" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line num="526" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonArrayDeserialization() : void" num="529" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectSerialization() : void" num="540" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="541" count="1" type="stmt"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectDeserialization() : void" num="547" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="548" count="1" type="stmt"/>
            <line num="549" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonNullDeserialization() : void" num="560" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testJsonElementTypeMismatch() : void" num="565" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithBigDecimal(String)" num="577" count="2" type="method"/>
            <line num="578" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getExpectedJson() : String" num="580" count="1" type="method"/>
            <line num="581" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithBigInteger(String)" num="587" count="2" type="method"/>
            <line num="588" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getExpectedJson() : String" num="590" count="2" type="method"/>
            <line num="591" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPropertiesSerialization() : void" num="595" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="596" count="1" type="stmt"/>
            <line num="597" count="1" type="stmt"/>
            <line num="598" count="1" type="stmt"/>
            <line num="599" count="1" type="stmt"/>
            <line num="600" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPropertiesDeserialization() : void" num="603" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="604" count="1" type="stmt"/>
            <line num="605" count="1" type="stmt"/>
            <line num="606" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTreeSetSerialization() : void" num="609" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line num="613" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTreeSetDeserialization() : void" num="616" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="617" count="1" type="stmt"/>
            <line num="618" count="1" type="stmt"/>
            <line num="619" count="1" type="stmt"/>
            <line num="620" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringBuilderSerialization() : void" num="623" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="624" count="1" type="stmt"/>
            <line num="625" count="1" type="stmt"/>
            <line num="626" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringBuilderDeserialization() : void" num="629" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="630" count="1" type="stmt"/>
            <line num="631" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringBufferSerialization() : void" num="634" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="635" count="1" type="stmt"/>
            <line num="636" count="1" type="stmt"/>
            <line num="637" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringBufferDeserialization() : void" num="640" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Class) : void" num="647" count="1" type="method"/>
            <line num="649" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Class" num="651" count="1" type="method"/>
            <line num="653" count="1" type="stmt"/>
            <line num="654" count="1" type="stmt"/>
            <line num="655" count="1" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="NumberAsStringAdapter(Class&lt;? extends Number&gt;)" num="664" count="2" type="method"/>
            <line num="665" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Number) : void" num="667" count="2" type="method"/>
            <line num="668" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(JsonReader) : Number" num="670" count="2" type="method"/>
            <line num="671" count="2" type="stmt"/>
            <line num="672" count="2" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java" name="DelegateTypeAdapterTest.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="7" loc="94" coveredmethods="6" methods="6" elements="29" classes="2" ncloc="61" statements="21" conditionals="2" coveredstatements="21"/>
            <class name="DelegateTypeAdapterTest">
               <metrics coveredelements="20" complexity="4" methods="3" testruns="2" statements="15" coveredconditionals="2" coveredmethods="3" elements="20" testfailures="0" testduration="0.004" conditionals="2" coveredstatements="15" testpasses="2"/>
            </class>
            <class name="DelegateTypeAdapterTest.StatsTypeAdapterFactory">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="43" count="2" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDelegateInvoked() : void" num="52" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="54" type="cond"/>
            <line num="55" count="10" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelegateInvokedOnStrings() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="77" count="12" type="method"/>
            <line num="78" count="12" type="stmt"/>
            <line num="79" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,T) : void" num="80" count="56" type="method"/>
            <line num="82" count="56" type="stmt"/>
            <line num="83" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : T" num="86" count="56" type="method"/>
            <line num="88" count="56" type="stmt"/>
            <line num="89" count="56" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/EnumTest.java" name="EnumTest.java">
            <metrics coveredelements="79" coveredconditionals="0" complexity="20" loc="216" coveredmethods="17" methods="20" elements="85" classes="7" ncloc="163" statements="65" conditionals="0" coveredstatements="62"/>
            <class name="EnumTest">
               <metrics coveredelements="70" complexity="13" methods="13" testruns="12" statements="57" coveredconditionals="0" coveredmethods="13" elements="70" testfailures="0" testduration="0.018000000000000002" conditionals="0" coveredstatements="57" testpasses="12"/>
            </class>
            <class name="EnumTest.MyEnum">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EnumTest.ClassWithEnumFields">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="EnumTest.Roshambo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EnumTest.MyEnumTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="EnumTest.Gender">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EnumTest.Color">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="49" count="12" type="method"/>
            <line num="51" count="12" type="stmt"/>
            <line num="52" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelEnumSerialization() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelEnumDeserialization() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfEnumsSerialization() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfEnumsDeserialization() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithEnumFieldSerialization() : void" num="85" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithEnumFieldDeserialization() : void" num="90" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="104" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumSubclass() : void" num="112" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumSubclassWithRegisteredTypeAdapter() : void" num="121" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumSubclassAsParameterizedType() : void" num="133" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumCaseMapping() : void" num="147" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumSet() : void" num="152" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="defeats() : Roshambo" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="defeats() : Roshambo" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="defeats() : Roshambo" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Roshambo,Type,JsonSerializationContext) : JsonElement" num="184" count="4" type="method"/>
            <line num="185" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Roshambo" num="188" count="4" type="method"/>
            <line num="190" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumClassWithFields() : void" num="202" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="Color(String,int)" num="211" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line num="213" count="3" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/EnumWithObfuscatedTest.java" name="EnumWithObfuscatedTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="58" coveredmethods="0" methods="2" elements="10" classes="2" ncloc="29" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="EnumWithObfuscatedTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EnumWithObfuscatedTest.Gender">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEnumClassWithObfuscated() : void" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/EscapingTest.java" name="EscapingTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="6" loc="92" coveredmethods="6" methods="6" elements="41" classes="1" ncloc="59" statements="35" conditionals="0" coveredstatements="35"/>
            <class name="EscapingTest">
               <metrics coveredelements="41" complexity="6" methods="6" testruns="5" statements="35" coveredconditionals="0" coveredmethods="6" elements="41" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="35" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingQuotesInStringArray() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapeAllHtmlCharacters() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingObjectFields() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonAcceptsEscapedAndNonEscapedJsonDeserialization() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonDoubleDeserialization() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java" name="ExclusionStrategyFunctionalTest.java">
            <metrics coveredelements="88" coveredconditionals="2" complexity="19" loc="202" coveredmethods="18" methods="18" elements="88" classes="4" ncloc="149" statements="68" conditionals="2" coveredstatements="68"/>
            <class name="ExclusionStrategyFunctionalTest">
               <metrics coveredelements="76" complexity="14" methods="13" testruns="9" statements="61" coveredconditionals="2" coveredmethods="13" elements="76" testfailures="0" testduration="0.003" conditionals="2" coveredstatements="61" testpasses="9"/>
            </class>
            <class name="ExclusionStrategyFunctionalTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExclusionStrategyFunctionalTest.SampleObjectForTest">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ExclusionStrategyFunctionalTest.MyExclusionStrategy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="43" count="18" type="method"/>
            <line num="44" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="50" count="9" type="method"/>
            <line num="52" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategySerialization() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategySerializationDoesNotImpactDeserialization() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategyDeserialization() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategySerializationDoesNotImpactSerialization() : void" num="88" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategyWithMode() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeTopLevelClassSerialization() : void" num="115" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeTopLevelClassSerializationDoesNotImpactDeserialization() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeTopLevelClassDeserialization() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeTopLevelClassDeserializationDoesNotImpactSerialization() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="createGson(ExclusionStrategy,boolean) : Gson" num="152" count="5" type="method"/>
            <line num="153" count="5" type="stmt"/>
            <line num="154" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="154" type="cond"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
            <line num="159" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="SampleObjectForTest()" num="176" count="15" type="method"/>
            <line num="177" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="SampleObjectForTest(int,String,long)" num="180" count="16" type="method"/>
            <line num="181" count="16" type="stmt"/>
            <line num="182" count="16" type="stmt"/>
            <line num="183" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="MyExclusionStrategy(Class&lt;?&gt;)" num="190" count="5" type="method"/>
            <line num="191" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="194" count="40" type="method"/>
            <line num="195" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="198" count="10" type="method"/>
            <line num="199" count="10" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java" name="ExposeFieldsTest.java">
            <metrics coveredelements="63" coveredconditionals="2" complexity="15" loc="169" coveredmethods="14" methods="14" elements="63" classes="7" ncloc="115" statements="47" conditionals="2" coveredstatements="47"/>
            <class name="ExposeFieldsTest">
               <metrics coveredelements="42" complexity="9" methods="9" testruns="8" statements="33" coveredconditionals="0" coveredmethods="9" elements="42" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="33" testpasses="8"/>
            </class>
            <class name="ExposeFieldsTest.ClassWithExposedFields">
               <metrics coveredelements="17" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <class name="ExposeFieldsTest.ClassWithNoExposedFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExposeFieldsTest.SomeInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExposeFieldsTest.SomeObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExposeFieldsTest.SomeInterfaceInstanceCreator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ExposeFieldsTest.ClassWithInterfaceField">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="8" type="method"/>
            <line num="39" count="8" type="stmt"/>
            <line num="40" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullExposeFieldSerialization() : void" num="46" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayWithOneNullExposeFieldObjectSerialization() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposeAnnotationSerialization() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposeAnnotationDeserialization() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoExposedFieldSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoExposedFieldDeserialization() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposedInterfaceFieldSerialization() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposedInterfaceFieldDeserialization() : void" num="106" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithExposedFields(Integer,Integer)" num="120" count="5" type="method"/>
            <line num="121" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithExposedFields(Integer,Integer,long,double,char)" num="123" count="5" type="method"/>
            <line num="124" count="5" type="stmt"/>
            <line num="125" count="5" type="stmt"/>
            <line num="126" count="5" type="stmt"/>
            <line num="127" count="5" type="stmt"/>
            <line num="128" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="131" count="5" type="method"/>
            <line num="132" count="5" type="stmt"/>
            <line num="133" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="133" type="cond"/>
            <line num="134" count="3" type="stmt"/>
            <line num="136" count="5" type="stmt"/>
            <line num="137" count="5" type="stmt"/>
            <line num="138" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : SomeInterface" num="156" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithInterfaceField(SomeInterface)" num="165" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java" name="FieldExclusionTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="7" loc="92" coveredmethods="7" methods="7" elements="32" classes="4" ncloc="55" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="FieldExclusionTest">
               <metrics coveredelements="26" complexity="4" methods="4" testruns="3" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <class name="FieldExclusionTest.Outer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FieldExclusionTest.Outer.Inner">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FieldExclusionTest.NestedClass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultInnerClassExclusion() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInnerClassExclusion() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultNestedStaticClassIncluded() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Inner(String)" num="75" count="5" type="method"/>
            <line num="76" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="NestedClass(String)" num="84" count="5" type="method"/>
            <line num="85" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson() : String" num="88" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/FieldNamingTest.java" name="FieldNamingTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="90" coveredmethods="6" methods="6" elements="17" classes="2" ncloc="65" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FieldNamingTest">
               <metrics coveredelements="17" complexity="6" methods="6" testruns="5" statements="11" coveredconditionals="0" coveredmethods="6" elements="17" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="11" testpasses="5"/>
            </class>
            <class name="FieldNamingTest.TestNames">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testIdentity() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpperCamelCase() : void" num="40" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpperCamelCaseWithSpaces() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLowerCaseWithUnderscores() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLowerCaseWithDashes() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getGsonWithNamingPolicy(FieldNamingPolicy) : Gson" num="72" count="5" type="method"/>
            <line num="73" count="5" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/GsonVersionDiagnosticsTest.java" name="GsonVersionDiagnosticsTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="9" loc="96" coveredmethods="7" methods="7" elements="27" classes="2" ncloc="62" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="GsonVersionDiagnosticsTest">
               <metrics coveredelements="25" complexity="9" methods="7" testruns="3" statements="20" coveredconditionals="0" coveredmethods="7" elements="27" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="18" testpasses="3"/>
            </class>
            <class name="GsonVersionDiagnosticsTest.TestType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,TestType) : void" num="45" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : TestType" num="48" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionPattern() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertionErrorInSerializationPrintsVersion() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertionErrorInDeserializationPrintsVersion() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ensureAssertionErrorPrintsGsonVersion(AssertionError) : void" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/InheritanceTest.java" name="InheritanceTest.java">
            <metrics coveredelements="150" coveredconditionals="10" complexity="32" loc="277" coveredmethods="23" methods="23" elements="158" classes="3" ncloc="226" statements="121" conditionals="14" coveredstatements="117"/>
            <class name="InheritanceTest">
               <metrics coveredelements="87" complexity="14" methods="14" testruns="13" statements="73" coveredconditionals="0" coveredmethods="14" elements="87" testfailures="0" testduration="0.011000000000000001" conditionals="0" coveredstatements="73" testpasses="13"/>
            </class>
            <class name="InheritanceTest.SubTypeOfNested">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="InheritanceTest.ClassWithSubInterfacesOfCollection">
               <metrics coveredelements="58" coveredconditionals="10" complexity="16" coveredmethods="7" methods="7" elements="66" statements="45" conditionals="14" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="51" count="13" type="method"/>
            <line num="53" count="13" type="stmt"/>
            <line num="54" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassSerialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassDeserialization() : void" num="63" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithBaseFieldSerialization() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithBaseArrayFieldSerialization() : void" num="79" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithBaseCollectionFieldSerialization() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSub() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSubForToJsonMethod() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsBaseWhenSpecifiedWithExplicitType() : void" num="113" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSubWhenSpecifiedWithExplicitType() : void" num="127" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubTypeOfNested(BagOfPrimitives,BagOfPrimitives)" num="142" count="1" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="appendFields(StringBuilder) : void" num="146" count="2" type="method"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubInterfacesOfCollectionSerialization() : void" num="153" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubInterfacesOfCollectionDeserialization() : void" num="179" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithSubInterfacesOfCollection(List&lt;Integer&gt;,Queue&lt;Long&gt;,Set&lt;Float&gt;,SortedSet&lt;Character&gt;)" num="197" count="1" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="listContains(int) : boolean" num="205" count="1" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="queueContains(long) : boolean" num="214" count="1" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="setContains(float) : boolean" num="223" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="sortedSetContains(char) : boolean" num="232" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="241" count="1" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="append(StringBuilder,Collection&lt;?&gt;) : StringBuilder" num="256" count="4" type="method"/>
            <line num="257" count="4" type="stmt"/>
            <line num="258" count="4" type="stmt"/>
            <line num="259" count="4" type="stmt"/>
            <line num="260" count="16" type="stmt"/>
            <line falsecount="4" truecount="12" num="260" type="cond"/>
            <line num="261" count="12" type="stmt"/>
            <line num="263" count="4" type="stmt"/>
            <line num="265" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="265" type="cond"/>
            <line num="266" count="4" type="stmt"/>
            <line num="268" count="16" type="stmt"/>
            <line num="269" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="269" type="cond"/>
            <line num="270" count="4" type="stmt"/>
            <line num="273" count="4" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/InstanceCreatorTest.java" name="InstanceCreatorTest.java">
            <metrics coveredelements="45" coveredconditionals="0" complexity="10" loc="127" coveredmethods="10" methods="10" elements="45" classes="3" ncloc="91" statements="35" conditionals="0" coveredstatements="35"/>
            <class name="InstanceCreatorTest">
               <metrics coveredelements="45" complexity="10" methods="10" testruns="5" statements="35" coveredconditionals="0" coveredmethods="10" elements="45" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="35" testpasses="5"/>
            </class>
            <class name="InstanceCreatorTest.SubArrayList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InstanceCreatorTest.SubTreeSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInstanceCreatorReturnsBaseType() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Base" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstanceCreatorReturnsSubTypeForTopLevelObject() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Base" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstanceCreatorReturnsSubTypeForField() : void" num="74" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Base" num="77" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstanceCreatorForCollectionType() : void" num="89" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : List&lt;String&gt;" num="93" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstanceCreatorForParametrizedType() : void" num="105" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : SortedSet" num="110" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/InterfaceTest.java" name="InterfaceTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="72" coveredmethods="5" methods="5" elements="13" classes="4" ncloc="37" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="InterfaceTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="2" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="InterfaceTest.TestObjectInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InterfaceTest.TestObject">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="InterfaceTest.TestObjectWrapper">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializingObjectImplementingInterface() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializingInterfaceObjectField() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestObject(String)" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestObjectWrapper(TestObjectInterface)" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/InternationalizationTest.java" name="InternationalizationTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="71" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="33" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="InternationalizationTest">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="4" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="31" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithRawChineseCharactersDeserialization() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithUnicodeChineseCharactersSerialization() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithUnicodeChineseCharactersDeserialization() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithUnicodeChineseCharactersEscapedDeserialization() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JavaUtilConcurrentAtomicTest.java" name="JavaUtilConcurrentAtomicTest.java">
            <metrics coveredelements="49" coveredconditionals="0" complexity="8" loc="110" coveredmethods="8" methods="8" elements="49" classes="2" ncloc="78" statements="41" conditionals="0" coveredstatements="41"/>
            <class name="JavaUtilConcurrentAtomicTest">
               <metrics coveredelements="49" complexity="8" methods="8" testruns="7" statements="41" coveredconditionals="0" coveredmethods="8" elements="49" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="41" testpasses="7"/>
            </class>
            <class name="JavaUtilConcurrentAtomicTest.AtomicLongHolder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="7" type="method"/>
            <line num="39" count="7" type="stmt"/>
            <line num="40" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicBoolean() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicInteger() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicLong() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicLongWithStringSerializationPolicy() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicIntegerArray() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicLongArray() : void" num="84" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtomicLongArrayWithStringSerializationPolicy() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JavaUtilTest.java" name="JavaUtilTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="3" loc="62" coveredmethods="3" methods="3" elements="18" classes="2" ncloc="33" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="JavaUtilTest">
               <metrics coveredelements="18" complexity="3" methods="3" testruns="2" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <class name="JavaUtilTest.CurrencyHolder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCurrency() : void" num="38" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProperties() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java" name="JsonAdapterAnnotationOnClassesTest.java">
            <metrics coveredelements="95" coveredconditionals="0" complexity="31" loc="263" coveredmethods="26" methods="29" elements="104" classes="14" ncloc="209" statements="75" conditionals="0" coveredstatements="69"/>
            <class name="JsonAdapterAnnotationOnClassesTest">
               <metrics coveredelements="57" complexity="15" methods="13" testruns="9" statements="48" coveredconditionals="0" coveredmethods="12" elements="61" testfailures="0" testduration="0.012000000000000002" conditionals="0" coveredstatements="45" testpasses="9"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.A">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.A.JsonAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.C">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.C.JsonAdapterFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.B">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.ClassWithIncorrectJsonAdapter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.User">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.UserJsonAdapter">
               <metrics coveredelements="11" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.NullableClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.NullableClassJsonAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.FooJsonAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="JsonAdapterAnnotationOnClassesTest.D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testJsonAdapterInvoked() : void" num="44" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonAdapterFactoryInvoked() : void" num="62" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisteredAdapterOverridesJsonAdapter() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,A) : void" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : A" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisteredSerializerOverridesJsonAdapter() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(A,Type,JsonSerializationContext) : JsonElement" num="91" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisteredDeserializerOverridesJsonAdapter() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : A" num="110" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testIncorrectTypeAdapterFails() : void" num="124" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuperclassTypeAdapterNotInvoked() : void" num="131" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSafeObjectFromJson() : void" num="136" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="A(String)" num="145" count="7" type="method"/>
            <line num="146" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,A) : void" num="149" count="2" type="method"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : A" num="152" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="C(String)" num="162" count="2" type="method"/>
            <line num="163" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="166" count="1" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,T) : void" num="168" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : T" num="171" count="1" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="B(String)" num="182" count="1" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithIncorrectJsonAdapter(String)" num="191" count="1" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="User(String,String)" num="200" count="2" type="method"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,User) : void" num="206" count="1" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : User" num="214" count="1" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,NullableClass) : void" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : NullableClass" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Foo) : void" num="244" count="1" type="method"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Foo" num="248" count="1" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testIncorrectJsonAdapterType() : void" num="253" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java" name="JsonAdapterAnnotationOnFieldsTest.java">
            <metrics coveredelements="124" coveredconditionals="2" complexity="41" loc="306" coveredmethods="36" methods="39" elements="135" classes="18" ncloc="250" statements="92" conditionals="4" coveredstatements="86"/>
            <class name="JsonAdapterAnnotationOnFieldsTest">
               <metrics coveredelements="61" complexity="12" methods="12" testruns="10" statements="53" coveredconditionals="0" coveredmethods="10" elements="65" testfailures="0" testduration="0.013000000000000005" conditionals="0" coveredstatements="51" testpasses="10"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Gadget">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Gizmo">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Part">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.PartJsonFieldAnnotationAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.GizmoPartTypeAdapterFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Computer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.User">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.UserClassAnnotationAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Computer2">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.UserFieldAnnotationAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.RegisteredUserAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.GadgetWithTwoParts">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.GadgetWithOptionalPart">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.GadgetWithPrimitivePart">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.LongToStringTypeAdapterFactory">
               <metrics coveredelements="11" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="15" statements="8" conditionals="4" coveredstatements="6"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Gizmo2">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterAnnotationOnFieldsTest.Gizmo2PartTypeAdapterFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testClassAnnotationAdapterTakesPrecedenceOverDefault() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter() : void" num="64" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Part) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Part" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldAnnotationTakesPrecedenceOverClassAnnotation() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Gadget(Part)" num="91" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Gizmo(Part)" num="99" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Part(String)" num="106" count="9" type="method"/>
            <line num="107" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Part) : void" num="112" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Part" num="115" count="3" type="method"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="122" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,T) : void" num="124" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : T" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Computer(User)" num="138" count="2" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="User(String)" num="146" count="6" type="method"/>
            <line num="147" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,User) : void" num="152" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : User" num="155" count="1" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Computer2(User)" num="165" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,User) : void" num="171" count="1" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : User" num="174" count="1" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,User) : void" num="181" count="1" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : User" num="184" count="1" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonAdapterInvokedOnlyForAnnotatedFields() : void" num="190" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="GadgetWithTwoParts(Part,Part)" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonAdapterWrappedInNullSafeAsRequested() : void" num="207" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="GadgetWithOptionalPart(Part)" num="222" count="1" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault() : void" num="228" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveFieldAnnotationTakesPrecedenceOverDefault() : void" num="237" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="GadgetWithPrimitivePart(long)" num="249" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Long) : void" num="256" count="1" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Long" num="259" count="1" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="263" count="1" type="method"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="268" type="cond"/>
            <line num="269" count="1" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldAnnotationWorksForParameterizedType() : void" num="276" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Gizmo2(List&lt;Part&gt;)" num="287" count="1" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Gson,TypeToken&lt;T&gt;) : TypeAdapter&lt;T&gt;" num="293" count="1" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,T) : void" num="295" count="1" type="method"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : T" num="298" count="1" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java" name="JsonAdapterSerializerDeserializerTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="17" loc="164" coveredmethods="17" methods="17" elements="50" classes="13" ncloc="125" statements="33" conditionals="0" coveredstatements="33"/>
            <class name="JsonAdapterSerializerDeserializerTest">
               <metrics coveredelements="19" complexity="3" methods="3" testruns="3" statements="16" coveredconditionals="0" coveredmethods="3" elements="19" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="16" testpasses="3"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.Computer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.User">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.UserSerializer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.UserDeserializer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.UserSerializerDeserializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.Computer2">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.User2">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.UserSerializerDeserializer2">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.Container">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.Base">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.BaseStringAdapter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JsonAdapterSerializerDeserializerTest.BaseIntegerAdapter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testJsonSerializerDeserializerBasedJsonAdapterOnFields() : void" num="39" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Computer(User,User,User)" num="52" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="User(String)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(User,Type,JsonSerializationContext) : JsonElement" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : User" num="74" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(User,Type,JsonSerializationContext) : JsonElement" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : User" num="86" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonSerializerDeserializerBasedJsonAdapterOnClass() : void" num="93" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Computer2(User2)" num="103" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="User2(String)" num="111" count="2" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(User2,Type,JsonSerializationContext) : JsonElement" num="117" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : User2" num="121" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDifferentJsonAdaptersForGenericFieldsOfSameRawType() : void" num="128" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Container(String,int)" num="139" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Base(T)" num="148" count="2" type="method"/>
            <line num="149" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base&lt;String&gt;,Type,JsonSerializationContext) : JsonElement" num="154" count="1" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base&lt;Integer&gt;,Type,JsonSerializationContext) : JsonElement" num="160" count="1" type="method"/>
            <line num="161" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JsonArrayTest.java" name="JsonArrayTest.java">
            <metrics coveredelements="90" coveredconditionals="0" complexity="8" loc="162" coveredmethods="8" methods="8" elements="90" classes="1" ncloc="104" statements="82" conditionals="0" coveredstatements="82"/>
            <class name="JsonArrayTest">
               <metrics coveredelements="90" complexity="8" methods="8" testruns="8" statements="82" coveredconditionals="0" coveredmethods="8" elements="90" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="82" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="testStringPrimitiveAddition() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerPrimitiveAddition() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoublePrimitiveAddition() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleanPrimitiveAddition() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharPrimitiveAddition() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedPrimitiveAddition() : void" num="115" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullPrimitiveAddition() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSameAddition() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JsonParserTest.java" name="JsonParserTest.java">
            <metrics coveredelements="59" coveredconditionals="0" complexity="14" loc="139" coveredmethods="9" methods="9" elements="64" classes="1" ncloc="101" statements="55" conditionals="0" coveredstatements="50"/>
            <class name="JsonParserTest">
               <metrics coveredelements="59" complexity="14" methods="9" testruns="8" statements="55" coveredconditionals="0" coveredmethods="9" elements="64" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="50" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="47" count="8" type="method"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testParseInvalidJson() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializingCustomTree() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadTypeForDeserializingCustomTree() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadFieldTypeForCustomDeserializerCustomTree() : void" num="81" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadFieldTypeForDeserializingCustomTree() : void" num="95" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChangingCustomTreeAndDeserializing() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExtraCommasInArrays() : void" num="124" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testExtraCommasInMaps() : void" num="131" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java" name="JsonTreeTest.java">
            <metrics coveredelements="47" coveredconditionals="3" complexity="9" loc="89" coveredmethods="7" methods="7" elements="49" classes="2" ncloc="73" statements="38" conditionals="4" coveredstatements="37"/>
            <class name="JsonTreeTest">
               <metrics coveredelements="44" complexity="8" methods="6" testruns="4" statements="36" coveredconditionals="3" coveredmethods="6" elements="46" testfailures="0" testduration="0.002" conditionals="4" coveredstatements="35" testpasses="4"/>
            </class>
            <class name="JsonTreeTest.SubTypeOfBagOfPrimitives">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="23" count="4" type="method"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToJsonTree() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToJsonTreeObjectType() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonTreeToString() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonTreeNull() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertContains(JsonObject,JsonPrimitive) : void" num="69" count="8" type="method"/>
            <line num="70" count="8" type="stmt"/>
            <line num="71" count="20" type="stmt"/>
            <line num="72" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="72" type="cond"/>
            <line num="73" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="73" type="cond"/>
            <line num="74" count="8" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubTypeOfBagOfPrimitives(long,int,boolean,String,float)" num="84" count="2" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/LeniencyTest.java" name="LeniencyTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="LeniencyTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="1" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientFromJson() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java" name="MapAsArrayTypeAdapterTest.java">
            <metrics coveredelements="53" coveredconditionals="0" complexity="13" loc="141" coveredmethods="9" methods="11" elements="64" classes="3" ncloc="109" statements="53" conditionals="0" coveredstatements="44"/>
            <class name="MapAsArrayTypeAdapterTest">
               <metrics coveredelements="45" complexity="8" methods="6" testruns="5" statements="48" coveredconditionals="0" coveredmethods="5" elements="54" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="40" testpasses="5"/>
            </class>
            <class name="MapAsArrayTypeAdapterTest.Point">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="MapAsArrayTypeAdapterTest.PointWithProperty">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSerializeComplexMapWithTypeAdapter() : void" num="31" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testTwoTypesCollapseToOneSerialize() : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTwoTypesCollapseToOneDeserialize() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleEnableComplexKeyRegistrationHasNoEffect() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithTypeVariableSerialization() : void" num="99" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithTypeVariableDeserialization() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Point(int,int)" num="122" count="8" type="method"/>
            <line num="123" count="8" type="stmt"/>
            <line num="124" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="Point()" num="126" count="6" type="method"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="127" count="6" type="method"/>
            <line num="128" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="130" count="14" type="method"/>
            <line num="131" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/MapTest.java" name="MapTest.java">
            <metrics coveredelements="358" coveredconditionals="0" complexity="62" loc="654" coveredmethods="59" methods="60" elements="362" classes="7" ncloc="518" statements="302" conditionals="0" coveredstatements="299"/>
            <class name="MapTest">
               <metrics coveredelements="345" complexity="55" methods="53" testruns="48" statements="294" coveredconditionals="0" coveredmethods="53" elements="347" testfailures="0" testduration="0.037000000000000026" conditionals="0" coveredstatements="292" testpasses="48"/>
            </class>
            <class name="MapTest.MyParameterizedMap">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MapTest.ClassWithAMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MapTest.MyMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MapTest.Point">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="MapTest.MapClass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="MapTest.MapWithGeneralMapParameters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="57" count="48" type="method"/>
            <line num="59" count="48" type="stmt"/>
            <line num="60" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerialization() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserialization() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawMapSerialization() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationEmpty() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationEmpty() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValue() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithNullValue() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValueButSerializeNulls() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullKey() : void" num="131" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithNullKey() : void" num="140" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithIntegerKeys() : void" num="153" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithIntegerKeys() : void" num="162" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithUnquotedIntegerKeys() : void" num="170" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithLongKeys() : void" num="178" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithUnquotedLongKeys() : void" num="188" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashMapDeserialization() : void" num="198" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortedMap() : void" num="206" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcurrentMap() : void" num="214" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcurrentHashMap() : void" num="224" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcurrentNavigableMap() : void" num="234" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcurrentSkipListMap() : void" num="244" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedMapSubclassSerialization() : void" num="254" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="MyParameterizedMap(int)" num="265" count="1" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSubclassSerialization() : void" num="270" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapStandardSubclassDeserialization() : void" num="277" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSubclassDeserialization() : void" num="285" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : MyMap" num="287" count="1" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializerForSpecificMapType() : void" num="297" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Map&lt;String, Long&gt;,Type,JsonSerializationContext) : JsonElement" num="302" count="1" type="method"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="3" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValues() : void" num="330" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValuesSerialized() : void" num="342" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithWildcardValues() : void" num="352" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="353" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithWildcardValues() : void" num="363" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapOfMapSerialization() : void" num="381" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapOfMapDeserialization() : void" num="396" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithQuotes() : void" num="408" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteMapsWithEmptyStringKey() : void" num="418" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="419" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadMapsWithEmptyStringKey() : void" num="425" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeMaps() : void" num="433" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line num="457" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaceTypeMap() : void" num="461" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line num="478" count="1" type="stmt"/>
            <line num="479" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaceTypeMapWithSerializer() : void" num="482" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="495" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(TestTypes.Base,Type,JsonSerializationContext) : JsonElement" num="496" count="2" type="method"/>
            <line num="498" count="2" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="506" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGeneralMapField() : void" num="516" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="517" count="1" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line num="519" count="1" type="stmt"/>
            <line num="520" count="1" type="stmt"/>
            <line num="522" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="526" count="1" type="stmt"/>
            <line num="529" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComplexKeysSerialization() : void" num="532" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="1" type="stmt"/>
            <line num="538" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testComplexKeysDeserialization() : void" num="541" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringKeyDeserialization() : void" num="550" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberKeyDeserialization() : void" num="558" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="559" count="1" type="stmt"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="1" type="stmt"/>
            <line num="563" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleanKeyDeserialization() : void" num="566" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="567" count="1" type="stmt"/>
            <line num="568" count="1" type="stmt"/>
            <line num="569" count="1" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line num="571" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMapDeserializationWithDuplicateKeys() : void" num="574" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="575" count="1" type="stmt"/>
            <line num="576" count="1" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeMapOfMaps() : void" num="582" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="583" count="1" type="stmt"/>
            <line num="584" count="1" type="stmt"/>
            <line num="587" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeerializeMapOfMaps() : void" num="591" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="592" count="1" type="stmt"/>
            <line num="593" count="1" type="stmt"/>
            <line num="596" count="1" type="stmt"/>
            <line num="597" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="newMap(K,V,K,V) : Map&lt;K, V&gt;" num="600" count="6" type="method"/>
            <line num="601" count="6" type="stmt"/>
            <line num="602" count="6" type="stmt"/>
            <line num="603" count="6" type="stmt"/>
            <line num="604" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapNamePromotionWithJsonElementReader() : void" num="607" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Point(int,int)" num="619" count="2" type="method"/>
            <line num="620" count="2" type="stmt"/>
            <line num="621" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="624" count="0" type="method"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="628" count="2" type="method"/>
            <line num="629" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="632" count="4" type="method"/>
            <line num="633" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="addBase(String,TestTypes.Base) : void" num="641" count="2" type="method"/>
            <line num="642" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addSub(String,TestTypes.Sub) : void" num="645" count="2" type="method"/>
            <line num="646" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java" name="MoreSpecificTypeSerializationTest.java">
            <metrics coveredelements="69" coveredconditionals="0" complexity="15" loc="178" coveredmethods="15" methods="15" elements="69" classes="9" ncloc="127" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MoreSpecificTypeSerializationTest">
               <metrics coveredelements="49" complexity="7" methods="7" testruns="6" statements="42" coveredconditionals="0" coveredmethods="7" elements="49" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="42" testpasses="6"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.Base">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.Sub">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.ClassWithBaseFields">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.ClassWithContainersOfBaseFields">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.ParameterizedBase">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.ParameterizedSub">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.ClassWithParameterizedBaseFields">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MoreSpecificTypeSerializationTest.ClassWithContainersOfParameterizedBaseFields">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="38" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubclassFields() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListOfSubclassFields() : void" num="51" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapOfSubclassFields() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedSubclassFields() : void" num="76" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListOfParameterizedSubclassFields() : void" num="88" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapOfParameterizedSubclassFields() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Base(int)" num="118" count="5" type="method"/>
            <line num="119" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="Sub(int,int)" num="125" count="3" type="method"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithBaseFields(Base)" num="133" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithContainersOfBaseFields(Collection&lt;Base&gt;,Map&lt;String, Base&gt;)" num="141" count="2" type="method"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="ParameterizedBase(T)" num="149" count="5" type="method"/>
            <line num="150" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="ParameterizedSub(T,T)" num="156" count="3" type="method"/>
            <line num="157" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithParameterizedBaseFields(ParameterizedBase&lt;String&gt;)" num="164" count="1" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithContainersOfParameterizedBaseFields(Collection&lt;ParameterizedBase&lt;String&gt;&gt;,Map&lt;String, ParameterizedBase&lt;String&gt;&gt;)" num="172" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java" name="NamingPolicyTest.java">
            <metrics coveredelements="86" coveredconditionals="0" complexity="23" loc="203" coveredmethods="21" methods="22" elements="89" classes="5" ncloc="151" statements="67" conditionals="0" coveredstatements="65"/>
            <class name="NamingPolicyTest">
               <metrics coveredelements="77" complexity="18" methods="17" testruns="16" statements="61" coveredconditionals="0" coveredmethods="17" elements="78" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="60" testpasses="16"/>
            </class>
            <class name="NamingPolicyTest.AtName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NamingPolicyTest.UpperCaseNamingStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="NamingPolicyTest.ClassWithDuplicateFields">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="NamingPolicyTest.ClassWithComplexFieldName">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="39" count="16" type="method"/>
            <line num="41" count="16" type="stmt"/>
            <line num="42" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithNonDefaultFieldNamingPolicySerialization() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithNonDefaultFieldNamingPolicyDeserialiation() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseDashPolicySerialization() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseDotPolicySerialization() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseDotPolicyDeserialiation() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseDashPolicyDeserialiation() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseUnderscorePolicySerialization() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseUnderscorePolicyDeserialiation() : void" num="95" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithSerializedNameFieldNamingPolicySerialization() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithSerializedNameFieldNamingPolicyDeserialization() : void" num="110" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithUpperCamelCaseSpacesPolicySerialiation() : void" num="128" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithUpperCamelCaseSpacesPolicyDeserialiation() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeprecatedNamingStrategy() : void" num="144" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComplexFieldNameStrategy() : void" num="151" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAtSignInSerializedName() : void" num="162" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="171" count="1" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithDuplicateFields(Integer)" num="182" count="2" type="method"/>
            <line num="183" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithDuplicateFields(Double)" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithDuplicateFields(Integer,Double)" num="190" count="2" type="method"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithComplexFieldName(long)" num="199" count="1" type="method"/>
            <line num="200" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java" name="NullObjectAndFieldTest.java">
            <metrics coveredelements="107" coveredconditionals="0" complexity="21" loc="240" coveredmethods="21" methods="21" elements="107" classes="6" ncloc="180" statements="86" conditionals="0" coveredstatements="86"/>
            <class name="NullObjectAndFieldTest">
               <metrics coveredelements="101" complexity="19" methods="19" testruns="16" statements="82" coveredconditionals="0" coveredmethods="19" elements="101" testfailures="0" testduration="0.011000000000000003" conditionals="0" coveredstatements="82" testpasses="16"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithInitializedMembers">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithNullWrappedPrimitive">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithMembers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithObjectsSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="NullObjectAndFieldTest.ObjectWithField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="45" count="16" type="method"/>
            <line num="47" count="16" type="stmt"/>
            <line num="48" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectSerialization() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectDeserialization() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNulls() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitDeserializationOfNulls() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNullArrayMembers() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullWrappedPrimitiveMemberSerialization() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullWrappedPrimitiveMemberDeserialization() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNullCollectionMembers() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNullStringMembers() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializationOfNulls() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintPrintingObjectWithNulls() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintPrintingArraysWithNulls() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAbsentJsonElementsAreSetToNull() : void" num="153" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithInitializedMembers()" num="178" count="1" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithObjects,Type,JsonSerializationContext) : JsonElement" num="195" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitNullSetsFieldToNullDuringDeserialization() : void" num="203" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterPassesNullSerialization() : void" num="210" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ObjectWithField,Type,JsonSerializationContext) : JsonElement" num="213" count="1" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterPassesNullDesrialization() : void" num="224" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : ObjectWithField" num="227" count="1" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ObjectTest.java" name="ObjectTest.java">
            <metrics coveredelements="243" coveredconditionals="9" complexity="57" loc="507" coveredmethods="50" methods="51" elements="248" classes="11" ncloc="393" statements="187" conditionals="10" coveredstatements="184"/>
            <class name="ObjectTest">
               <metrics coveredelements="210" complexity="50" methods="48" testruns="44" statements="165" coveredconditionals="1" coveredmethods="47" elements="215" testfailures="0" testduration="0.034000000000000016" conditionals="2" coveredstatements="162" testpasses="44"/>
            </class>
            <class name="ObjectTest.ClassWithCollectionField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.ClassWithObjectField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Parent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Parent.Child">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.ArrayOfArrays">
               <metrics coveredelements="31" coveredconditionals="8" complexity="6" coveredmethods="2" methods="2" elements="31" statements="21" conditionals="8" coveredstatements="21"/>
            </class>
            <class name="ObjectTest.ClassWithPrivateNoArgsConstructor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ObjectTest.ClassWithEmptyStringFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.HasObjectMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Department">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Product">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="60" count="44" type="method"/>
            <line num="62" count="44" type="stmt"/>
            <line num="63" count="44" type="stmt"/>
            <line num="65" count="44" type="stmt"/>
            <line num="66" count="44" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="69" count="44" type="method"/>
            <line num="71" count="44" type="stmt"/>
            <line num="72" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonInSingleQuotesDeserialization() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonInMixedQuotesDeserialization() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitivesSerialization() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitivesDeserialization() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitiveWrappersSerialization() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitiveWrappersDeserialization() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithTransientFieldsSerialization() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithTransientFieldsDeserialization() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored() : void" num="126" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithNoFieldsSerialization() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithNoFieldsDeserialization() : void" num="138" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedSerialization() : void" num="145" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedDeserialization() : void" num="151" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSerialization() : void" num="158" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyStringDeserialization() : void" num="162" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTruncatedDeserialization() : void" num="167" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullDeserialization() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullFieldsSerialization() : void" num="181" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullFieldsDeserialization() : void" num="186" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfObjectsSerialization() : void" num="193" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfObjectsDeserialization() : void" num="198" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfArraysSerialization() : void" num="204" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfArraysDeserialization() : void" num="209" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfObjectsAsFields() : void" num="215" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullArraysDeserialization() : void" num="234" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullObjectFieldsDeserialization() : void" num="243" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyCollectionInAnObjectDeserialization() : void" num="249" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveArrayInAnObjectDeserialization() : void" num="260" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullPrimitiveFieldsDeserialization() : void" num="269" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyCollectionInAnObjectSerialization() : void" num="275" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrivateNoArgConstructorDeserialization() : void" num="280" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnonymousLocalClassesSerialization() : void" num="286" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnonymousLocalClassesCustomSerialization() : void" num="292" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithNoFields,Type,JsonSerializationContext) : JsonElement" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveArrayFieldSerialization() : void" num="307" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithObjectFieldSerialization() : void" num="316" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInnerClassSerialization() : void" num="328" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInnerClassDeserialization() : void" num="336" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Parent.Child" num="340" count="1" type="method"/>
            <line num="341" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="ArrayOfArrays()" num="359" count="3" type="method"/>
            <line num="360" count="3" type="stmt"/>
            <line num="361" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="361" type="cond"/>
            <line num="362" count="9" type="stmt"/>
            <line num="363" count="9" type="stmt"/>
            <line falsecount="9" truecount="18" num="363" type="cond"/>
            <line num="364" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="getExpectedJson() : String" num="368" count="3" type="method"/>
            <line num="369" count="3" type="stmt"/>
            <line num="370" count="3" type="stmt"/>
            <line num="371" count="3" type="stmt"/>
            <line num="372" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="372" type="cond"/>
            <line num="373" count="3" type="stmt"/>
            <line num="375" count="6" type="stmt"/>
            <line num="377" count="9" type="stmt"/>
            <line num="378" count="9" type="stmt"/>
            <line num="379" count="9" type="stmt"/>
            <line num="380" count="18" type="stmt"/>
            <line falsecount="9" truecount="9" num="380" type="cond"/>
            <line num="381" count="9" type="stmt"/>
            <line num="383" count="9" type="stmt"/>
            <line num="385" count="18" type="stmt"/>
            <line num="387" count="9" type="stmt"/>
            <line num="389" count="3" type="stmt"/>
            <line num="390" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithPrivateNoArgsConstructor()" num="396" count="1" type="method"/>
            <line num="397" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectFieldNamesWithoutQuotesDeserialization() : void" num="404" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringFieldWithNumberValueDeserialization() : void" num="412" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line num="421" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringFieldWithEmptyValueSerialization() : void" num="429" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringFieldWithEmptyValueDeserialization() : void" num="441" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="442" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectSerialization() : void" num="455" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="456" count="1" type="stmt"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingletonLists() : void" num="465" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="466" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line num="478" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDateAsMapObjectField() : void" num="484" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="487" type="cond"/>
            <line num="488" count="1" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java" name="ParameterizedTypesTest.java">
            <metrics coveredelements="273" coveredconditionals="38" complexity="65" loc="503" coveredmethods="27" methods="28" elements="337" classes="9" ncloc="416" statements="235" conditionals="74" coveredstatements="208"/>
            <class name="ParameterizedTypesTest">
               <metrics coveredelements="140" complexity="18" methods="18" testruns="17" statements="122" coveredconditionals="0" coveredmethods="18" elements="140" testfailures="0" testduration="0.02500000000000001" conditionals="0" coveredstatements="122" testpasses="17"/>
            </class>
            <class name="ParameterizedTypesTest.ObjectWithTypeVariables">
               <metrics coveredelements="96" coveredconditionals="25" complexity="20" coveredmethods="6" methods="6" elements="100" statements="66" conditionals="28" coveredstatements="65"/>
            </class>
            <class name="ParameterizedTypesTest.MultiParameters">
               <metrics coveredelements="37" coveredconditionals="13" complexity="27" coveredmethods="3" methods="4" elements="97" statements="47" conditionals="46" coveredstatements="21"/>
            </class>
            <class name="ParameterizedTypesTest.Quantity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.MyQuantity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Measurable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Field">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Immutable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Amount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="48" count="17" type="method"/>
            <line num="50" count="17" type="stmt"/>
            <line num="51" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypesSerialization() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeDeserialization() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypesWithMultipleParametersSerialization() : void" num="75" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypesWithMultipleParametersDeserialization() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeWithCustomSerializer() : void" num="100" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypesWithCustomDeserializer() : void" num="116" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypesWithWriterSerialization() : void" num="138" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeWithReaderDeserialization() : void" num="146" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeFieldsAndGenericArraysSerialization() : void" num="160" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeFieldsAndGenericArraysDeserialization() : void" num="177" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeDeserialization() : void" num="195" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeArrayDeserialization() : void" num="205" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeWithVariableTypeDeserialization() : void" num="217" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeGenericArraysSerialization() : void" num="231" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeGenericArraysDeserialization() : void" num="245" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ObjectWithTypeVariables()" num="275" count="5" type="method"/>
            <line num="277" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="ObjectWithTypeVariables(T,T[],List&lt;T&gt;,List&lt;T&gt;[],List&lt;? extends T&gt;,List&lt;? extends T&gt;[])" num="280" count="12" type="method"/>
            <line num="282" count="12" type="stmt"/>
            <line num="283" count="12" type="stmt"/>
            <line num="284" count="12" type="stmt"/>
            <line num="285" count="12" type="stmt"/>
            <line num="286" count="12" type="stmt"/>
            <line num="287" count="12" type="stmt"/>
            <line complexity="12" visibility="public" signature="getExpectedJson() : String" num="290" count="6" type="method"/>
            <line num="291" count="6" type="stmt"/>
            <line num="293" count="6" type="stmt"/>
            <line num="294" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="294" type="cond"/>
            <line num="295" count="3" type="stmt"/>
            <line num="296" count="3" type="stmt"/>
            <line num="299" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="299" type="cond"/>
            <line num="300" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="300" type="cond"/>
            <line num="301" count="2" type="stmt"/>
            <line num="303" count="3" type="stmt"/>
            <line num="304" count="3" type="stmt"/>
            <line num="305" count="3" type="stmt"/>
            <line num="306" count="3" type="stmt"/>
            <line num="309" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="309" type="cond"/>
            <line num="310" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="310" type="cond"/>
            <line num="311" count="2" type="stmt"/>
            <line num="313" count="3" type="stmt"/>
            <line num="314" count="3" type="stmt"/>
            <line num="315" count="3" type="stmt"/>
            <line num="316" count="3" type="stmt"/>
            <line num="319" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="319" type="cond"/>
            <line num="320" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="320" type="cond"/>
            <line num="321" count="2" type="stmt"/>
            <line num="323" count="3" type="stmt"/>
            <line num="324" count="3" type="stmt"/>
            <line num="325" count="3" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line num="329" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="329" type="cond"/>
            <line num="330" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="330" type="cond"/>
            <line num="331" count="2" type="stmt"/>
            <line num="333" count="2" type="stmt"/>
            <line num="334" count="2" type="stmt"/>
            <line num="335" count="2" type="stmt"/>
            <line num="336" count="2" type="stmt"/>
            <line num="339" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="339" type="cond"/>
            <line num="340" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="340" type="cond"/>
            <line num="341" count="2" type="stmt"/>
            <line num="343" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line num="346" count="2" type="stmt"/>
            <line num="348" count="6" type="stmt"/>
            <line num="349" count="6" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendObjectsToBuilder(StringBuilder,Iterable&lt;? extends T&gt;) : void" num="352" count="18" type="method"/>
            <line num="353" count="18" type="stmt"/>
            <line num="354" count="18" type="stmt"/>
            <line num="355" count="39" type="stmt"/>
            <line falsecount="18" truecount="21" num="355" type="cond"/>
            <line num="356" count="21" type="stmt"/>
            <line num="358" count="39" type="stmt"/>
            <line num="359" count="39" type="stmt"/>
            <line complexity="3" visibility="private" signature="appendObjectsToBuilder(StringBuilder,List&lt;? extends T&gt;[]) : void" num="363" count="5" type="method"/>
            <line num="364" count="5" type="stmt"/>
            <line num="365" count="5" type="stmt"/>
            <line num="366" count="10" type="stmt"/>
            <line falsecount="5" truecount="5" num="366" type="cond"/>
            <line num="367" count="5" type="stmt"/>
            <line num="369" count="10" type="stmt"/>
            <line num="370" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="370" type="cond"/>
            <line num="371" count="10" type="stmt"/>
            <line num="372" count="10" type="stmt"/>
            <line num="373" count="10" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(T) : String" num="380" count="42" type="method"/>
            <line num="381" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="MultiParameters()" num="392" count="1" type="method"/>
            <line complexity="1" visibility="package" signature="MultiParameters(A,B,C,D,E)" num="395" count="2" type="method"/>
            <line num="396" count="2" type="stmt"/>
            <line num="397" count="2" type="stmt"/>
            <line num="398" count="2" type="stmt"/>
            <line num="399" count="2" type="stmt"/>
            <line num="400" count="2" type="stmt"/>
            <line num="401" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="hashCode() : int" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line complexity="19" visibility="public" signature="equals(Object) : boolean" num="414" count="1" type="method"/>
            <line num="417" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="427" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="441" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="452" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepParameterizedTypeSerialization() : void" num="489" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="490" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepParameterizedTypeDeserialization() : void" num="496" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line num="499" count="1" type="stmt"/>
            <line num="500" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java" name="PrettyPrintingTest.java">
            <metrics coveredelements="47" coveredconditionals="3" complexity="12" loc="123" coveredmethods="10" methods="10" elements="49" classes="2" ncloc="84" statements="35" conditionals="4" coveredstatements="34"/>
            <class name="PrettyPrintingTest">
               <metrics coveredelements="47" complexity="12" methods="10" testruns="8" statements="35" coveredconditionals="3" coveredmethods="10" elements="49" testfailures="0" testduration="0.003" conditionals="4" coveredstatements="34" testpasses="8"/>
            </class>
            <class name="PrettyPrintingTest.ClassWithMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="45" count="8" type="method"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPrettyPrintList() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="15" num="54" type="cond"/>
            <line num="55" count="15" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArrayOfObjects() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArrayOfPrimitives() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArrayOfPrimitiveArrays() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintListOfPrimitiveArrays() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMap() : void" num="90" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyMapField() : void" num="99" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleArrays() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="print(String) : void" num="118" count="2" type="method"/>
            <line num="119" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/PrimitiveCharacterTest.java" name="PrimitiveCharacterTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="25" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="PrimitiveCharacterTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="2" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveCharacterAutoboxedSerialization() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveCharacterAutoboxedDeserialization() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java" name="PrimitiveTest.java">
            <metrics coveredelements="442" coveredconditionals="0" complexity="146" loc="826" coveredmethods="101" methods="101" elements="487" classes="2" ncloc="680" statements="386" conditionals="0" coveredstatements="341"/>
            <class name="PrimitiveTest">
               <metrics coveredelements="442" complexity="146" methods="101" testruns="99" statements="386" coveredconditionals="0" coveredmethods="101" elements="487" testfailures="0" testduration="0.023000000000000013" conditionals="0" coveredstatements="341" testpasses="99"/>
            </class>
            <class name="PrimitiveTest.ClassWithIntegerField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="42" count="99" type="method"/>
            <line num="44" count="99" type="stmt"/>
            <line num="45" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedSerialization() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedDeserialization() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteSerialization() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortSerialization() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteDeserialization() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedInASingleElementArraySerialization() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReallyLongValuesSerialization() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReallyLongValuesDeserialization() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedSerialization() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedDeserialization() : void" num="101" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedInASingleElementArraySerialization() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveBooleanAutoboxedSerialization() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleanDeserialization() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveBooleanAutoboxedInASingleElementArraySerialization() : void" num="129" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberSerialization() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberDeserialization() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberAsStringDeserialization() : void" num="161" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedSerialization() : void" num="166" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedDeserialization() : void" num="171" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedInASingleElementArraySerialization() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleAsStringRepresentationDeserialization() : void" num="186" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleNoFractAsStringRepresentationDeserialization() : void" num="196" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleArrayDeserialization() : void" num="206" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLargeDoubleDeserialization() : void" num="219" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalSerialization() : void" num="229" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalDeserialization() : void" num="235" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalInASingleElementArraySerialization() : void" num="241" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigDecimalSerialization() : void" num="252" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigDecimalDeserialization() : void" num="258" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalPreservePrecisionSerialization() : void" num="264" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalPreservePrecisionDeserialization() : void" num="272" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalAsStringRepresentationDeserialization() : void" num="280" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalNoFractAsStringRepresentationDeserialization() : void" num="287" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerSerialization() : void" num="294" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerDeserialization() : void" num="299" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerInASingleElementArraySerialization() : void" num="305" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigIntegerSerialization() : void" num="316" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigIntegerDeserialization() : void" num="322" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadValueForBigIntegerDeserialization() : void" num="328" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoreSpecificSerialization() : void" num="335" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="extractElementFromArray(String) : String" num="345" count="4" type="method"/>
            <line num="346" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDoubleNaNSerializationNotSupportedByDefault() : void" num="349" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleNaNSerialization() : void" num="363" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleNaNDeserialization() : void" num="370" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFloatNaNSerializationNotSupportedByDefault() : void" num="375" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatNaNSerialization() : void" num="389" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatNaNDeserialization() : void" num="396" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBigDecimalNaNDeserializationNotSupported() : void" num="401" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDoubleInfinitySerializationNotSupportedByDefault() : void" num="409" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleInfinitySerialization() : void" num="423" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleInfinityDeserialization() : void" num="430" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFloatInfinitySerializationNotSupportedByDefault() : void" num="435" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatInfinitySerialization() : void" num="449" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatInfinityDeserialization() : void" num="456" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBigDecimalInfinityDeserializationNotSupported() : void" num="461" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testNegativeInfinitySerializationNotSupportedByDefault() : void" num="469" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="476" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinitySerialization() : void" num="483" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinityDeserialization() : void" num="490" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testNegativeInfinityFloatSerializationNotSupportedByDefault() : void" num="495" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="496" count="1" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinityFloatSerialization() : void" num="509" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinityFloatDeserialization() : void" num="516" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="517" count="1" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBigDecimalNegativeInfinityDeserializationNotSupported() : void" num="521" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongAsStringSerialization() : void" num="529" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongAsStringDeserialization() : void" num="539" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="545" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQuotedStringSerializationAndDeserialization() : void" num="548" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="549" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnquotedStringDeserializationFails() : void" num="557" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="558" count="1" type="stmt"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="1" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHtmlCharacterSerialization() : void" num="567" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="568" count="1" type="stmt"/>
            <line num="569" count="1" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
            <line num="574" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializePrimitiveWrapperAsObjectField() : void" num="577" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="580" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveClassLiteral() : void" num="587" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="588" count="1" type="stmt"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsLongPrimitive() : void" num="593" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="594" count="1" type="stmt"/>
            <line num="595" count="1" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsLongWrapper() : void" num="600" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="601" count="1" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsInt() : void" num="607" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsInteger() : void" num="614" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="615" count="1" type="stmt"/>
            <line num="616" count="1" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsShortPrimitive() : void" num="621" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="622" count="1" type="stmt"/>
            <line num="623" count="1" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsShortWrapper() : void" num="628" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="629" count="1" type="stmt"/>
            <line num="630" count="1" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsDoublePrimitive() : void" num="635" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="636" count="1" type="stmt"/>
            <line num="637" count="1" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsDoubleWrapper() : void" num="642" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="643" count="1" type="stmt"/>
            <line num="644" count="1" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsFloatPrimitive() : void" num="649" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="650" count="1" type="stmt"/>
            <line num="651" count="1" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsFloatWrapper() : void" num="656" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="657" count="1" type="stmt"/>
            <line num="658" count="1" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsBytePrimitive() : void" num="663" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="664" count="1" type="stmt"/>
            <line num="665" count="1" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsByteWrapper() : void" num="670" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="671" count="1" type="stmt"/>
            <line num="672" count="1" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsBooleanPrimitive() : void" num="677" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="678" count="1" type="stmt"/>
            <line num="679" count="1" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsBooleanWrapper() : void" num="684" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="685" count="1" type="stmt"/>
            <line num="686" count="1" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsBigDecimal() : void" num="691" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="692" count="1" type="stmt"/>
            <line num="693" count="1" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsBigDecimal() : void" num="698" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="699" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsBigInteger() : void" num="705" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="706" count="1" type="stmt"/>
            <line num="707" count="1" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsBigInteger() : void" num="712" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="713" count="1" type="stmt"/>
            <line num="714" count="1" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonArrayAsNumber() : void" num="719" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="720" count="1" type="stmt"/>
            <line num="721" count="1" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializeJsonObjectAsNumber() : void" num="726" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="727" count="1" type="stmt"/>
            <line num="728" count="1" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializingDecimalPointValueZeroSucceeds() : void" num="733" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="734" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testDeserializingNonZeroDecimalPointValuesAsIntegerFails() : void" num="737" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="738" count="1" type="stmt"/>
            <line num="739" count="1" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="743" count="1" type="stmt"/>
            <line num="744" count="1" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="1" type="stmt"/>
            <line num="749" count="1" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="753" count="1" type="stmt"/>
            <line num="754" count="1" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializingBigDecimalAsIntegerFails() : void" num="760" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="761" count="1" type="stmt"/>
            <line num="762" count="1" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializingBigIntegerAsInteger() : void" num="768" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="769" count="1" type="stmt"/>
            <line num="770" count="1" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializingBigIntegerAsLong() : void" num="776" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="777" count="1" type="stmt"/>
            <line num="778" count="1" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValueVeryCloseToZeroIsZero() : void" num="784" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="785" count="1" type="stmt"/>
            <line num="786" count="1" type="stmt"/>
            <line num="787" count="1" type="stmt"/>
            <line num="788" count="1" type="stmt"/>
            <line num="789" count="1" type="stmt"/>
            <line num="790" count="1" type="stmt"/>
            <line num="791" count="1" type="stmt"/>
            <line num="792" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializingBigDecimalAsFloat() : void" num="795" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="796" count="1" type="stmt"/>
            <line num="797" count="1" type="stmt"/>
            <line num="798" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializingBigDecimalAsDouble() : void" num="801" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="802" count="1" type="stmt"/>
            <line num="803" count="1" type="stmt"/>
            <line num="804" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeserializingBigDecimalAsBigIntegerFails() : void" num="807" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="808" count="1" type="stmt"/>
            <line num="809" count="1" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializingBigIntegerAsBigDecimal() : void" num="815" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="816" count="1" type="stmt"/>
            <line num="818" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsAsBooleans() : void" num="821" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="822" count="1" type="stmt"/>
            <line num="823" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java" name="PrintFormattingTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="5" loc="84" coveredmethods="5" methods="5" elements="29" classes="1" ncloc="51" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="PrintFormattingTest">
               <metrics coveredelements="29" complexity="5" methods="5" testruns="3" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="24" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompactFormattingLeavesNoWhiteSpace() : void" num="48" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectWithNullValues() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectWithNullValuesSerialized() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertContainsNoWhiteSpace(String) : void" num="79" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="106" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java" name="RawSerializationTest.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="8" loc="101" coveredmethods="8" methods="8" elements="36" classes="3" ncloc="62" statements="28" conditionals="0" coveredstatements="28"/>
            <class name="RawSerializationTest">
               <metrics coveredelements="32" complexity="6" methods="6" testruns="5" statements="26" coveredconditionals="0" coveredmethods="6" elements="32" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="26" testpasses="5"/>
            </class>
            <class name="RawSerializationTest.Foo">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RawSerializationTest.Bar">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfPrimitives() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfObjects() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedObject() : void" num="53" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTwoLevelParameterizedObject() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testThreeLevelParameterizedObject() : void" num="75" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Foo(int)" num="89" count="5" type="method"/>
            <line num="90" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="Bar(T)" num="97" count="6" type="method"/>
            <line num="98" count="6" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ReadersWritersTest.java" name="ReadersWritersTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="13" loc="135" coveredmethods="11" methods="11" elements="64" classes="1" ncloc="99" statements="53" conditionals="0" coveredstatements="51"/>
            <class name="ReadersWritersTest">
               <metrics coveredelements="62" complexity="13" methods="11" testruns="10" statements="53" coveredconditionals="0" coveredmethods="11" elements="64" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="51" testpasses="10"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="45" count="10" type="method"/>
            <line num="47" count="10" type="stmt"/>
            <line num="48" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriterForSerialization() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReaderForDeserialization() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectSerializationWithWriter() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectDeserializationWithReader() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectSerializationWithWriterAndSerializeNulls() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteTwoStrings() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteTwoObjects() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTypeMismatchThrowsJsonSyntaxExceptionForStrings() : void" num="120" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTypeMismatchThrowsJsonSyntaxExceptionForReaders() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ReusedTypeVariablesFullyResolveTest.java" name="ReusedTypeVariablesFullyResolveTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="12" classes="5" ncloc="38" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="ReusedTypeVariablesFullyResolveTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="1" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <class name="ReusedTypeVariablesFullyResolveTest.TestEnum">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ReusedTypeVariablesFullyResolveTest.TestEnumSetCollection">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ReusedTypeVariablesFullyResolveTest.SetCollection">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ReusedTypeVariablesFullyResolveTest.BaseCollection">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenericsPreservation() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java" name="RuntimeTypeAdapterFactoryFunctionalTest.java">
            <metrics coveredelements="55" coveredconditionals="6" complexity="24" loc="205" coveredmethods="9" methods="13" elements="91" classes="7" ncloc="139" statements="62" conditionals="16" coveredstatements="40"/>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest.Shape">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest.Shape.JsonAdapterFactory">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest.ShapeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest.Circle">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest.Square">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RuntimeTypeAdapterFactoryFunctionalTest.RuntimeTypeAdapterFactory">
               <metrics coveredelements="33" coveredconditionals="6" complexity="19" coveredmethods="4" methods="8" elements="69" statements="45" conditionals="16" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="testSubclassesAutomaticallySerialized() : void" num="48" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Shape(ShapeType)" num="64" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonAdapterFactory()" num="66" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Circle(int)" num="80" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Square(int)" num="85" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="3" visibility="protected" signature="RuntimeTypeAdapterFactory(Class&lt;?&gt;,String)" num="95" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Class&lt;T&gt;,String) : RuntimeTypeAdapterFactory&lt;T&gt;" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Class&lt;T&gt;) : RuntimeTypeAdapterFactory&lt;T&gt;" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="registerSubtype(Class&lt;? extends T&gt;,String) : RuntimeTypeAdapterFactory&lt;T&gt;" num="126" count="2" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="registerSubtype(Class&lt;? extends T&gt;) : RuntimeTypeAdapterFactory&lt;T&gt;" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Gson,TypeToken&lt;R&gt;) : TypeAdapter&lt;R&gt;" num="149" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="read(JsonReader) : R" num="165" count="2" type="method"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(JsonWriter,R) : void" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/SecurityTest.java" name="SecurityTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="6" loc="86" coveredmethods="6" methods="6" elements="27" classes="1" ncloc="43" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="SecurityTest">
               <metrics coveredelements="27" complexity="6" methods="6" testruns="5" statements="21" coveredconditionals="0" coveredmethods="6" elements="27" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="21" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="38" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonExecutableJsonSerialization() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonExecutableJsonDeserialization() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonWithNonExectuableTokenSerialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonWithNonExectuableTokenWithRegularGsonDeserialization() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java" name="SerializedNameTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="4" loc="54" coveredmethods="4" methods="4" elements="13" classes="2" ncloc="28" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="SerializedNameTest">
               <metrics coveredelements="10" complexity="3" methods="3" testruns="3" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="7" testpasses="3"/>
            </class>
            <class name="SerializedNameTest.MyClass">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testFirstNameIsChosenForSerialization() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleNamesDeserializedCorrectly() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleNamesInTheSameString() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="MyClass(String,String)" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java" name="StreamingTypeAdaptersTest.java">
            <metrics coveredelements="117" coveredconditionals="0" complexity="28" loc="244" coveredmethods="25" methods="26" elements="121" classes="4" ncloc="202" statements="95" conditionals="0" coveredstatements="92"/>
            <class name="StreamingTypeAdaptersTest">
               <metrics coveredelements="110" complexity="24" methods="22" testruns="17" statements="90" coveredconditionals="0" coveredmethods="22" elements="112" testfailures="0" testduration="0.015000000000000005" conditionals="0" coveredstatements="88" testpasses="17"/>
            </class>
            <class name="StreamingTypeAdaptersTest.Truck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StreamingTypeAdaptersTest.Person">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="StreamingTypeAdaptersTest.Node">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSerialize() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserialize() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeNullField() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializeNullField() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeNullObject() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializeNullObject() : void" num="81" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeWithCustomTypeAdapter() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializeWithCustomTypeAdapter() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="usePersonNameAdapter() : void" num="100" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Person" num="102" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Person) : void" num="106" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeMap() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializeMap() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerialize1dArray() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserialize1dArray() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerialize2dArray() : void" num="139" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserialize2dArray() : void" num="145" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testNullSafe() : void" num="152" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Person" num="154" count="2" type="method"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Person) : void" num="158" count="2" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeRecursive() : void" num="187" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFromJsonTree() : void" num="198" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Person(String,int)" num="221" count="13" type="method"/>
            <line num="222" count="13" type="stmt"/>
            <line num="223" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="226" count="5" type="method"/>
            <line num="227" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="231" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Node(String)" num="240" count="3" type="method"/>
            <line num="241" count="3" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/StringTest.java" name="StringTest.java">
            <metrics coveredelements="79" coveredconditionals="0" complexity="19" loc="140" coveredmethods="19" methods="19" elements="79" classes="1" ncloc="105" statements="60" conditionals="0" coveredstatements="60"/>
            <class name="StringTest">
               <metrics coveredelements="79" complexity="19" methods="19" testruns="18" statements="60" coveredconditionals="0" coveredmethods="19" elements="79" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="60" testpasses="18"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="16" count="18" type="method"/>
            <line num="18" count="18" type="stmt"/>
            <line num="19" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueSerialization() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueDeserialization() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleQuoteInStringSerialization() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlNInStringSerialization() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlNInStringDeserialization() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlRInStringSerialization() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlRInStringDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedBackslashInStringSerialization() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedBackslashInStringDeserialization() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleQuoteInStringDeserialization() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingQuotesInStringSerialization() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingQuotesInStringDeserialization() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueAsSingleElementArraySerialization() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringWithEscapedSlashDeserialization() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssignmentCharSerialization() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssignmentCharDeserialization() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavascriptKeywordsInStringSerialization() : void" num="129" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavascriptKeywordsInStringDeserialization() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java" name="ThrowableFunctionalTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="5" loc="65" coveredmethods="5" methods="5" elements="33" classes="2" ncloc="50" statements="28" conditionals="0" coveredstatements="28"/>
            <class name="ThrowableFunctionalTest">
               <metrics coveredelements="33" complexity="5" methods="5" testruns="5" statements="28" coveredconditionals="0" coveredmethods="5" elements="33" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="28" testpasses="5"/>
            </class>
            <class name="ThrowableFunctionalTest.MyException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testExceptionWithoutCause() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExceptionWithCause() : void" num="24" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializedNameOnExceptionFields() : void" num="35" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testErrorWithoutCause() : void" num="41" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testErrornWithCause() : void" num="50" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java" name="TreeTypeAdaptersTest.java">
            <metrics coveredelements="50" coveredconditionals="1" complexity="17" loc="179" coveredmethods="16" methods="16" elements="52" classes="7" ncloc="136" statements="34" conditionals="2" coveredstatements="33"/>
            <class name="TreeTypeAdaptersTest">
               <metrics coveredelements="16" complexity="4" methods="4" testruns="2" statements="12" coveredconditionals="0" coveredmethods="4" elements="16" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <class name="TreeTypeAdaptersTest.Id">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TreeTypeAdaptersTest.IdTreeTypeAdapter">
               <metrics coveredelements="8" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <class name="TreeTypeAdaptersTest.Student">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TreeTypeAdaptersTest.Course">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="TreeTypeAdaptersTest.Assignment">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TreeTypeAdaptersTest.HistoryCourse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="54" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeId() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializeId() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="Id(String,Type)" num="84" count="6" type="method"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="88" count="9" type="method"/>
            <line num="89" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Id&lt;?&gt;" num="96" count="3" type="method"/>
            <line num="100" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="107" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Id&lt;?&gt;,Type,JsonSerializationContext) : JsonElement" num="110" count="3" type="method"/>
            <line num="112" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="Student()" num="121" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="Student(Id&lt;Student&gt;,String)" num="124" count="4" type="method"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="Course()" num="137" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Course(Id&lt;Course&lt;T&gt;&gt;,int,Assignment&lt;T&gt;,List&lt;Student&gt;)" num="141" count="3" type="method"/>
            <line num="143" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getId() : Id&lt;Course&lt;T&gt;&gt;" num="148" count="1" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="getStudents() : List&lt;Student&gt;" num="151" count="2" type="method"/>
            <line num="152" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="Assignment()" num="161" count="1" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Assignment(Id&lt;Assignment&lt;T&gt;&gt;,T)" num="164" count="3" type="method"/>
            <line num="165" count="3" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="createList(T) : List&lt;T&gt;" num="175" count="2" type="method"/>
            <line num="177" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java" name="TypeAdapterPrecedenceTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="16" loc="151" coveredmethods="16" methods="16" elements="48" classes="2" ncloc="122" statements="32" conditionals="0" coveredstatements="32"/>
            <class name="TypeAdapterPrecedenceTest">
               <metrics coveredelements="46" complexity="15" methods="15" testruns="8" statements="31" coveredconditionals="0" coveredmethods="15" elements="46" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="31" testpasses="8"/>
            </class>
            <class name="TypeAdapterPrecedenceTest.Foo">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testNonstreamingFollowedByNonstreaming() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStreamingFollowedByStreaming() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStreamingFollowedByNonstreaming() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStreamingHierarchicalFollowedByNonstreaming() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStreamingFollowedByNonstreamingHierarchical() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStreamingHierarchicalFollowedByNonstreamingHierarchical() : void" num="95" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonstreamingHierarchicalFollowedByNonstreaming() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="Foo(String)" num="118" count="16" type="method"/>
            <line num="119" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="newSerializer(String) : JsonSerializer&lt;Foo&gt;" num="123" count="9" type="method"/>
            <line num="124" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Foo,Type,JsonSerializationContext) : JsonElement" num="125" count="4" type="method"/>
            <line num="127" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="newDeserializer(String) : JsonDeserializer&lt;Foo&gt;" num="132" count="9" type="method"/>
            <line num="133" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Foo" num="134" count="4" type="method"/>
            <line num="136" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="newTypeAdapter(String) : TypeAdapter&lt;Foo&gt;" num="141" count="7" type="method"/>
            <line num="142" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(JsonReader) : Foo" num="143" count="4" type="method"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(JsonWriter,Foo) : void" num="146" count="4" type="method"/>
            <line num="147" count="4" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java" name="TypeHierarchyAdapterTest.java">
            <metrics coveredelements="82" coveredconditionals="12" complexity="15" loc="221" coveredmethods="9" methods="9" elements="82" classes="7" ncloc="174" statements="61" conditionals="12" coveredstatements="61"/>
            <class name="TypeHierarchyAdapterTest">
               <metrics coveredelements="34" complexity="3" methods="3" testruns="3" statements="31" coveredconditionals="0" coveredmethods="3" elements="34" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="31" testpasses="3"/>
            </class>
            <class name="TypeHierarchyAdapterTest.ManagerAdapter">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TypeHierarchyAdapterTest.EmployeeAdapter">
               <metrics coveredelements="38" coveredconditionals="12" complexity="8" coveredmethods="2" methods="2" elements="38" statements="24" conditionals="12" coveredstatements="24"/>
            </class>
            <class name="TypeHierarchyAdapterTest.Employee">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TypeHierarchyAdapterTest.Manager">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TypeHierarchyAdapterTest.CEO">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TypeHierarchyAdapterTest.Company">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testTypeHierarchy() : void" num="37" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisterSuperTypeFirst() : void" num="119" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegisterSubTypeFirstAllowed() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Manager" num="143" count="1" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Manager,Type,JsonSerializationContext) : JsonElement" num="148" count="1" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="serialize(Employee,Type,JsonSerializationContext) : JsonElement" num="154" count="16" type="method"/>
            <line num="156" count="16" type="stmt"/>
            <line num="157" count="16" type="stmt"/>
            <line num="158" count="16" type="stmt"/>
            <line num="159" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="159" type="cond"/>
            <line num="160" count="4" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="161" type="cond"/>
            <line num="162" count="2" type="stmt"/>
            <line num="165" count="16" type="stmt"/>
            <line complexity="5" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Employee" num="168" count="8" type="method"/>
            <line num="170" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line num="175" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="175" type="cond"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="181" count="8" type="stmt"/>
            <line num="182" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="182" type="cond"/>
            <line num="183" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="183" type="cond"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="189" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="189" type="cond"/>
            <line num="190" count="6" type="stmt"/>
            <line num="192" count="8" type="stmt"/>
            <line num="193" count="8" type="stmt"/>
            <line num="194" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="Employee(String,long)" num="202" count="6" type="method"/>
            <line num="203" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="Employee()" num="207" count="12" type="method"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java" name="TypeVariableTest.java">
            <metrics coveredelements="52" coveredconditionals="2" complexity="15" loc="140" coveredmethods="13" methods="13" elements="56" classes="5" ncloc="96" statements="39" conditionals="4" coveredstatements="37"/>
            <class name="TypeVariableTest">
               <metrics coveredelements="26" complexity="3" methods="3" testruns="3" statements="23" coveredconditionals="0" coveredmethods="3" elements="26" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="23" testpasses="3"/>
            </class>
            <class name="TypeVariableTest.Blue">
               <metrics coveredelements="9" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <class name="TypeVariableTest.Red">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TypeVariableTest.Foo">
               <metrics coveredelements="10" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="6"/>
            </class>
            <class name="TypeVariableTest.Bar">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testAdvancedTypeVariables() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeVariablesViaTypeParameter() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicTypeVariables() : void" num="64" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Blue()" num="74" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Blue(boolean)" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Red()" num="96" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="Red(S)" num="98" count="5" type="method"/>
            <line num="99" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="Foo()" num="108" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="Foo(S,T,Boolean)" num="110" count="3" type="method"/>
            <line num="111" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="117" count="2" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bar()" num="132" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bar(String,Integer,boolean)" num="136" count="2" type="method"/>
            <line num="137" count="2" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java" name="UncategorizedTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="14" loc="134" coveredmethods="10" methods="10" elements="50" classes="6" ncloc="89" statements="40" conditionals="0" coveredstatements="37"/>
            <class name="UncategorizedTest">
               <metrics coveredelements="35" complexity="9" methods="7" testruns="6" statements="30" coveredconditionals="0" coveredmethods="7" elements="37" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="28" testpasses="6"/>
            </class>
            <class name="UncategorizedTest.OperationType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UncategorizedTest.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UncategorizedTest.Derived1">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UncategorizedTest.Derived2">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UncategorizedTest.BaseTypeAdapter">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="1" methods="1" elements="9" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="44" count="6" type="method"/>
            <line num="46" count="6" type="stmt"/>
            <line num="47" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidJsonDeserializationFails() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectEqualButNotSameSerialization() : void" num="62" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFieldsAreNotSerialized() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonInstanceReusableForSerializationAndDeserialization() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReturningDerivedClassesDuringDeserialization() : void" num="87" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrailingWhitespace() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Derived1()" num="115" count="1" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Derived2()" num="118" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="121" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/functional/VersioningTest.java" name="VersioningTest.java">
            <metrics coveredelements="77" coveredconditionals="0" complexity="11" loc="170" coveredmethods="11" methods="11" elements="77" classes="5" ncloc="121" statements="66" conditionals="0" coveredstatements="66"/>
            <class name="VersioningTest">
               <metrics coveredelements="77" complexity="11" methods="11" testruns="10" statements="66" coveredconditionals="0" coveredmethods="11" elements="77" testfailures="0" testduration="0.011000000000000003" conditionals="0" coveredstatements="66" testpasses="10"/>
            </class>
            <class name="VersioningTest.Version1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VersioningTest.Version1_1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VersioningTest.Version1_2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VersioningTest.SinceUntilMixing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="40" count="10" type="method"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedUntilSerialization() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedUntilDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedClassesSerialization() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedClassesDeserialization() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoreLaterVersionClassSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoreLaterVersionClassDeserialization() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonWithUnversionedClassesSerialization() : void" num="97" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonWithUnversionedClassesDeserialization() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonMixingSinceAndUntilSerialization() : void" num="115" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonMixingSinceAndUntilDeserialization() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.common">
         <metrics coveredelements="178" complexity="68" loc="473" methods="48" classes="23" statements="139" coveredconditionals="24" coveredmethods="39" elements="225" ncloc="362" files="2" conditionals="38" coveredstatements="115"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/common/MoreAsserts.java" name="MoreAsserts.java">
            <metrics coveredelements="12" coveredconditionals="2" complexity="3" loc="52" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="20" statements="9" conditionals="2" coveredstatements="8"/>
            <class name="MoreAsserts">
               <metrics coveredelements="12" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="13" statements="9" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="assertContains(Collection&lt;T&gt;,T) : void" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="38" type="cond"/>
            <line num="39" count="4" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEqualsAndHashCode(Object,Object) : void" num="45" count="24" type="method"/>
            <line num="46" count="24" type="stmt"/>
            <line num="47" count="24" type="stmt"/>
            <line num="48" count="24" type="stmt"/>
            <line num="49" count="24" type="stmt"/>
            <line num="50" count="24" type="stmt"/>
         </file>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/common/TestTypes.java" name="TestTypes.java">
            <metrics coveredelements="166" coveredconditionals="22" complexity="65" loc="421" coveredmethods="37" methods="46" elements="212" classes="22" ncloc="342" statements="130" conditionals="36" coveredstatements="107"/>
            <class name="TestTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestTypes.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestTypes.Sub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestTypes.ClassWithBaseField">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.ClassWithBaseArrayField">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.ClassWithBaseCollectionField">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.BaseSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTypes.SubSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTypes.StringWrapper">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.BagOfPrimitives">
               <metrics coveredelements="39" coveredconditionals="9" complexity="18" coveredmethods="5" methods="7" elements="70" statements="41" conditionals="22" coveredstatements="25"/>
            </class>
            <class name="TestTypes.BagOfPrimitiveWrappers">
               <metrics coveredelements="12" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <class name="TestTypes.PrimitiveArray">
               <metrics coveredelements="17" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <class name="TestTypes.ClassWithNoFields">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.Nested">
               <metrics coveredelements="23" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="24" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <class name="TestTypes.ClassWithTransientFields">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="TestTypes.ClassWithCustomTypeConverter">
               <metrics coveredelements="7" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TestTypes.ArrayOfObjects">
               <metrics coveredelements="18" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="18" statements="12" conditionals="4" coveredstatements="12"/>
            </class>
            <class name="TestTypes.ClassOverridingEquals">
               <metrics coveredelements="6" coveredconditionals="2" complexity="4" coveredmethods="1" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="TestTypes.ClassWithArray">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestTypes.ClassWithObjects">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestTypes.ClassWithSerializedNameFields">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TestTypes.CrazyLongTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ClassWithBaseField(Base)" num="57" count="4" type="method"/>
            <line num="58" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithBaseArrayField(Base[])" num="65" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithBaseCollectionField(Collection&lt;Base&gt;)" num="73" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="80" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Sub,Type,JsonSerializationContext) : JsonElement" num="89" count="3" type="method"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="StringWrapper(String)" num="100" count="5" type="method"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitives()" num="112" count="84" type="method"/>
            <line num="113" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitives(long,int,boolean,String)" num="116" count="150" type="method"/>
            <line num="117" count="150" type="stmt"/>
            <line num="118" count="150" type="stmt"/>
            <line num="119" count="150" type="stmt"/>
            <line num="120" count="150" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntValue() : int" num="123" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="127" count="54" type="method"/>
            <line num="128" count="54" type="stmt"/>
            <line num="129" count="54" type="stmt"/>
            <line num="130" count="54" type="stmt"/>
            <line num="131" count="54" type="stmt"/>
            <line num="132" count="54" type="stmt"/>
            <line num="133" count="54" type="stmt"/>
            <line num="134" count="54" type="stmt"/>
            <line num="135" count="54" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="149" count="12" type="method"/>
            <line num="151" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="12" type="stmt"/>
            <line num="158" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="158" type="cond"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitiveWrappers(Long,Integer,Boolean)" num="184" count="2" type="method"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="190" count="3" type="method"/>
            <line num="191" count="3" type="stmt"/>
            <line num="192" count="3" type="stmt"/>
            <line num="193" count="3" type="stmt"/>
            <line num="194" count="3" type="stmt"/>
            <line num="195" count="3" type="stmt"/>
            <line num="196" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="PrimitiveArray()" num="204" count="2" type="method"/>
            <line num="205" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="PrimitiveArray(long[])" num="208" count="3" type="method"/>
            <line num="209" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="212" count="2" type="method"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="13" type="stmt"/>
            <line falsecount="2" truecount="11" num="218" type="cond"/>
            <line num="219" count="11" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="223" count="13" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="233" count="1" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Nested()" num="243" count="4" type="method"/>
            <line num="244" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="Nested(BagOfPrimitives,BagOfPrimitives)" num="247" count="7" type="method"/>
            <line num="248" count="7" type="stmt"/>
            <line num="249" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="252" count="6" type="method"/>
            <line num="253" count="6" type="stmt"/>
            <line num="254" count="6" type="stmt"/>
            <line num="255" count="6" type="stmt"/>
            <line num="256" count="6" type="stmt"/>
            <line num="257" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="appendFields(StringBuilder) : void" num="260" count="6" type="method"/>
            <line num="261" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="261" type="cond"/>
            <line num="262" count="6" type="stmt"/>
            <line num="264" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="264" type="cond"/>
            <line num="265" count="4" type="stmt"/>
            <line num="267" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="267" type="cond"/>
            <line num="268" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithTransientFields()" num="278" count="3" type="method"/>
            <line num="279" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithTransientFields(long)" num="282" count="4" type="method"/>
            <line num="283" count="4" type="stmt"/>
            <line num="284" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="287" count="2" type="method"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithCustomTypeConverter()" num="300" count="3" type="method"/>
            <line num="301" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithCustomTypeConverter(int)" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithCustomTypeConverter(BagOfPrimitives,int)" num="308" count="4" type="method"/>
            <line num="309" count="4" type="stmt"/>
            <line num="310" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBag() : BagOfPrimitives" num="313" count="2" type="method"/>
            <line num="314" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : int" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ArrayOfObjects()" num="328" count="4" type="method"/>
            <line num="329" count="4" type="stmt"/>
            <line num="330" count="4" type="stmt"/>
            <line falsecount="4" truecount="12" num="330" type="cond"/>
            <line num="331" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="334" count="3" type="method"/>
            <line num="335" count="3" type="stmt"/>
            <line num="336" count="3" type="stmt"/>
            <line num="337" count="3" type="stmt"/>
            <line num="338" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="338" type="cond"/>
            <line num="339" count="3" type="stmt"/>
            <line num="341" count="6" type="stmt"/>
            <line num="343" count="9" type="stmt"/>
            <line num="345" count="3" type="stmt"/>
            <line num="346" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="353" count="2" type="method"/>
            <line num="354" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="354" type="cond"/>
            <line num="355" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithArray()" num="372" count="1" type="method"/>
            <line num="373" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithArray(Object[])" num="376" count="1" type="method"/>
            <line num="377" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithObjects()" num="383" count="4" type="method"/>
            <line num="384" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithObjects(BagOfPrimitives)" num="386" count="6" type="method"/>
            <line num="387" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithSerializedNameFields()" num="395" count="1" type="method"/>
            <line num="396" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithSerializedNameFields(int,int)" num="398" count="3" type="method"/>
            <line num="399" count="3" type="stmt"/>
            <line num="400" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="403" count="2" type="method"/>
            <line num="404" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long,Type,JsonSerializationContext) : JsonElement" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Long" num="415" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.metrics">
         <metrics coveredelements="4" complexity="44" loc="346" methods="27" classes="7" statements="135" coveredconditionals="0" coveredmethods="2" elements="194" ncloc="261" files="1" conditionals="32" coveredstatements="2"/>
         <file path="/tmp/v1/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java" name="PerformanceTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="44" loc="346" coveredmethods="2" methods="27" elements="194" classes="7" ncloc="261" statements="135" conditionals="32" coveredstatements="2"/>
            <class name="PerformanceTest">
               <metrics coveredelements="4" complexity="32" methods="15" testruns="1" statements="121" coveredconditionals="0" coveredmethods="2" elements="168" testfailures="0" testduration="0.0" conditionals="32" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="PerformanceTest.ExceptionHolder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.CollectionEntry">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithListOfObjects">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithExposedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDummy() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="2" visibility="public" signature="disabled_testStringDeserialization() : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseLongJson(String) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ExceptionHolder()" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptionHolder(String,String)" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="CollectionEntry()" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="CollectionEntry(String,String)" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testLargeCollectionSerialization() : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disabled_testLargeCollectionDeserialization() : void" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testByteArraySerialization() : void" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disable_testByteArrayDeserialization() : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disabled_testSerializeClasses() : void" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testDeserializeClasses() : void" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disable_testLargeObjectSerializationAndDeserialization() : void" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disabled_testSerializeExposedClasses() : void" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testDeserializeExposedClasses() : void" num="255" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testLargeGsonMapRoundTrip() : void" num="267" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="buildJsonForClassWithList() : String" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithList()" num="302" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithList(String)" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithField()" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithField(String)" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithListOfObjects()" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithListOfObjects(String)" num="330" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithExposedField()" num="339" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithExposedField(String)" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>