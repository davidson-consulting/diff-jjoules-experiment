{
    "2880": {
        "size": 11,
        "decision": "pass",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:04.596776518 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:03.760771835 +0200\n@@ -35,7 +35,6 @@\n import org.apache.commons.configuration2.PropertiesConfiguration;\n import org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder;\n import org.apache.commons.configuration2.builder.fluent.Parameters;\n-import org.apache.commons.configuration2.builder.fluent.PropertiesBuilderParameters;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.concurrent.BasicThreadFactory;\n@@ -56,7 +55,7 @@\n /**\n  * Default implementation of {@link JobStatusStorage}.\n  *\n- * @version $Id: 790af08fa2c9b472f55c762c77e24e6f756b1ac3 $\n+ * @version $Id: 25fe4d161a0d228b1feac6f98bfa9739910a983d $\n  * @since 6.1M2\n  */\n @Component\n@@ -145,14 +144,9 @@\n             File folder = this.configuration.getStorage();\n             File file = new File(folder, INDEX_FILE);\n \n-            PropertiesBuilderParameters parameters = new Parameters().properties();\n-            if (file.exists()) {\n-                new Parameters().properties().setFile(file);\n-            }\n-\n             FileBasedConfigurationBuilder<PropertiesConfiguration> builder =\n-                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class)\n-                    .configure(parameters);\n+                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class, null, true)\n+                    .configure(new Parameters().properties().setFile(file));\n             PropertiesConfiguration properties = builder.getConfiguration();\n             int version = properties.getInt(INDEX_FILE_VERSION, 0);\n             if (VERSION > version) {\n@@ -160,7 +154,7 @@\n \n                 // Update version\n                 properties.setProperty(INDEX_FILE_VERSION, VERSION);\n-                builder.getFileHandler().save(file);\n+                builder.save();\n             }\n         } catch (Exception e) {\n             this.logger.error(\"Failed to load jobs\", e);\n",
        "sha1": "cfee272",
        "sha2": "5f85426",
        "config": "STUDENTS_T_TEST_CODE_COVERAGE_0.20"
    },
    "66": {
        "size": 6,
        "decision": "break",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java /tmp/v2/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java\t2022-06-06 22:30:58.992745125 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java\t2022-06-06 22:30:58.488742301 +0200\n@@ -59,7 +59,7 @@\n  * defined in the component's configuration. Note that the {@link #initialize} method has to be executed before any\n  * other method can be called.\n  *\n- * @version $Id: b44623009119b703a7921086cf6987d1ab0556b3 $\n+ * @version $Id: 5f5d7a098de40fe224872aeeb3d22897075ffddd $\n  */\n @Component\n @InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\n@@ -285,7 +285,8 @@\n             // Someone explicitly stopped the script with something like #stop. No reason to make a scene.\n             return true;\n         } catch (Exception e) {\n-            throw new XWikiVelocityException(\"Failed to evaluate content with namespace [\" + namespace + \"]\", e);\n+            throw new XWikiVelocityException(\n+                String.format(\"Failed to evaluate content with namespace [%s]\", namespace), e);\n         } finally {\n             if (StringUtils.isNotEmpty(namespace)) {\n                 stoppedUsingMacroNamespace(namespace);\n@@ -307,7 +308,7 @@\n             Map introspectionCache = (Map) FieldUtils.readField(context, \"introspectionCache\", true);\n             introspectionCache.clear();\n         } catch (IllegalAccessException e) {\n-            this.logger.warn(\"Failed to clean the Velocity context introspection cache: \",\n+            this.logger.warn(\"Failed to clean the Velocity context introspection cache. Root error: [{}]\",\n                 ExceptionUtils.getRootCauseMessage(e));\n         }\n     }\n",
        "sha1": "d4ff221",
        "sha2": "5daa9a0",
        "config": "STUDENTS_T_TEST_CODE_COVERAGE_0.20"
    }
}