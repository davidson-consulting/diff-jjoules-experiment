{
    "2880": {
        "size": 11,
        "decision": "pass",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:47.049014334 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:46.109009068 +0200\n@@ -35,7 +35,6 @@\n import org.apache.commons.configuration2.PropertiesConfiguration;\n import org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder;\n import org.apache.commons.configuration2.builder.fluent.Parameters;\n-import org.apache.commons.configuration2.builder.fluent.PropertiesBuilderParameters;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.concurrent.BasicThreadFactory;\n@@ -56,7 +55,7 @@\n /**\n  * Default implementation of {@link JobStatusStorage}.\n  *\n- * @version $Id: 790af08fa2c9b472f55c762c77e24e6f756b1ac3 $\n+ * @version $Id: 25fe4d161a0d228b1feac6f98bfa9739910a983d $\n  * @since 6.1M2\n  */\n @Component\n@@ -145,14 +144,9 @@\n             File folder = this.configuration.getStorage();\n             File file = new File(folder, INDEX_FILE);\n \n-            PropertiesBuilderParameters parameters = new Parameters().properties();\n-            if (file.exists()) {\n-                new Parameters().properties().setFile(file);\n-            }\n-\n             FileBasedConfigurationBuilder<PropertiesConfiguration> builder =\n-                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class)\n-                    .configure(parameters);\n+                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class, null, true)\n+                    .configure(new Parameters().properties().setFile(file));\n             PropertiesConfiguration properties = builder.getConfiguration();\n             int version = properties.getInt(INDEX_FILE_VERSION, 0);\n             if (VERSION > version) {\n@@ -160,7 +154,7 @@\n \n                 // Update version\n                 properties.setProperty(INDEX_FILE_VERSION, VERSION);\n-                builder.getFileHandler().save(file);\n+                builder.save();\n             }\n         } catch (Exception e) {\n             this.logger.error(\"Failed to load jobs\", e);\n",
        "sha1": "cfee272",
        "sha2": "5f85426"
    },
    "2637": {
        "size": 62,
        "decision": "break",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java /tmp/v2/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java\t2022-06-06 22:31:45.685006693 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/main/java/org/xwiki/diff/internal/DefaultDiffManager.java\t2022-06-06 22:31:45.713006850 +0200\n@@ -43,7 +43,7 @@\n /**\n  * Default implementation of {@link DiffManager}.\n  *\n- * @version $Id: 5aa69a10a3889029c833ca5c5e0d583a38f48b7a $\n+ * @version $Id: f9bad1fd623b5ae17fff7c3ff328fd875ce40a1f $\n  */\n @Component\n @Singleton\n@@ -127,13 +127,6 @@\n \n             if (patchCurrent.isEmpty()) {\n                 mergeResult.setMerged(next);\n-            } else if (isFullyModified(commonAncestor, patchCurrent)) {\n-                // If current is completely modified compared to the common ancestor we assume any change in next is\n-                // a conflict\n-                Delta<E> deltaNext = nextElement(patchNext);\n-                Delta<E> deltaCurrent = nextElement(patchCurrent);\n-                logConflict(mergeResult, deltaCurrent, deltaNext);\n-                mergeResult.setMerged(fallback(commonAncestor, next, current, configuration));\n             } else {\n                 merge(mergeResult, commonAncestor, patchNext, patchCurrent, configuration);\n             }\n@@ -142,28 +135,8 @@\n         return mergeResult;\n     }\n \n-    private <E> List<E> fallback(List<E> commonAncestor, List<E> next, List<E> current,\n-            MergeConfiguration<E> configuration)\n-    {\n-        Version fallbackVersion;\n-        if (configuration != null) {\n-            fallbackVersion = configuration.getFallbackOnConflict();\n-        } else {\n-            fallbackVersion = Version.CURRENT;\n-        }\n-\n-        switch (fallbackVersion) {\n-            case NEXT:\n-                return next;\n-            case PREVIOUS:\n-                return commonAncestor;\n-            default:\n-                return current;\n-        }\n-    }\n-\n     private <E> int fallback(List<E> commonAncestor, Delta<E> deltaNext, Delta<E> deltaCurrent, List<E> merged,\n-            int currentIndex, MergeConfiguration<E> configuration)\n+        int currentIndex, MergeConfiguration<E> configuration)\n     {\n         int newIndex = currentIndex;\n \n@@ -384,16 +357,4 @@\n     {\n         return delta != null && delta.getPrevious().getIndex() == index;\n     }\n-\n-    /**\n-     * Check if the content is completely different between the ancestor and the current version\n-     *\n-     * @param <E> the type of compared elements\n-     * @param commonAncestor previous version\n-     * @param patchCurrent patch to the current version\n-     * @return either or not the user has changed everything\n-     */\n-    private <E> boolean isFullyModified(List commonAncestor, Patch<E> patchCurrent) {\n-        return patchCurrent.size() == 1 && commonAncestor.size() == patchCurrent.get(0).getPrevious().size();\n-    }\n }\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java /tmp/v2/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java\t2022-06-06 22:31:45.685006693 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-diff/xwiki-commons-diff-api//src/test/java/org/xwiki/diff/internal/DefaultDiffManagerTest.java\t2022-06-06 22:31:45.713006850 +0200\n@@ -264,28 +264,28 @@\n         Assert.assertEquals(toCharacters(\"aijb\"), result.getMerged());\n \n         result =\n-            this.mocker.getComponentUnderTest().merge(toCharacters(\"d\"), toCharacters(\"ab d\"), toCharacters(\"abc d\"), null);\n+            this.mocker.getComponentUnderTest().merge(toCharacters(\"\"), toCharacters(\"ab\"), toCharacters(\"abc\"), null);\n \n         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());\n-        Assert.assertEquals(toCharacters(\"abc d\"), result.getMerged());\n+        Assert.assertEquals(toCharacters(\"abc\"), result.getMerged());\n \n         result =\n-            this.mocker.getComponentUnderTest().merge(toCharacters(\"d\"), toCharacters(\"abc d\"), toCharacters(\"ab d\"), null);\n+            this.mocker.getComponentUnderTest().merge(toCharacters(\"\"), toCharacters(\"abc\"), toCharacters(\"ab\"), null);\n \n         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());\n-        Assert.assertEquals(toCharacters(\"abc d\"), result.getMerged());\n+        Assert.assertEquals(toCharacters(\"abc\"), result.getMerged());\n \n         result =\n-            this.mocker.getComponentUnderTest().merge(toCharacters(\"d\"), toCharacters(\"bcd\"), toCharacters(\"abcd\"), null);\n+            this.mocker.getComponentUnderTest().merge(toCharacters(\"\"), toCharacters(\"bc\"), toCharacters(\"abc\"), null);\n \n         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());\n-        Assert.assertEquals(toCharacters(\"abcd\"), result.getMerged());\n+        Assert.assertEquals(toCharacters(\"abc\"), result.getMerged());\n \n         result =\n-            this.mocker.getComponentUnderTest().merge(toCharacters(\"d\"), toCharacters(\"abcd\"), toCharacters(\"bcd\"), null);\n+            this.mocker.getComponentUnderTest().merge(toCharacters(\"\"), toCharacters(\"abc\"), toCharacters(\"bc\"), null);\n \n         Assert.assertEquals(0, result.getLog().getLogs(LogLevel.ERROR).size());\n-        Assert.assertEquals(toCharacters(\"abcd\"), result.getMerged());\n+        Assert.assertEquals(toCharacters(\"abc\"), result.getMerged());\n \n         // Misc\n \n@@ -354,24 +354,4 @@\n         Assert.assertEquals(1, result.getLog().getLogs(LogLevel.ERROR).size());\n         Assert.assertEquals(toCharacters(\"b\"), result.getMerged());\n     }\n-\n-    @Test\n-    public void testMergeWhenUserHasChangedAllContent() throws Exception\n-    {\n-        MergeResult<String> result;\n-\n-        // Test 1: All content has changed between previous and current\n-        result = mocker.getComponentUnderTest().merge(Arrays.asList(\"Line 1\", \"Line 2\", \"Line 3\"),\n-                Arrays.asList(\"Line 1\", \"Line 2 modified\", \"Line 3\", \"Line 4 Added\"),\n-                Arrays.asList(\"New content\", \"That is completely different\"), null);\n-\n-        Assert.assertEquals(Arrays.asList(\"New content\", \"That is completely different\"), result.getMerged());\n-\n-        // Test 2: All content has been deleted between previous and current\n-        result = mocker.getComponentUnderTest().merge(Arrays.asList(\"Line 1\", \"Line 2\", \"Line 3\"),\n-                Arrays.asList(\"Line 1\", \"Line 2 modified\", \"Line 3\", \"Line 4 Added\"),\n-                Collections.emptyList(), null);\n-\n-        Assert.assertEquals(Collections.emptyList(), result.getMerged());\n-    }\n }\n",
        "sha1": "1b936ca",
        "sha2": "a0b25ca"
    }
}