{
    "2880": {
        "size": 11,
        "decision": "pass",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:21.944873701 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:21.020868526 +0200\n@@ -35,7 +35,6 @@\n import org.apache.commons.configuration2.PropertiesConfiguration;\n import org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder;\n import org.apache.commons.configuration2.builder.fluent.Parameters;\n-import org.apache.commons.configuration2.builder.fluent.PropertiesBuilderParameters;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.concurrent.BasicThreadFactory;\n@@ -56,7 +55,7 @@\n /**\n  * Default implementation of {@link JobStatusStorage}.\n  *\n- * @version $Id: 790af08fa2c9b472f55c762c77e24e6f756b1ac3 $\n+ * @version $Id: 25fe4d161a0d228b1feac6f98bfa9739910a983d $\n  * @since 6.1M2\n  */\n @Component\n@@ -145,14 +144,9 @@\n             File folder = this.configuration.getStorage();\n             File file = new File(folder, INDEX_FILE);\n \n-            PropertiesBuilderParameters parameters = new Parameters().properties();\n-            if (file.exists()) {\n-                new Parameters().properties().setFile(file);\n-            }\n-\n             FileBasedConfigurationBuilder<PropertiesConfiguration> builder =\n-                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class)\n-                    .configure(parameters);\n+                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class, null, true)\n+                    .configure(new Parameters().properties().setFile(file));\n             PropertiesConfiguration properties = builder.getConfiguration();\n             int version = properties.getInt(INDEX_FILE_VERSION, 0);\n             if (VERSION > version) {\n@@ -160,7 +154,7 @@\n \n                 // Update version\n                 properties.setProperty(INDEX_FILE_VERSION, VERSION);\n-                builder.getFileHandler().save(file);\n+                builder.save();\n             }\n         } catch (Exception e) {\n             this.logger.error(\"Failed to load jobs\", e);\n",
        "sha1": "cfee272",
        "sha2": "5f85426",
        "config": "STUDENTS_T_TEST_CODE_COVERAGE_0.80"
    },
    "254": {
        "size": 33,
        "decision": "break",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/internal/DefaultExtensionLicenseManager.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/internal/DefaultExtensionLicenseManager.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/internal/DefaultExtensionLicenseManager.java\t2022-06-06 22:31:17.080846453 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/internal/DefaultExtensionLicenseManager.java\t2022-06-06 22:31:14.864834039 +0200\n@@ -35,7 +35,7 @@\n \n import org.apache.commons.io.IOUtils;\n import org.reflections.Reflections;\n-import org.reflections.scanners.ResourcesScanner;\n+import org.reflections.scanners.Scanners;\n import org.reflections.util.ClasspathHelper;\n import org.reflections.util.ConfigurationBuilder;\n import org.reflections.util.FilterBuilder;\n@@ -49,7 +49,7 @@\n /**\n  * Default implementation of {@link ExtensionLicenseManager}.\n  *\n- * @version $Id: 2311d15d9e52ec131a88d9dc80f7ba874607aeac $\n+ * @version $Id: 729803a9d1b80bcdd5feac78b78ee2f6f0d8a086 $\n  * @since 4.0M1\n  */\n @Component\n@@ -83,8 +83,8 @@\n         Collection<URL> licenseURLs = ClasspathHelper.forPackage(LICENSE_PACKAGE);\n \n         Reflections reflections =\n-            new Reflections(new ConfigurationBuilder().setScanners(new ResourcesScanner()).setUrls(licenseURLs)\n-                .filterInputsBy(new FilterBuilder.Include(FilterBuilder.prefix(LICENSE_PACKAGE))));\n+            new Reflections(new ConfigurationBuilder().setScanners(Scanners.Resources).setUrls(licenseURLs)\n+                .filterInputsBy(new FilterBuilder().includePackage(LICENSE_PACKAGE)));\n \n         for (String licenseFile : reflections.getResources(Pattern.compile(\".*\\\\.license\"))) {\n             URL licenseUrl = getClass().getClassLoader().getResource(licenseFile);\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/repository/internal/DefaultExtensionRepositoryManagerTest.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/repository/internal/DefaultExtensionRepositoryManagerTest.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/repository/internal/DefaultExtensionRepositoryManagerTest.java\t2022-06-06 22:31:17.080846453 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/repository/internal/DefaultExtensionRepositoryManagerTest.java\t2022-06-06 22:31:14.892834196 +0200\n@@ -25,6 +25,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n+import org.apache.commons.collections4.IterableUtils;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.xwiki.extension.Extension;\n@@ -41,8 +42,6 @@\n import org.xwiki.test.junit5.mockito.ComponentTest;\n import org.xwiki.test.junit5.mockito.InjectMockComponents;\n \n-import com.google.common.collect.Lists;\n-\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.fail;\n import static org.mockito.Mockito.mock;\n@@ -52,7 +51,7 @@\n /**\n  * Test {@link DefaultExtensionRepositoryManager}.\n  *\n- * @version $Id: c3af3ae5fd9ee18c631bc45a4bc062cb43c9e3bf $\n+ * @version $Id: fd6420d2ad1ebda932d35018e72d3c7511ce8e04 $\n  */\n @ComponentTest\n public class DefaultExtensionRepositoryManagerTest\n@@ -139,7 +138,7 @@\n     private void assertResolveVersions(int offset, int nb, String... versions) throws ResolveException\n     {\n         assertEquals(toVersionList(versions),\n-            Lists.newArrayList(this.manager.resolveVersions(\"id\", offset, nb)));\n+            IterableUtils.toList(this.manager.resolveVersions(\"id\", offset, nb)));\n     }\n \n     private void assertSearch(int offset, int nb, Extension... extensions) throws SearchException\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/ExtensionPackager.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/ExtensionPackager.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/ExtensionPackager.java\t2022-06-06 22:31:17.080846453 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/ExtensionPackager.java\t2022-06-06 22:31:14.896834219 +0200\n@@ -40,19 +40,17 @@\n \n import org.apache.commons.io.IOUtils;\n import org.reflections.Reflections;\n-import org.reflections.scanners.ResourcesScanner;\n+import org.reflections.scanners.Scanners;\n import org.reflections.util.ClasspathHelper;\n import org.reflections.util.ConfigurationBuilder;\n import org.reflections.util.FilterBuilder;\n import org.reflections.vfs.Vfs;\n import org.xwiki.extension.ExtensionId;\n \n-import com.google.common.base.Predicates;\n-\n /**\n  * Generate package based on information found in <code>packagefile.properties</code> files from the resources.\n  *\n- * @version $Id: cebed6168f939435342d7e96046a3c999c879b9c $\n+ * @version $Id: aaee8aad2ee6e19a30816f85eae84e3c582e0f32 $\n  */\n public class ExtensionPackager\n {\n@@ -88,10 +86,10 @@\n         Collection<URL> urls = ClasspathHelper.forPackage(PACKAGEFILE_PACKAGE);\n \n         if (!urls.isEmpty()) {\n-            Reflections reflections = new Reflections(new ConfigurationBuilder().setScanners(new ResourcesScanner())\n-                .setUrls(urls).filterInputsBy(new FilterBuilder.Include(FilterBuilder.prefix(PACKAGEFILE_PACKAGE))));\n+            Reflections reflections = new Reflections(new ConfigurationBuilder().setScanners(Scanners.Resources)\n+                .setUrls(urls).filterInputsBy(new FilterBuilder().includePackage(PACKAGEFILE_PACKAGE)));\n \n-            Set<String> descriptors = reflections.getResources(Predicates.equalTo(PACKAGEFILE_DESCRIPTOR));\n+            Set<String> descriptors = reflections.getResources(PACKAGEFILE_DESCRIPTOR);\n \n             for (String descriptor : descriptors) {\n                 String classPackageFolder =\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/RepositoryUtils.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/RepositoryUtils.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/RepositoryUtils.java\t2022-06-06 22:31:17.080846453 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/RepositoryUtils.java\t2022-06-06 22:31:14.896834219 +0200\n@@ -31,14 +31,14 @@\n \n import org.apache.commons.io.FileUtils;\n import org.reflections.Reflections;\n-import org.reflections.scanners.ResourcesScanner;\n+import org.reflections.scanners.Scanners;\n import org.reflections.util.ClasspathHelper;\n import org.reflections.util.ConfigurationBuilder;\n import org.reflections.util.FilterBuilder;\n import org.xwiki.environment.Environment;\n \n /**\n- * @version $Id: 521851acd3bf9185ae79ef61abe375ac7c84d985 $\n+ * @version $Id: b7708cb4e3cbfece08ca3366e957e9dd359ec32a $\n  */\n public class RepositoryUtils\n {\n@@ -198,8 +198,8 @@\n                 prefix = prefix + '.';\n             }\n \n-            Reflections reflections = new Reflections(new ConfigurationBuilder().setScanners(new ResourcesScanner())\n-                .setUrls(urls).filterInputsBy(new FilterBuilder.Include(FilterBuilder.prefix(prefix))));\n+            Reflections reflections = new Reflections(new ConfigurationBuilder().setScanners(Scanners.Resources)\n+                .setUrls(urls).filterInputsBy(new FilterBuilder().includePackage(prefix)));\n \n             for (String resource : reflections.getResources(Pattern.compile(\".*\"))) {\n                 targetFolder.mkdirs();\n",
        "sha1": "f89bf37",
        "sha2": "9464cc7"
    }
}