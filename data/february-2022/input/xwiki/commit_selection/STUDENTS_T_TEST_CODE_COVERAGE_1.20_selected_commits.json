{
    "2880": {
        "size": 11,
        "decision": "pass",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:29.660916927 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-job//src/main/java/org/xwiki/job/internal/DefaultJobStatusStore.java\t2022-06-06 22:31:28.796912086 +0200\n@@ -35,7 +35,6 @@\n import org.apache.commons.configuration2.PropertiesConfiguration;\n import org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder;\n import org.apache.commons.configuration2.builder.fluent.Parameters;\n-import org.apache.commons.configuration2.builder.fluent.PropertiesBuilderParameters;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.concurrent.BasicThreadFactory;\n@@ -56,7 +55,7 @@\n /**\n  * Default implementation of {@link JobStatusStorage}.\n  *\n- * @version $Id: 790af08fa2c9b472f55c762c77e24e6f756b1ac3 $\n+ * @version $Id: 25fe4d161a0d228b1feac6f98bfa9739910a983d $\n  * @since 6.1M2\n  */\n @Component\n@@ -145,14 +144,9 @@\n             File folder = this.configuration.getStorage();\n             File file = new File(folder, INDEX_FILE);\n \n-            PropertiesBuilderParameters parameters = new Parameters().properties();\n-            if (file.exists()) {\n-                new Parameters().properties().setFile(file);\n-            }\n-\n             FileBasedConfigurationBuilder<PropertiesConfiguration> builder =\n-                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class)\n-                    .configure(parameters);\n+                new FileBasedConfigurationBuilder<PropertiesConfiguration>(PropertiesConfiguration.class, null, true)\n+                    .configure(new Parameters().properties().setFile(file));\n             PropertiesConfiguration properties = builder.getConfiguration();\n             int version = properties.getInt(INDEX_FILE_VERSION, 0);\n             if (VERSION > version) {\n@@ -160,7 +154,7 @@\n \n                 // Update version\n                 properties.setProperty(INDEX_FILE_VERSION, VERSION);\n-                builder.getFileHandler().save(file);\n+                builder.save();\n             }\n         } catch (Exception e) {\n             this.logger.error(\"Failed to load jobs\", e);\n",
        "sha1": "cfee272",
        "sha2": "5f85426",
        "config": "STUDENTS_T_TEST_CODE_COVERAGE_1.20"
    },
    "503": {
        "size": 52,
        "decision": "break",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractExtensionPlanJob.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractExtensionPlanJob.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractExtensionPlanJob.java\t2022-06-06 22:31:25.732894922 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractExtensionPlanJob.java\t2022-06-06 22:31:23.512882485 +0200\n@@ -45,7 +45,7 @@\n  * Base class for plan calculation jobs.\n  *\n  * @param <R> the type of the request\n- * @version $Id: 964310cc2768cbe648a8e466611a1b3c71b38b23 $\n+ * @version $Id: acee7b808b05f4c7bfa0eab38e6895d1823ee341 $\n  * @since 5.4RC1\n  */\n public abstract class AbstractExtensionPlanJob<R extends ExtensionRequest>\n@@ -249,7 +249,6 @@\n      * @param parentBranch the children of the parent {@link ExtensionPlanNode}\n      * @param withBackWard uninstall also the backward dependencies\n      * @throws UninstallException error when trying to uninstall backward dependencies\n-     * @throws ResolveException error when trying to resolve backward dependencies\n      */\n     protected void uninstallBackwardDependencies(InstalledExtension installedExtension, String namespace,\n         List<ExtensionPlanNode> parentBranch, boolean withBackWard) throws UninstallException\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractInstallPlanJob.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractInstallPlanJob.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractInstallPlanJob.java\t2022-06-06 22:31:25.736894944 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/AbstractInstallPlanJob.java\t2022-06-06 22:31:23.516882508 +0200\n@@ -63,7 +63,7 @@\n /**\n  * Create an Extension plan.\n  *\n- * @version $Id: 9c16ec777710b673e6c451071bc856ccd6e59efc $\n+ * @version $Id: 5a394269cefcce5de38db083c277e6f5f43bd0d4 $\n  * @since 4.1M1\n  */\n public abstract class AbstractInstallPlanJob<R extends ExtensionRequest> extends AbstractExtensionPlanJob<R>\n@@ -521,7 +521,7 @@\n             try {\n                 if (installedExtension.isInstalled(null)) {\n                     Map<String, Collection<InstalledExtension>> backwardDependencies =\n-                        this.installedExtensionRepository.getBackwardDependencies(installedExtension.getId());\n+                        this.installedExtensionRepository.getBackwardDependencies(installedExtension.getId(), true);\n \n                     mergedVersionContraint = mergeVersionConstraints(backwardDependencies.get(null),\n                         extensionDependency.getId(), versionConstraint);\n@@ -582,9 +582,6 @@\n      * @param parentBranch the children of the parent {@link DefaultExtensionPlanNode}\n      * @param extensionContext the current extension context\n      * @param parents the parents extensions (which triggered this extension install)\n-     * @throws InstallException error when trying to install provided extension\n-     * @throws ResolveException\n-     * @throws IncompatibleVersionConstraintException\n      */\n     private boolean installOptionalExtensionDependency(ExtensionDependency extensionDependency, String namespace,\n         List<ModifableExtensionPlanNode> parentBranch, ExtensionPlanContext extensionContext, Set<String> parents)\n@@ -1324,7 +1321,7 @@\n         for (InstalledExtension installedExtension : installedExtensions) {\n             if (namespace == null) {\n                 for (Map.Entry<String, Collection<InstalledExtension>> entry : this.installedExtensionRepository\n-                    .getBackwardDependencies(installedExtension.getId()).entrySet()) {\n+                    .getBackwardDependencies(installedExtension.getId(), true).entrySet()) {\n                     Set<InstalledExtension> namespaceBackwardDependencies = backwardDependencies.get(entry.getKey());\n                     if (namespaceBackwardDependencies == null) {\n                         namespaceBackwardDependencies = new LinkedHashSet<>();\n@@ -1335,7 +1332,7 @@\n                 }\n             } else {\n                 for (InstalledExtension backwardDependency : this.installedExtensionRepository\n-                    .getBackwardDependencies(installedExtension.getId().getId(), namespace)) {\n+                    .getBackwardDependencies(installedExtension.getId().getId(), namespace, true)) {\n                     Set<InstalledExtension> namespaceBackwardDependencies = backwardDependencies.get(namespace);\n                     if (namespaceBackwardDependencies == null) {\n                         namespaceBackwardDependencies = new LinkedHashSet<>();\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/UpgradePlanJob.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/UpgradePlanJob.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/UpgradePlanJob.java\t2022-06-06 22:31:25.736894944 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/job/internal/UpgradePlanJob.java\t2022-06-06 22:31:25.816895392 +0200\n@@ -40,7 +40,7 @@\n /**\n  * Create an Extension upgrade plan.\n  *\n- * @version $Id: 77448bfed5dd6fa20644b941f0d50ca881877f35 $\n+ * @version $Id: cb6d5b8afe00c4826750555c987e11dff43d844c $\n  * @since 4.1M1\n  */\n @Component\n@@ -97,7 +97,7 @@\n                 boolean hasBackwardDependencies;\n                 if (extension.getNamespaces() == null) {\n                     hasBackwardDependencies =\n-                        !this.installedExtensionRepository.getBackwardDependencies(extension.getId()).isEmpty();\n+                        !this.installedExtensionRepository.getBackwardDependencies(extension.getId(), true).isEmpty();\n                 } else {\n                     hasBackwardDependencies = !this.installedExtensionRepository\n                         .getBackwardDependencies(extension.getId().getId(), namespace).isEmpty();\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/repository/InstalledExtensionRepository.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/repository/InstalledExtensionRepository.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/repository/InstalledExtensionRepository.java\t2022-06-06 22:31:25.736894944 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/main/java/org/xwiki/extension/repository/InstalledExtensionRepository.java\t2022-06-06 22:31:23.516882508 +0200\n@@ -43,7 +43,7 @@\n  * <p>\n  * It's generally a virtual repository since the actual extension are generally stored in the local repository.\n  *\n- * @version $Id: ac65a1f7d589ea1ec6b3974dfc0d90d42502cdfe $\n+ * @version $Id: d43345f66e2c991649962b8426fbf517f0619ddc $\n  * @since 4.0M2\n  */\n @Role\n@@ -134,6 +134,8 @@\n      * <p>\n      * Only look at the backward dependencies in the provided namespace. To get all the dependencies of a root extension\n      * (namespace=null) across namespaces use {@link #getBackwardDependencies(ExtensionId)} instead.\n+     * <p>\n+     * This does not follow optional dependencies.\n      *\n      * @param feature the extension unique identifier\n      * @param namespace the namespace where to search for backward dependencies\n@@ -163,6 +165,8 @@\n \n     /**\n      * Get all backward dependencies by namespace for the provided installed extension.\n+     * <p>\n+     * This does not follow optional dependencies.\n      *\n      * @param extensionId the extension identifier\n      * @return the extension backward dependencies in all namespaces\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/job/internal/UpgradePlanJobTest.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/job/internal/UpgradePlanJobTest.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/job/internal/UpgradePlanJobTest.java\t2022-06-06 22:31:25.740894967 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/job/internal/UpgradePlanJobTest.java\t2022-06-06 22:31:25.820895415 +0200\n@@ -24,6 +24,7 @@\n \n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n+import org.xwiki.extension.ExtensionId;\n import org.xwiki.extension.InstalledExtension;\n import org.xwiki.extension.TestResources;\n import org.xwiki.extension.job.InstallRequest;\n@@ -43,7 +44,7 @@\n /**\n  * Validate {@link UpgradePlanJob}.\n  * \n- * @version $Id: 71ee1573c3109baa591a0f9cf698043807be8e08 $\n+ * @version $Id: 9cd970de41f9b936c39279b6a9d057d1d891e6bc $\n  */\n @ComponentTest\n @ExtendWith(MockitoRepositoryUtilsExtension.class)\n@@ -261,4 +262,22 @@\n \n         assertSame(action, plan.getActions().iterator().next());\n     }\n+\n+    @Test\n+    void testUpgradePlanSkipOptionalDependencies() throws Throwable\n+    {\n+        // Make sure to uninstall everything to avoid pollution from initial setup\n+        resetInstalledExtensions();\n+\n+        // install first version\n+        install(new ExtensionId(\"rwithupgradableoptionaldependency\", \"version\"));\n+\n+        // check upgrade\n+\n+        ExtensionPlan plan = upgradePlan();\n+\n+        // Tree\n+\n+        assertEquals(0, plan.getTree().size());\n+    }\n }\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/AbstractExtensionHandlerTest.java /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/AbstractExtensionHandlerTest.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/AbstractExtensionHandlerTest.java\t2022-06-06 22:31:25.740894967 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/java/org/xwiki/extension/test/AbstractExtensionHandlerTest.java\t2022-06-06 22:31:23.532882597 +0200\n@@ -31,6 +31,7 @@\n import org.xwiki.extension.ExtensionId;\n import org.xwiki.extension.InstalledExtension;\n import org.xwiki.extension.LocalExtension;\n+import org.xwiki.extension.UninstallException;\n import org.xwiki.extension.job.InstallRequest;\n import org.xwiki.extension.job.UninstallRequest;\n import org.xwiki.extension.job.plan.ExtensionPlan;\n@@ -160,7 +161,7 @@\n     protected InstalledExtension install(ExtensionId extensionId, String namespace, boolean rootModifications,\n         LogLevel failFrom) throws Throwable\n     {\n-        return install(extensionId, namespace != null ? new String[] { namespace } : (String[]) null, rootModifications,\n+        return install(extensionId, namespace != null ? new String[] {namespace} : (String[]) null, rootModifications,\n             failFrom);\n     }\n \n@@ -224,7 +225,7 @@\n     protected ExtensionPlan installPlan(ExtensionId extensionId, String namespace, boolean rootModifications)\n         throws Throwable\n     {\n-        return installPlan(extensionId, namespace != null ? new String[] { namespace } : null, rootModifications,\n+        return installPlan(extensionId, namespace != null ? new String[] {namespace} : null, rootModifications,\n             LogLevel.WARN);\n     }\n \n@@ -407,4 +408,17 @@\n     {\n         return (ExtensionPlan) executeJob(\"upgradeplan\", installRequest, failFrom).getStatus();\n     }\n+\n+    protected void resetInstalledExtensions() throws UninstallException\n+    {\n+        for (InstalledExtension installedExtension : this.installedExtensionRepository.getInstalledExtensions()) {\n+            if (installedExtension.getNamespaces() == null) {\n+                this.installedExtensionRepository.uninstallExtension(installedExtension, null);\n+            } else {\n+                for (String namespace : installedExtension.getNamespaces()) {\n+                    this.installedExtensionRepository.uninstallExtension(installedExtension, namespace);\n+                }\n+            }\n+        }\n+    }\n }\nOnly in /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/resources/repository/remote: rwithupgradableoptionaldependency-version.test\nOnly in /tmp/v2/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-api//src/test/resources/repository/remote: rwithupgradableoptionaldependency-version.xed\n",
        "sha1": "0b5e555",
        "sha2": "7dc2a2c"
    }
}