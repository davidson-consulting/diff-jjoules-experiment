{
    "66": {
        "size": 6,
        "decision": "pass",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java /tmp/v2/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java\t2022-06-06 22:31:31.852929206 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-velocity//src/main/java/org/xwiki/velocity/internal/DefaultVelocityEngine.java\t2022-06-06 22:31:31.368926495 +0200\n@@ -59,7 +59,7 @@\n  * defined in the component's configuration. Note that the {@link #initialize} method has to be executed before any\n  * other method can be called.\n  *\n- * @version $Id: b44623009119b703a7921086cf6987d1ab0556b3 $\n+ * @version $Id: 5f5d7a098de40fe224872aeeb3d22897075ffddd $\n  */\n @Component\n @InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\n@@ -285,7 +285,8 @@\n             // Someone explicitly stopped the script with something like #stop. No reason to make a scene.\n             return true;\n         } catch (Exception e) {\n-            throw new XWikiVelocityException(\"Failed to evaluate content with namespace [\" + namespace + \"]\", e);\n+            throw new XWikiVelocityException(\n+                String.format(\"Failed to evaluate content with namespace [%s]\", namespace), e);\n         } finally {\n             if (StringUtils.isNotEmpty(namespace)) {\n                 stoppedUsingMacroNamespace(namespace);\n@@ -307,7 +308,7 @@\n             Map introspectionCache = (Map) FieldUtils.readField(context, \"introspectionCache\", true);\n             introspectionCache.clear();\n         } catch (IllegalAccessException e) {\n-            this.logger.warn(\"Failed to clean the Velocity context introspection cache: \",\n+            this.logger.warn(\"Failed to clean the Velocity context introspection cache. Root error: [{}]\",\n                 ExceptionUtils.getRootCauseMessage(e));\n         }\n     }\n",
        "sha1": "d4ff221",
        "sha2": "5daa9a0",
        "config": "STUDENTS_T_TEST_DIFF_COVERAGE_0.20"
    },
    "2790": {
        "size": 26,
        "decision": "break",
        "diff": "diff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-xml//src/main/java/org/xwiki/xml/internal/html/filter/BodyFilter.java /tmp/v2/xwiki-commons-core/xwiki-commons-xml//src/main/java/org/xwiki/xml/internal/html/filter/BodyFilter.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-xml//src/main/java/org/xwiki/xml/internal/html/filter/BodyFilter.java\t2022-06-06 22:31:37.264959524 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-xml//src/main/java/org/xwiki/xml/internal/html/filter/BodyFilter.java\t2022-06-06 22:31:37.288959658 +0200\n@@ -38,7 +38,7 @@\n  * Wraps direct children of the Body tag with paragraphs. For example {@code a <table>...</table> b <p>c</p> d} is\n  * transformed into {@code <p>a </p><table>...</table><p> b </p><p>c</p><p> d</p>}.\n  *\n- * @version $Id: 1a52d35908c1f9ffb01f7a147cb3213b0b1a731b $\n+ * @version $Id: 5533b309a338281dbf6713c20c0facdaecd1d07e $\n  * @since 1.8RC3\n  */\n @Component\n@@ -69,20 +69,27 @@\n         Node body = document.getElementsByTagName(HTMLConstants.TAG_BODY).item(0);\n         Node currentNode = body.getFirstChild();\n         Node markerNode = null;\n-        boolean containsOnlySpaces = true;\n+        boolean containsOnlySpacesSoFar = false;\n         while (currentNode != null) {\n             // Note: We ignore comment nodes since there's no need to wrap them.\n             if (currentNode.getNodeType() != Node.COMMENT_NODE) {\n                 if (!ALLOWED_BODY_TAGS.contains(currentNode.getNodeName())) {\n \n                     // Ensure that we don't wrap elements that contain only spaces or newlines.\n-                    containsOnlySpaces = containsOnlySpaces(currentNode);\n+                    boolean containsOnlySpaces = containsOnlySpaces(currentNode);\n+                    if (markerNode == null && !containsOnlySpacesSoFar && containsOnlySpaces) {\n+                        containsOnlySpacesSoFar = true;\n+                    } else if (containsOnlySpacesSoFar && !containsOnlySpaces) {\n+                        containsOnlySpacesSoFar = false;\n+                    }\n \n-                    if (markerNode == null && !containsOnlySpaces) {\n+                    if (markerNode == null) {\n                         markerNode = currentNode;\n                     }\n                 } else if (markerNode != null) {\n-                    surroundWithParagraph(document, body, markerNode, currentNode);\n+                    if (!containsOnlySpacesSoFar) {\n+                        surroundWithParagraph(document, body, markerNode, currentNode);\n+                    }\n                     markerNode = null;\n                 }\n             }\n@@ -91,7 +98,7 @@\n \n         // If the marker is still set it means we need to wrap all elements between the marker till\n         // the end of the body siblings with a paragraph.\n-        if (markerNode != null) {\n+        if (markerNode != null && !containsOnlySpacesSoFar) {\n             surroundWithParagraph(document, body, markerNode, null);\n         }\n     }\ndiff -ru /tmp/v1/xwiki-commons-core/xwiki-commons-xml//src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java /tmp/v2/xwiki-commons-core/xwiki-commons-xml//src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java\n--- /tmp/v1/xwiki-commons-core/xwiki-commons-xml//src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java\t2022-06-06 22:31:37.268959547 +0200\n+++ /tmp/v2/xwiki-commons-core/xwiki-commons-xml//src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java\t2022-06-06 22:31:35.860951659 +0200\n@@ -48,7 +48,7 @@\n /**\n  * Unit tests for {@link org.xwiki.xml.internal.html.DefaultHTMLCleaner}.\n  *\n- * @version $Id: 3538a5feeefaf23fddcd61aeaac3b0cbeffa01ae $\n+ * @version $Id: 40fd3999a107834cf4a773efa89ac22ce08eb546 $\n  * @since 1.6M1\n  */\n @ComponentList({ ListFilter.class, ListItemFilter.class, FontFilter.class, BodyFilter.class, AttributeFilter.class,\n@@ -417,6 +417,14 @@\n         //          assertHTML(\"<iframe src=\\\"whatever\\\"></iframe>\\r\\n\", \"<iframe src=\\\"whatever\\\"/>\\r\\n\");\n         assertHTML(\"<p><iframe src=\\\"whatever\\\"></iframe></p>\", \"<iframe src=\\\"whatever\\\"/>\");\n         assertHTML(\"<p><iframe src=\\\"whatever\\\"></iframe>\\r\\n</p>\", \"<iframe src=\\\"whatever\\\"/>\\r\\n\");\n+        assertHTML(\"<p>\\r\\n<iframe src=\\\"whatever\\\"></iframe></p>\", \"\\r\\n<iframe src=\\\"whatever\\\"/>\");\n+        assertHTML(\"<p>\\r\\n<iframe src=\\\"whatever\\\"></iframe>\\r\\n</p>\", \"\\r\\n<iframe src=\\\"whatever\\\"/>\\r\\n\");\n+        assertHTML(\"<p><iframe src=\\\"whatever\\\"></iframe><iframe src=\\\"whatever\\\"></iframe></p>\",\n+            \"<iframe src=\\\"whatever\\\"/><iframe src=\\\"whatever\\\"/>\");\n+        assertHTML(\"<p><iframe src=\\\"whatever\\\"></iframe>\\r\\n<iframe src=\\\"whatever\\\"></iframe></p>\",\n+            \"<iframe src=\\\"whatever\\\"/>\\r\\n<iframe src=\\\"whatever\\\"/>\");\n+        assertHTML(\"<p>\\r\\n<iframe src=\\\"whatever\\\"></iframe>\\r\\n<iframe src=\\\"whatever\\\"></iframe>\\r\\n</p>\",\n+            \"\\r\\n<iframe src=\\\"whatever\\\"/>\\r\\n<iframe src=\\\"whatever\\\"/>\\r\\n\");\n     }\n \n     private void assertHTML(String expected, String actual) throws ComponentLookupException\n",
        "sha1": "6b19685",
        "sha2": "1b79714"
    }
}