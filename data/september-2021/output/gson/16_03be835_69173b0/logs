[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.9-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 52, column 15
[WARNING] 'build.plugins.plugin.version' for com.github.wvengen:proguard-maven-plugin is missing. @ line 104, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ---------------------< com.google.code.gson:gson >----------------------
[INFO] Building Gson 2.8.9-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ gson ---
[INFO] Deleting /tmp/v1/gson/target
[INFO] 
[INFO] --- diff-jjoules:0.0.1-SNAPSHOT:diff-jjoules (default-cli) @ gson ---
[INFO] Running on:
[INFO] /tmp/v1/gson
[INFO] /tmp/v2/gson/
[INFO] Enable JUnit4 mode
[WARNING] No path to diff file has been specified.
[WARNING] I'll compute a diff file using the UNIX diff command
[WARNING] You may encounter troubles.
[WARNING] If so, please specify a path to a correct diff file
[WARNING] or implement a new way to compute a diff file.
[INFO] Computing the diff with diff commnd line
[INFO] The diff will be computed between:
[INFO] /tmp/v1/gson/src and 
[INFO] /tmp/v2/gson/src
[INFO] Executing: diff -ru /tmp/v1/gson/src /tmp/v2/gson/src from /tmp/v1/gson/src
[INFO] Run DiffJJoules - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='Only in /tmp/v1/gson/src/main/java/com/google/gson: DefaultDateTypeAdapter.java
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
--- /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-22 13:20:57.526039619 +0200
@@ -17,7 +17,6 @@
 package com.google.gson;
 
 import java.lang.reflect.Type;
-import java.sql.Timestamp;
 import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -28,8 +27,10 @@
 
 import com.google.gson.internal.$Gson$Preconditions;
 import com.google.gson.internal.Excluder;
+import com.google.gson.internal.bind.DefaultDateTypeAdapter;
 import com.google.gson.internal.bind.TreeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
+import com.google.gson.internal.sql.SqlTypesSupport;
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 
@@ -417,8 +418,8 @@
    * call this method or {@link #setDateFormat(int)} multiple times, but only the last invocation
    * will be used to decide the serialization format.
    *
-   * <p>The date format will be used to serialize and deserialize {@link java.util.Date}, {@link
-   * java.sql.Timestamp} and {@link java.sql.Date}.
+   * <p>The date format will be used to serialize and deserialize {@link java.util.Date} and in case
+   * the {@code java.sql} module is present, also {@link java.sql.Timestamp} and {@link java.sql.Date}.
    *
    * <p>Note that this pattern must abide by the convention provided by {@code SimpleDateFormat}
    * class. See the documentation in {@link java.text.SimpleDateFormat} for more information on
@@ -602,26 +603,35 @@
         this.factories, this.hierarchyFactories, factories);
   }
 
-  @SuppressWarnings("unchecked")
   private void addTypeAdaptersForDate(String datePattern, int dateStyle, int timeStyle,
       List<TypeAdapterFactory> factories) {
-    DefaultDateTypeAdapter dateTypeAdapter;
-    TypeAdapter<Timestamp> timestampTypeAdapter;
-    TypeAdapter<java.sql.Date> javaSqlDateTypeAdapter;
-    if (datePattern != null && !"".equals(datePattern.trim())) {
-      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, datePattern);
-      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, datePattern);
-      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, datePattern);
+    TypeAdapterFactory dateAdapterFactory;
+    boolean sqlTypesSupported = SqlTypesSupport.SUPPORTS_SQL_TYPES;
+    TypeAdapterFactory sqlTimestampAdapterFactory = null;
+    TypeAdapterFactory sqlDateAdapterFactory = null;
+
+    if (datePattern != null && !datePattern.trim().isEmpty()) {
+      dateAdapterFactory = DefaultDateTypeAdapter.DateType.DATE.createAdapterFactory(datePattern);
+
+      if (sqlTypesSupported) {
+        sqlTimestampAdapterFactory = SqlTypesSupport.TIMESTAMP_DATE_TYPE.createAdapterFactory(datePattern);
+        sqlDateAdapterFactory = SqlTypesSupport.DATE_DATE_TYPE.createAdapterFactory(datePattern);
+      }
     } else if (dateStyle != DateFormat.DEFAULT && timeStyle != DateFormat.DEFAULT) {
-      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle, timeStyle);
-      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, dateStyle, timeStyle);
-      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, dateStyle, timeStyle);
+      dateAdapterFactory = DefaultDateTypeAdapter.DateType.DATE.createAdapterFactory(dateStyle, timeStyle);
+
+      if (sqlTypesSupported) {
+        sqlTimestampAdapterFactory = SqlTypesSupport.TIMESTAMP_DATE_TYPE.createAdapterFactory(dateStyle, timeStyle);
+        sqlDateAdapterFactory = SqlTypesSupport.DATE_DATE_TYPE.createAdapterFactory(dateStyle, timeStyle);
+      }
     } else {
       return;
     }
 
-    factories.add(TypeAdapters.newFactory(Date.class, dateTypeAdapter));
-    factories.add(TypeAdapters.newFactory(Timestamp.class, timestampTypeAdapter));
-    factories.add(TypeAdapters.newFactory(java.sql.Date.class, javaSqlDateTypeAdapter));
+    factories.add(dateAdapterFactory);
+    if (sqlTypesSupported) {
+      factories.add(sqlTimestampAdapterFactory);
+      factories.add(sqlDateAdapterFactory);
+    }
   }
 }
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/Gson.java /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
--- /tmp/v1/gson/src/main/java/com/google/gson/Gson.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/Gson.java	2021-09-22 13:20:57.526039619 +0200
@@ -49,9 +49,8 @@
 import com.google.gson.internal.bind.MapTypeAdapterFactory;
 import com.google.gson.internal.bind.ObjectTypeAdapter;
 import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
-import com.google.gson.internal.bind.SqlDateTypeAdapter;
-import com.google.gson.internal.bind.TimeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
+import com.google.gson.internal.sql.SqlTypesSupport;
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 import com.google.gson.stream.JsonToken;
@@ -262,9 +261,13 @@
     factories.add(TypeAdapters.BIT_SET_FACTORY);
     factories.add(DateTypeAdapter.FACTORY);
     factories.add(TypeAdapters.CALENDAR_FACTORY);
-    factories.add(TimeTypeAdapter.FACTORY);
-    factories.add(SqlDateTypeAdapter.FACTORY);
-    factories.add(TypeAdapters.TIMESTAMP_FACTORY);
+
+    if (SqlTypesSupport.SUPPORTS_SQL_TYPES) {
+      factories.add(SqlTypesSupport.TIME_FACTORY);
+      factories.add(SqlTypesSupport.DATE_FACTORY);
+      factories.add(SqlTypesSupport.TIMESTAMP_FACTORY);
+    }
+
     factories.add(ArrayTypeAdapter.FACTORY);
     factories.add(TypeAdapters.CLASS_FACTORY);
 
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-22 13:20:57.526039619 +0200
@@ -339,6 +339,7 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
+
     return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable<?>, Type>());
   }
 
Only in /tmp/v2/gson/src/main/java/com/google/gson/internal/bind: DefaultDateTypeAdapter.java
Only in /tmp/v1/gson/src/main/java/com/google/gson/internal/bind: SqlDateTypeAdapter.java
Only in /tmp/v1/gson/src/main/java/com/google/gson/internal/bind: TimeTypeAdapter.java
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java	2021-09-22 13:50:18.062069640 +0200
@@ -26,12 +26,10 @@
 import java.net.URL;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
-import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.BitSet;
 import java.util.Calendar;
 import java.util.Currency;
-import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.List;
@@ -409,7 +407,7 @@
       out.value(value);
     }
   };
-  
+
   public static final TypeAdapter<BigDecimal> BIG_DECIMAL = new TypeAdapter<BigDecimal>() {
     @Override public BigDecimal read(JsonReader in) throws IOException {
       if (in.peek() == JsonToken.NULL) {
@@ -427,7 +425,7 @@
       out.value(value);
     }
   };
-  
+
   public static final TypeAdapter<BigInteger> BIG_INTEGER = new TypeAdapter<BigInteger>() {
     @Override public BigInteger read(JsonReader in) throws IOException {
       if (in.peek() == JsonToken.NULL) {
@@ -572,27 +570,6 @@
   }.nullSafe();
   public static final TypeAdapterFactory CURRENCY_FACTORY = newFactory(Currency.class, CURRENCY);
 
-  public static final TypeAdapterFactory TIMESTAMP_FACTORY = new TypeAdapterFactory() {
-    @SuppressWarnings("unchecked") // we use a runtime check to make sure the 'T's equal
-    @Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {
-      if (typeToken.getRawType() != Timestamp.class) {
-        return null;
-      }
-
-      final TypeAdapter<Date> dateTypeAdapter = gson.getAdapter(Date.class);
-      return (TypeAdapter<T>) new TypeAdapter<Timestamp>() {
-        @Override public Timestamp read(JsonReader in) throws IOException {
-          Date date = dateTypeAdapter.read(in);
-          return date != null ? new Timestamp(date.getTime()) : null;
-        }
-
-        @Override public void write(JsonWriter out, Timestamp value) throws IOException {
-          dateTypeAdapter.write(out, value);
-        }
-      };
-    }
-  };
-
   public static final TypeAdapter<Calendar> CALENDAR = new TypeAdapter<Calendar>() {
     private static final String YEAR = "year";
     private static final String MONTH = "month";
Only in /tmp/v2/gson/src/main/java/com/google/gson/internal: sql
Only in /tmp/v1/gson/src/test/java/com/google/gson: DefaultDateTypeAdapterTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-22 13:29:51.167654993 +0200
@@ -37,7 +37,6 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
-import com.google.gson.common.MoreAsserts;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.reflect.TypeToken;
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java	2021-09-22 13:44:16.831137343 +0200
@@ -69,12 +69,14 @@
 public class DefaultTypeAdaptersTest extends TestCase {
   private Gson gson;
   private TimeZone oldTimeZone;
+  private Locale oldLocale;
 
   @Override
   protected void setUp() throws Exception {
     super.setUp();
     this.oldTimeZone = TimeZone.getDefault();
     TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
+    this.oldLocale = Locale.getDefault();
     Locale.setDefault(Locale.US);
     gson = new Gson();
   }
@@ -82,6 +84,7 @@
   @Override
   protected void tearDown() throws Exception {
     TimeZone.setDefault(oldTimeZone);
+    Locale.setDefault(oldLocale);
     super.tearDown();
   }
 
@@ -146,7 +149,7 @@
     URI target = gson.fromJson(json, URI.class);
     assertEquals(uriValue, target.toASCIIString());
   }
-  
+
   public void testNullSerialization() throws Exception {
     testNullSerializationAndDeserialization(Boolean.class);
     testNullSerializationAndDeserialization(Byte.class);
@@ -175,14 +178,15 @@
     testNullSerializationAndDeserialization(Date.class);
     testNullSerializationAndDeserialization(GregorianCalendar.class);
     testNullSerializationAndDeserialization(Calendar.class);
-    testNullSerializationAndDeserialization(Time.class);
-    testNullSerializationAndDeserialization(Timestamp.class);
-    testNullSerializationAndDeserialization(java.sql.Date.class);
     testNullSerializationAndDeserialization(Enum.class);
     testNullSerializationAndDeserialization(Class.class);
   }
 
   private void testNullSerializationAndDeserialization(Class<?> c) {
+    testNullSerializationAndDeserialization(gson, c);
+  }
+
+  public static void testNullSerializationAndDeserialization(Gson gson, Class<?> c) {
     assertEquals("null", gson.toJson(null, c));
     assertEquals(null, gson.fromJson("null", c));
   }
@@ -269,7 +273,7 @@
     ClassWithBigInteger actual = gson.fromJson(json, ClassWithBigInteger.class);
     assertEquals(expected.value, actual.value);
   }
-  
+
   public void testOverrideBigIntegerTypeAdapter() throws Exception {
     gson = new GsonBuilder()
         .registerTypeAdapter(BigInteger.class, new NumberAsStringAdapter(BigInteger.class))
@@ -347,60 +351,19 @@
   // Date can not directly be compared with another instance since the deserialization loses the
   // millisecond portion.
   @SuppressWarnings("deprecation")
-  private void assertEqualsDate(Date date, int year, int month, int day) {
+  public static void assertEqualsDate(Date date, int year, int month, int day) {
     assertEquals(year-1900, date.getYear());
     assertEquals(month, date.getMonth());
     assertEquals(day, date.getDate());
   }
 
   @SuppressWarnings("deprecation")
-  private void assertEqualsTime(Date date, int hours, int minutes, int seconds) {
+  public static void assertEqualsTime(Date date, int hours, int minutes, int seconds) {
     assertEquals(hours, date.getHours());
     assertEquals(minutes, date.getMinutes());
     assertEquals(seconds, date.getSeconds());
   }
 
-  public void testDefaultJavaSqlDateSerialization() {
-    java.sql.Date instant = new java.sql.Date(1259875082000L);
-    String json = gson.toJson(instant);
-    assertEquals("\"Dec 3, 2009\"", json);
-  }
-
-  public void testDefaultJavaSqlDateDeserialization() {
-    String json = "'Dec 3, 2009'";
-    java.sql.Date extracted = gson.fromJson(json, java.sql.Date.class);
-    assertEqualsDate(extracted, 2009, 11, 3);
-  }
-
-  public void testDefaultJavaSqlTimestampSerialization() {
-    Timestamp now = new java.sql.Timestamp(1259875082000L);
-    String json = gson.toJson(now);
-    if (JavaVersion.isJava9OrLater()) {
-      assertEquals("\"Dec 3, 2009, 1:18:02 PM\"", json);
-    } else {
-      assertEquals("\"Dec 3, 2009 1:18:02 PM\"", json);
-    }
-  }
-
-  public void testDefaultJavaSqlTimestampDeserialization() {
-    String json = "'Dec 3, 2009 1:18:02 PM'";
-    Timestamp extracted = gson.fromJson(json, Timestamp.class);
-    assertEqualsDate(extracted, 2009, 11, 3);
-    assertEqualsTime(extracted, 13, 18, 2);
-  }
-
-  public void testDefaultJavaSqlTimeSerialization() {
-    Time now = new Time(1259875082000L);
-    String json = gson.toJson(now);
-    assertEquals("\"01:18:02 PM\"", json);
-  }
-
-  public void testDefaultJavaSqlTimeDeserialization() {
-    String json = "'1:18:02 PM'";
-    Time extracted = gson.fromJson(json, Time.class);
-    assertEqualsTime(extracted, 13, 18, 2);
-  }
-
   public void testDefaultDateSerializationUsingBuilder() throws Exception {
     Gson gson = new GsonBuilder().create();
     Date now = new Date(1315806903103L);
@@ -521,42 +484,6 @@
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
-    }
-  }
-
-  // http://code.google.com/p/google-gson/issues/detail?id=230
-  public void testTimestampSerialization() throws Exception {
-    TimeZone defaultTimeZone = TimeZone.getDefault();
-    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-    Locale defaultLocale = Locale.getDefault();
-    Locale.setDefault(Locale.US);
-    try {
-      Timestamp timestamp = new Timestamp(0L);
-      Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
-      String json = gson.toJson(timestamp, Timestamp.class);
-      assertEquals("\"1970-01-01\"", json);
-      assertEquals(0, gson.fromJson("\"1970-01-01\"", Timestamp.class).getTime());
-    } finally {
-      TimeZone.setDefault(defaultTimeZone);
-      Locale.setDefault(defaultLocale);
-    }
-  }
-
-  // http://code.google.com/p/google-gson/issues/detail?id=230
-  public void testSqlDateSerialization() throws Exception {
-    TimeZone defaultTimeZone = TimeZone.getDefault();
-    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-    Locale defaultLocale = Locale.getDefault();
-    Locale.setDefault(Locale.US);
-    try {
-      java.sql.Date sqlDate = new java.sql.Date(0L);
-      Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
-      String json = gson.toJson(sqlDate, Timestamp.class);
-      assertEquals("\"1970-01-01\"", json);
-      assertEquals(0, gson.fromJson("\"1970-01-01\"", java.sql.Date.class).getTime());
-    } finally {
-      TimeZone.setDefault(defaultTimeZone);
-      Locale.setDefault(defaultLocale);
     }
   }
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-22 13:50:18.066069631 +0200
@@ -172,6 +172,7 @@
     int numClasses;
   }
 
+  @SafeVarargs
   private static <T> List<T> createList(T ...items) {
     return Arrays.asList(items);
   }
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal/bind: DefaultDateTypeAdapterTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-22 13:29:51.167654993 +0200
@@ -36,7 +36,7 @@
 
   @SuppressWarnings("unused")
   private static class Foo1<A> {
-	public Foo2<? extends A> foo2;
+    public Foo2<? extends A> foo2;
   }
   @SuppressWarnings("unused")
   private static class Foo2<B> {
@@ -48,6 +48,7 @@
    */
 
   public void testRecursiveResolveSimple() {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);
     assertNotNull(adapter);
   }
@@ -62,6 +63,7 @@
   }
 
   public void testIssue440WeakReference() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<WeakReference> adapter = new Gson().getAdapter(WeakReference.class);
     assertNotNull(adapter);
   }
@@ -105,11 +107,13 @@
   }
 
   public void testRecursiveTypeVariablesResolve1() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType> adapter = new Gson().getAdapter(TestType.class);
     assertNotNull(adapter);
   }
 
   public void testRecursiveTypeVariablesResolve12() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType2> adapter = new Gson().getAdapter(TestType2.class);
     assertNotNull(adapter);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-22 13:20:57.538045801 +0200
@@ -280,6 +280,7 @@
     }
   }
 
+  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-22 13:20:57.538045801 +0200
@@ -140,6 +140,7 @@
     MoreAsserts.assertEqualsAndHashCode(map1, map2);
   }
 
+  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal: sql
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar, /home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar, /home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar, /home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar, /home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar, /home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar, /home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar], classpathV2=[/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar, /home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar, /home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar, /home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar, /home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar, /home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar, /home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar], classpathV1AsString='/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar', classpathV2AsString='/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar', testsList=null, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={}, reportEnum=NONE}
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v1/gson clean eu.stamp-project:dspot-diff-test-selection:3.1.1-SNAPSHOT:list -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dpath-dir-second-version=/tmp/v2/gson/ -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.9-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 52, column 15
[[1;33mWARNING[m] 'build.plugins.plugin.version' for com.github.wvengen:proguard-maven-plugin is missing. @ line 104, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.9-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Deleting /tmp/v1/gson/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mdspot-diff-test-selection:3.1.1-SNAPSHOT:list[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Running on:
[[1;34mINFO[m] /tmp/v1/gson
[[1;33mWARNING[m] No path to diff file has been specified.
[[1;33mWARNING[m] I'll compute a diff file using the UNIX diff command
[[1;33mWARNING[m] You may encounter troubles.
[[1;33mWARNING[m] If so, please specify a path to a correct diff file
[[1;33mWARNING[m] or implement a new way to compute a diff file.
[[1;34mINFO[m] Computing the diff with diff commnd line
[[1;34mINFO[m] The diff will be computed between:
[[1;34mINFO[m] /tmp/v1/gson/src and 
[[1;34mINFO[m] /tmp/v2/gson/src
[[1;34mINFO[m] Executing: diff -ru /tmp/v1/gson/src /tmp/v2/gson/src from /tmp/v1/gson/src
[[1;34mINFO[m] Running in enhanced mode...
[[1;34mINFO[m] Computing coverage for /tmp/v1/gson
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.9-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 52, column 15
[[1;33mWARNING[m] 'build.plugins.plugin.version' for com.github.wvengen:proguard-maven-plugin is missing. @ line 104, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.9-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mclover-maven-plugin:4.4.1:setup[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Creating new database at '/tmp/v1/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 72 files (8 packages).
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Updating existing database at '/tmp/v1/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 104 files (11 packages).
[[1;34mINFO[m] 1057 test methods detected.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Skipping Rule Enforcement.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mtemplating-maven-plugin:1.0.0:filter-sources[m [1m(filtering-java-templates)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Coping files with filtering to temporary directory.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] Copied 1 files to output directory: /tmp/v1/gson/target/generated-sources/java-templates
[[1;34mINFO[m] Source directory: /tmp/v1/gson/target/generated-sources/java-templates added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.2.0:resources[m [1m(default-resources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered properties files.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v1/gson/src/main/resources
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(default-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v1/gson/target/classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(base-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v1/gson/target/classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbnd-maven-plugin:5.3.0:bnd-process[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;33mWARNING[m] /tmp/v1/gson/bnd.bnd [0:0]: Export com.google.gson,  has 1,  private references [com.google.gson.internal]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.2.0:testResources[m [1m(default-testResources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered properties files.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:testCompile[m [1m(default-testCompile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 104 source files to /tmp/v1/gson/target/test-classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/DefaultTypeAdaptersTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/DefaultTypeAdaptersTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/MapTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/MapTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcopy-rename-maven-plugin:1.0.1:rename[m [1m(pre-obfuscate-class)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Renamed /tmp/v1/gson/target/test-classes/com/google/gson/functional/EnumWithObfuscatedTest.class to /tmp/v1/gson/target/test-classes-obfuscated-injar/com/google/gson/functional/EnumWithObfuscatedTest.class
[[1;34mINFO[m] Renamed /tmp/v1/gson/target/test-classes/com/google/gson/functional/EnumWithObfuscatedTest$Gender.class to /tmp/v1/gson/target/test-classes-obfuscated-injar/com/google/gson/functional/EnumWithObfuscatedTest$Gender.class
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mproguard-maven-plugin:2.4.0:proguard[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Bypass ProGuard processing because "proguard.skip=true"
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.2.0:copy-resources[m [1m(post-obfuscate-class)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered properties files.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v1/gson/target/test-classes-obfuscated-outjar/com/google/gson/functional
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /tmp/v1/gson/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.google.gson.stream.JsonReaderTest
Tests run: 120, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.241 sec
Running com.google.gson.stream.JsonReaderPathTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.09 sec
Running com.google.gson.stream.JsonWriterTest
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running com.google.gson.GsonTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running com.google.gson.InnerClassExclusionStrategyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.ObjectTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.VersionExclusionStrategyTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.JsonArrayTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.JavaSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running com.google.gson.ParameterizedTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.GsonBuilderTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.JsonNullTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.GsonTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.CommentsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.JsonParserTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.reflect.TypeTokenTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.JsonPrimitiveTest
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.ExposeAnnotationExclusionStrategyTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.GenericArrayTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.FieldAttributesTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.JsonStreamParserTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.regression.JsonAdapterNullSafeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.MixedStreamTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.DefaultDateTypeAdapterTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.171 sec
Running com.google.gson.DefaultInetAddressTypeAdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.LongSerializationPolicyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.internal.LazilyParsedNumberTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.GsonTypesTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.internal.LinkedHashTreeMapTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running com.google.gson.internal.bind.JsonTreeReaderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.bind.JsonTreeWriterTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.internal.bind.util.ISO8601UtilsTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.internal.bind.RecursiveTypesResolveTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.internal.bind.JsonElementReaderTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.internal.GsonBuildConfigTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.JavaVersionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.internal.reflect.UnsafeReflectionAccessorTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running com.google.gson.internal.LinkedTreeMapTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running com.google.gson.internal.UnsafeAllocatorInstantiationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.DefaultMapJsonSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.OverrideCoreTypeAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.MoreSpecificTypeSerializationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.JavaUtilTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.CircularReferenceTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 sec
Running com.google.gson.functional.NullObjectAndFieldTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running com.google.gson.functional.ConcurrencyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.PrimitiveCharacterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.functional.CustomDeserializerTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.MapTest
Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running com.google.gson.functional.ExclusionStrategyFunctionalTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.TypeHierarchyAdapterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.ReusedTypeVariablesFullyResolveTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.InternationalizationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.CustomSerializerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.JsonArrayTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.JsonTreeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.TreeTypeAdaptersTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.FieldNamingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.LeniencyTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.GsonVersionDiagnosticsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.SecurityTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.InheritanceTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.SerializedNameTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterSerializerDeserializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.ExposeFieldsTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.ParameterizedTypesTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running com.google.gson.functional.MapAsArrayTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.NamingPolicyTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.VersioningTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.DelegateTypeAdapterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.ArrayTest
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.google.gson.functional.PrettyPrintingTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.CollectionTest
Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running com.google.gson.functional.ThrowableFunctionalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.JsonParserTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.EnumTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.InterfaceTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.RawSerializationTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.TypeVariableTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.UncategorizedTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.PrimitiveTest
Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 sec
Running com.google.gson.functional.EscapingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnClassesTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.functional.ReadersWritersTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.InstanceCreatorTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.CustomTypeAdaptersTest
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running com.google.gson.functional.TypeAdapterPrecedenceTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.FieldExclusionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.StreamingTypeAdaptersTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.PrintFormattingTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JavaUtilConcurrentAtomicTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.StringTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.ObjectTest
Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running com.google.gson.functional.DefaultTypeAdaptersTest
Tests run: 65, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running com.google.gson.metrics.PerformanceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.JsonObjectTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec

Results :

Tests run: 1066, Failures: 0, Errors: 0, Skipped: 1

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  14.579 s
[[1;34mINFO[m] Finished at: 2021-09-22T13:52:42+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
Reading Clover data /tmp/v1/gson/target/clover
Writing HTML report to '/tmp/v1/gson/target/clover/report'
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/Gson.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/MixedStreamTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/EnumTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/InheritanceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MapTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ObjectTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/common/TestTypes.java
Done. Processed 12 packages in 6468ms (539ms per package).
[[1;34mINFO[m] Computing coverage for /tmp/v2/gson/
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.9-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 52, column 15
[[1;33mWARNING[m] 'build.plugins.plugin.version' for com.github.wvengen:proguard-maven-plugin is missing. @ line 104, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.9-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Deleting /tmp/v2/gson/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mclover-maven-plugin:4.4.1:setup[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Creating new database at '/tmp/v2/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 74 files (9 packages).
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Updating existing database at '/tmp/v2/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 106 files (12 packages).
[[1;34mINFO[m] 1059 test methods detected.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Skipping Rule Enforcement.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mtemplating-maven-plugin:1.0.0:filter-sources[m [1m(filtering-java-templates)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Coping files with filtering to temporary directory.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] Copied 1 files to output directory: /tmp/v2/gson/target/generated-sources/java-templates
[[1;34mINFO[m] Source directory: /tmp/v2/gson/target/generated-sources/java-templates added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.2.0:resources[m [1m(default-resources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered properties files.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v2/gson/src/main/resources
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(default-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 75 source files to /tmp/v2/gson/target/classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(base-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 75 source files to /tmp/v2/gson/target/classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbnd-maven-plugin:5.3.0:bnd-process[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;33mWARNING[m] /tmp/v2/gson/bnd.bnd [0:0]: Export com.google.gson,  has 1,  private references [com.google.gson.internal]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.2.0:testResources[m [1m(default-testResources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered properties files.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:testCompile[m [1m(default-testCompile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 106 source files to /tmp/v2/gson/target/test-classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/internal/bind/util/ISO8601UtilsTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/internal/bind/util/ISO8601UtilsTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/functional/ParameterizedTypesTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/functional/ParameterizedTypesTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcopy-rename-maven-plugin:1.0.1:rename[m [1m(pre-obfuscate-class)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Renamed /tmp/v2/gson/target/test-classes/com/google/gson/functional/EnumWithObfuscatedTest.class to /tmp/v2/gson/target/test-classes-obfuscated-injar/com/google/gson/functional/EnumWithObfuscatedTest.class
[[1;34mINFO[m] Renamed /tmp/v2/gson/target/test-classes/com/google/gson/functional/EnumWithObfuscatedTest$Gender.class to /tmp/v2/gson/target/test-classes-obfuscated-injar/com/google/gson/functional/EnumWithObfuscatedTest$Gender.class
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mproguard-maven-plugin:2.4.0:proguard[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Bypass ProGuard processing because "proguard.skip=true"
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.2.0:copy-resources[m [1m(post-obfuscate-class)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered properties files.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v2/gson/target/test-classes-obfuscated-outjar/com/google/gson/functional
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /tmp/v2/gson/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.google.gson.stream.JsonReaderTest
Tests run: 120, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.217 sec
Running com.google.gson.stream.JsonReaderPathTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.089 sec
Running com.google.gson.stream.JsonWriterTest
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running com.google.gson.GsonTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running com.google.gson.InnerClassExclusionStrategyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.ObjectTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running com.google.gson.VersionExclusionStrategyTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.JsonArrayTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.JavaSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.google.gson.ParameterizedTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.GsonBuilderTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.JsonNullTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.GsonTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.CommentsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.JsonParserTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.reflect.TypeTokenTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.JsonPrimitiveTest
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.ExposeAnnotationExclusionStrategyTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.GenericArrayTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.FieldAttributesTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.JsonStreamParserTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.regression.JsonAdapterNullSafeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.MixedStreamTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.DefaultInetAddressTypeAdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.LongSerializationPolicyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.internal.LazilyParsedNumberTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.GsonTypesTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.LinkedHashTreeMapTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.google.gson.internal.bind.JsonTreeReaderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.bind.JsonTreeWriterTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.internal.bind.util.ISO8601UtilsTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running com.google.gson.internal.bind.DefaultDateTypeAdapterTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.183 sec
Running com.google.gson.internal.bind.RecursiveTypesResolveTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running com.google.gson.internal.bind.JsonElementReaderTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.internal.GsonBuildConfigTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.JavaVersionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.internal.sql.SqlTypesSupportTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.sql.SqlTypesGsonTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.internal.reflect.UnsafeReflectionAccessorTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.internal.LinkedTreeMapTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.internal.UnsafeAllocatorInstantiationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.DefaultMapJsonSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.OverrideCoreTypeAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.MoreSpecificTypeSerializationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.JavaUtilTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.CircularReferenceTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.functional.NullObjectAndFieldTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.ConcurrencyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.PrimitiveCharacterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.CustomDeserializerTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.MapTest
Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running com.google.gson.functional.ExclusionStrategyFunctionalTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.TypeHierarchyAdapterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.ReusedTypeVariablesFullyResolveTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.InternationalizationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.CustomSerializerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.JsonArrayTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.JsonTreeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running com.google.gson.functional.TreeTypeAdaptersTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.FieldNamingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.LeniencyTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.GsonVersionDiagnosticsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.SecurityTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.InheritanceTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.functional.SerializedNameTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterSerializerDeserializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.ExposeFieldsTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.ParameterizedTypesTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running com.google.gson.functional.MapAsArrayTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.NamingPolicyTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.functional.VersioningTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.DelegateTypeAdapterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.ArrayTest
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.PrettyPrintingTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.CollectionTest
Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running com.google.gson.functional.ThrowableFunctionalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.JsonParserTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.EnumTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.InterfaceTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.RawSerializationTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.TypeVariableTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.UncategorizedTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.PrimitiveTest
Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec
Running com.google.gson.functional.EscapingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnClassesTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.ReadersWritersTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.InstanceCreatorTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.CustomTypeAdaptersTest
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.TypeAdapterPrecedenceTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.FieldExclusionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.StreamingTypeAdaptersTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.functional.PrintFormattingTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.JavaUtilConcurrentAtomicTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.StringTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.ObjectTest
Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 sec
Running com.google.gson.functional.DefaultTypeAdaptersTest
Tests run: 57, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.metrics.PerformanceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.JsonObjectTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec

Results :

Tests run: 1068, Failures: 0, Errors: 0, Skipped: 1

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  15.365 s
[[1;34mINFO[m] Finished at: 2021-09-22T13:53:06+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
Reading Clover data /tmp/v2/gson/target/clover
Writing HTML report to '/tmp/v2/gson/target/clover/report'
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/DefaultDateTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/MixedStreamTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/EnumTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/InheritanceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MapTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ObjectTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/common/TestTypes.java
Done. Processed 13 packages in 3100ms (238ms per package).
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
[[1;34mINFO[m] com.google.gson.GsonBuilder:[609, 609, 611, 612, 632, 614, 615, 634, 635, 618, 618, 619, 622, 625, 625, 626, 605, 611, 612, 613, 614, 616, 617, 618, 623] are modified.
[[1;34mINFO[m] com.google.gson.GsonBuilder:609 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:611 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:615 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:612 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:614 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:625 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:613 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:623 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:[609, 609, 609, 610, 611, 624, 632, 616, 633, 612, 613, 616, 625, 625, 626, 626, 614, 614, 623, 614, 615, 617, 623, 617, 618, 621, 618, 618, 619, 624, 625] are modified.
[[1;34mINFO[m] com.google.gson.GsonBuilder:610 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:632 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:616 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:633 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:617 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:618 covered.
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/Gson.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
[[1;34mINFO[m] com.google.gson.Gson:[267, 268, 269, 265] are modified.
[[1;34mINFO[m] com.google.gson.Gson:267 covered.
[[1;34mINFO[m] com.google.gson.Gson:268 covered.
[[1;34mINFO[m] com.google.gson.Gson:269 covered.
[[1;34mINFO[m] com.google.gson.Gson:265 covered.
[[1;34mINFO[m] com.google.gson.Gson:[265, 265, 266, 266, 267, 268] are modified.
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:[574, 642, 679, 800, 816, 826, 839, 854, 873, 696, 704, 733, 741, 575, 575, 577, 578, 578, 579, 579, 578, 582, 582, 583, 584, 585, 585, 585, 586, 586, 586, 590, 590, 583] are modified.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:826 covered.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:578 covered.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:579 covered.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:704 covered.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:[597, 665, 702, 823, 839, 849, 862, 877, 896, 719, 727, 756, 764] are modified.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:877 covered.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:702 covered.
[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters:719 covered.
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
[[1;34mINFO[m] Saving result in /tmp/v1/gson/testsThatExecuteTheChange.csv ...
[[1;34mINFO[m] com.google.gson.functional.CollectionTest;testRawCollectionDeserializationNotAlllowed;testUserCollectionTypeAdapter;testCollectionOfObjectSerialization
com.google.gson.functional.UncategorizedTest;testReturningDerivedClassesDuringDeserialization
com.google.gson.functional.ObjectTest;testJsonObjectSerialization;testArrayOfArraysSerialization;testInnerClassDeserialization;testAnonymousLocalClassesCustomSerialization
com.google.gson.functional.JsonAdapterAnnotationOnClassesTest;testSuperclassTypeAdapterNotInvoked;testRegisteredAdapterOverridesJsonAdapter;testIncorrectTypeAdapterFails;testRegisteredDeserializerOverridesJsonAdapter;testRegisteredSerializerOverridesJsonAdapter
com.google.gson.GsonTest;testClonedTypeAdapterFactoryListsAreIndependent
com.google.gson.functional.FieldNamingTest;testLowerCaseWithDashes;testUpperCamelCaseWithSpaces;testUpperCamelCase;testIdentity;testLowerCaseWithUnderscores
com.google.gson.functional.TypeAdapterPrecedenceTest;testStreamingHierarchicalFollowedByNonstreaming;testStreamingHierarchicalFollowedByNonstreamingHierarchical;testNonstreamingHierarchicalFollowedByNonstreaming;testNonstreamingFollowedByNonstreaming;testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter;testStreamingFollowedByStreaming;testStreamingFollowedByNonstreaming;testStreamingFollowedByNonstreamingHierarchical
com.google.gson.functional.MapAsArrayTypeAdapterTest;testTwoTypesCollapseToOneDeserialize;testMultipleEnableComplexKeyRegistrationHasNoEffect;testSerializeComplexMapWithTypeAdapter;testMapWithTypeVariableDeserialization;testMapWithTypeVariableSerialization
com.google.gson.functional.NullObjectAndFieldTest;testExplicitSerializationOfNulls;testCustomSerializationOfNulls;testPrintPrintingObjectWithNulls;testNullWrappedPrimitiveMemberSerialization;testExplicitSerializationOfNullArrayMembers;testExplicitDeserializationOfNulls;testExplicitSerializationOfNullCollectionMembers;testExplicitSerializationOfNullStringMembers;testTopLevelNullObjectSerialization;testCustomTypeAdapterPassesNullSerialization;testPrintPrintingArraysWithNulls;testNullWrappedPrimitiveMemberDeserialization;testCustomTypeAdapterPassesNullDesrialization;testTopLevelNullObjectDeserialization
com.google.gson.functional.PrintFormattingTest;testJsonObjectWithNullValuesSerialized
com.google.gson.MixedStreamTest;testWriteLenient;testWriteHtmlSafe
com.google.gson.functional.CustomTypeAdaptersTest;testCustomTypeAdapterDoesNotAppliesToSubClasses;testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass;testCustomAdapterInvokedForCollectionElementDeserialization;testCustomAdapterInvokedForMapElementSerializationWithType;testRegisterHierarchyAdapterForDate;testCustomDeserializers;testCustomNestedDeserializers;testEnsureCustomSerializerNotInvokedForNullValues;testEnsureCustomDeserializerNotInvokedForNullValues;testCustomAdapterInvokedForCollectionElementSerializationWithType;testCustomAdapterInvokedForMapElementSerialization;testCustomSerializers;testCustomByteArraySerializer;testCustomNestedSerializers;testCustomSerializerInvokedForPrimitives;testCustomAdapterInvokedForMapElementDeserialization;testCustomAdapterInvokedForCollectionElementSerialization;testCustomByteArrayDeserializerAndInstanceCreator;testCustomDeserializerInvokedForPrimitives
com.google.gson.functional.NamingPolicyTest;testGsonWithNonDefaultFieldNamingPolicyDeserialiation;testGsonWithLowerCaseDotPolicyDeserialiation;testGsonWithLowerCaseUnderscorePolicySerialization;testGsonWithLowerCaseDotPolicySerialization;testGsonWithLowerCaseDashPolicyDeserialiation;testGsonWithSerializedNameFieldNamingPolicySerialization;testGsonWithUpperCamelCaseSpacesPolicySerialiation;testGsonWithNonDefaultFieldNamingPolicySerialization;testGsonWithLowerCaseDashPolicySerialization;testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization;testGsonWithLowerCaseUnderscorePolicyDeserialiation;testDeprecatedNamingStrategy;testGsonWithSerializedNameFieldNamingPolicyDeserialization;testGsonWithUpperCamelCaseSpacesPolicyDeserialiation
com.google.gson.functional.EnumTest;testEnumSubclassWithRegisteredTypeAdapter
com.google.gson.GsonBuilderTest;testTransientFieldExclusion;testCreatingMoreThanOnce;testExcludeFieldsWithModifiers
com.google.gson.functional.ArrayTest;testNullsInArrayWithSerializeNullPropertySetSerialization
com.google.gson.functional.CircularReferenceTest;testDirectedAcyclicGraphDeserialization;testDirectedAcyclicGraphSerialization;testSelfReferenceCustomHandlerSerialization
com.google.gson.functional.MapTest;testInterfaceTypeMap;testMapSubclassDeserialization;testInterfaceTypeMapWithSerializer;testMapSerializationWithNullValueButSerializeNulls;testMapSerializationWithWildcardValues;testGeneralMapField;testCustomSerializerForSpecificMapType;testMapSerializationWithNullValuesSerialized;testSerializeMaps
com.google.gson.functional.ParameterizedTypesTest;testParameterizedTypeWithReaderDeserialization;testParameterizedTypeDeserialization;testParameterizedTypeWithCustomSerializer;testParameterizedTypesWithCustomDeserializer
com.google.gson.functional.CustomSerializerTest;testSerializerReturnsNull;testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances;testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances;testBaseClassSerializerInvokedForBaseClassFields;testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances
com.google.gson.functional.InstanceCreatorTest;testInstanceCreatorReturnsBaseType;testInstanceCreatorForCollectionType;testInstanceCreatorReturnsSubTypeForField;testInstanceCreatorReturnsSubTypeForTopLevelObject;testInstanceCreatorForParametrizedType
com.google.gson.functional.StreamingTypeAdaptersTest;testNullSafe;testSerializeWithCustomTypeAdapter;testDeserializeWithCustomTypeAdapter
com.google.gson.functional.SecurityTest;testNonExecutableJsonDeserialization;testJsonWithNonExectuableTokenWithRegularGsonDeserialization;testNonExecutableJsonSerialization;testJsonWithNonExectuableTokenSerialization;testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization
com.google.gson.functional.CustomDeserializerTest;testCustomDeserializerReturnsNullForArrayElements;testJsonTypeFieldBasedDeserialization;testCustomDeserializerReturnsNullForTopLevelObject;testCustomDeserializerReturnsNull;testCustomDeserializerReturnsNullForArrayElementsForArrayField
com.google.gson.functional.ExclusionStrategyFunctionalTest;testExclusionStrategyWithMode;testExcludeTopLevelClassSerialization;testExclusionStrategySerialization;testExcludeTopLevelClassSerializationDoesNotImpactDeserialization;testExclusionStrategySerializationDoesNotImpactDeserialization;testExcludeTopLevelClassDeserialization;testExclusionStrategySerializationDoesNotImpactSerialization;testExcludeTopLevelClassDeserializationDoesNotImpactSerialization;testExclusionStrategyDeserialization
com.google.gson.functional.EscapingTest;testGsonAcceptsEscapedAndNonEscapedJsonDeserialization
com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest;testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter;testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter
com.google.gson.LongSerializationPolicyTest;testStringLongSerializationIntegration;testDefaultLongSerializationIntegration
com.google.gson.functional.VersioningTest;testVersionedClassesSerialization;testVersionedClassesDeserialization;testIgnoreLaterVersionClassSerialization;testVersionedGsonMixingSinceAndUntilDeserialization;testVersionedGsonMixingSinceAndUntilSerialization;testVersionedUntilSerialization;testVersionedUntilDeserialization;testIgnoreLaterVersionClassDeserialization;testVersionedGsonWithUnversionedClassesDeserialization;testVersionedGsonWithUnversionedClassesSerialization
com.google.gson.OverrideCoreTypeAdaptersTest;testOverrideStringAdapter;testOverrideWrapperBooleanAdapter;testOverridePrimitiveBooleanAdapter
com.google.gson.functional.FieldExclusionTest;testDefaultNestedStaticClassIncluded;testDefaultInnerClassExclusion;testInnerClassExclusion
com.google.gson.GsonTypeAdapterTest;testDeserializerForAbstractClass
com.google.gson.functional.TypeHierarchyAdapterTest;testRegisterSuperTypeFirst;testRegisterSubTypeFirstAllowed;testTypeHierarchy
com.google.gson.functional.ReadersWritersTest;testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls;testTopLevelNullObjectSerializationWithWriterAndSerializeNulls;testTypeMismatchThrowsJsonSyntaxExceptionForReaders
com.google.gson.functional.PrimitiveTest;testLongAsStringSerialization;testNegativeInfinityFloatSerialization;testHtmlCharacterSerialization;testDoubleInfinitySerialization;testBigDecimalInASingleElementArraySerialization;testDoubleArrayDeserialization;testNegativeInfinitySerialization;testLongAsStringDeserialization;testFloatInfinitySerialization;testBigDecimalNoFractAsStringRepresentationDeserialization;testDoubleNaNSerialization;testFloatNaNSerialization
com.google.gson.functional.JavaUtilConcurrentAtomicTest;testAtomicLongWithStringSerializationPolicy;testAtomicLongArrayWithStringSerializationPolicy
com.google.gson.functional.DefaultTypeAdaptersTest;testDefaultCalendarSerialization;testClassSerialization;testOverrideBigIntegerTypeAdapter;testClassDeserialization;testDefaultGregorianCalendarDeserialization;testDefaultDateSerializationUsingBuilder;testOverrideBigDecimalTypeAdapter;testDefaultGregorianCalendarSerialization;testDefaultCalendarDeserialization;testDateSerializationInCollection;testSetSerialization;testDefaultDateDeserializationUsingBuilder;testDateSerializationWithPattern;testDateSerializationWithPatternNotOverridenByTypeAdapter;testDateDeserializationWithPattern
com.google.gson.internal.sql.SqlTypesGsonTest;testTimestampSerialization;testSqlDateSerialization
com.google.gson.functional.JsonTreeTest;testJsonTreeNull
com.google.gson.functional.DelegateTypeAdapterTest;testDelegateInvokedOnStrings
com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest;testSubclassesAutomaticallySerialized
com.google.gson.functional.RawSerializationTest;testCollectionOfPrimitives
com.google.gson.functional.MoreSpecificTypeSerializationTest;testSubclassFields
com.google.gson.functional.JsonParserTest;testExtraCommasInArrays
com.google.gson.functional.JavaUtilTest;testProperties
com.google.gson.functional.JsonArrayTest;testCharPrimitiveAddition
com.google.gson.stream.JsonReaderPathTest;skipObjectValues
[[1;34mINFO[m] Writing Coverage in /tmp/v1/gson/testsThatExecuteTheChange_coverage.csv
[[1;34mINFO[m] com.google.gson.GsonBuilder;14;22

[[1;34mINFO[m] com.google.gson.Gson;4;5

[[1;34mINFO[m] com.google.gson.internal.bind.TypeAdapters;7;35

[[1;34mINFO[m] total;25;62

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  50.814 s
[[1;34mINFO[m] Finished at: 2021-09-22T13:53:16+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] Run Instrumentation - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='Only in /tmp/v1/gson/src/main/java/com/google/gson: DefaultDateTypeAdapter.java
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
--- /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-22 13:20:57.526039619 +0200
@@ -17,7 +17,6 @@
 package com.google.gson;
 
 import java.lang.reflect.Type;
-import java.sql.Timestamp;
 import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -28,8 +27,10 @@
 
 import com.google.gson.internal.$Gson$Preconditions;
 import com.google.gson.internal.Excluder;
+import com.google.gson.internal.bind.DefaultDateTypeAdapter;
 import com.google.gson.internal.bind.TreeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
+import com.google.gson.internal.sql.SqlTypesSupport;
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 
@@ -417,8 +418,8 @@
    * call this method or {@link #setDateFormat(int)} multiple times, but only the last invocation
    * will be used to decide the serialization format.
    *
-   * <p>The date format will be used to serialize and deserialize {@link java.util.Date}, {@link
-   * java.sql.Timestamp} and {@link java.sql.Date}.
+   * <p>The date format will be used to serialize and deserialize {@link java.util.Date} and in case
+   * the {@code java.sql} module is present, also {@link java.sql.Timestamp} and {@link java.sql.Date}.
    *
    * <p>Note that this pattern must abide by the convention provided by {@code SimpleDateFormat}
    * class. See the documentation in {@link java.text.SimpleDateFormat} for more information on
@@ -602,26 +603,35 @@
         this.factories, this.hierarchyFactories, factories);
   }
 
-  @SuppressWarnings("unchecked")
   private void addTypeAdaptersForDate(String datePattern, int dateStyle, int timeStyle,
       List<TypeAdapterFactory> factories) {
-    DefaultDateTypeAdapter dateTypeAdapter;
-    TypeAdapter<Timestamp> timestampTypeAdapter;
-    TypeAdapter<java.sql.Date> javaSqlDateTypeAdapter;
-    if (datePattern != null && !"".equals(datePattern.trim())) {
-      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, datePattern);
-      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, datePattern);
-      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, datePattern);
+    TypeAdapterFactory dateAdapterFactory;
+    boolean sqlTypesSupported = SqlTypesSupport.SUPPORTS_SQL_TYPES;
+    TypeAdapterFactory sqlTimestampAdapterFactory = null;
+    TypeAdapterFactory sqlDateAdapterFactory = null;
+
+    if (datePattern != null && !datePattern.trim().isEmpty()) {
+      dateAdapterFactory = DefaultDateTypeAdapter.DateType.DATE.createAdapterFactory(datePattern);
+
+      if (sqlTypesSupported) {
+        sqlTimestampAdapterFactory = SqlTypesSupport.TIMESTAMP_DATE_TYPE.createAdapterFactory(datePattern);
+        sqlDateAdapterFactory = SqlTypesSupport.DATE_DATE_TYPE.createAdapterFactory(datePattern);
+      }
     } else if (dateStyle != DateFormat.DEFAULT && timeStyle != DateFormat.DEFAULT) {
-      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle, timeStyle);
-      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, dateStyle, timeStyle);
-      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, dateStyle, timeStyle);
+      dateAdapterFactory = DefaultDateTypeAdapter.DateType.DATE.createAdapterFactory(dateStyle, timeStyle);
+
+      if (sqlTypesSupported) {
+        sqlTimestampAdapterFactory = SqlTypesSupport.TIMESTAMP_DATE_TYPE.createAdapterFactory(dateStyle, timeStyle);
+        sqlDateAdapterFactory = SqlTypesSupport.DATE_DATE_TYPE.createAdapterFactory(dateStyle, timeStyle);
+      }
     } else {
       return;
     }
 
-    factories.add(TypeAdapters.newFactory(Date.class, dateTypeAdapter));
-    factories.add(TypeAdapters.newFactory(Timestamp.class, timestampTypeAdapter));
-    factories.add(TypeAdapters.newFactory(java.sql.Date.class, javaSqlDateTypeAdapter));
+    factories.add(dateAdapterFactory);
+    if (sqlTypesSupported) {
+      factories.add(sqlTimestampAdapterFactory);
+      factories.add(sqlDateAdapterFactory);
+    }
   }
 }
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/Gson.java /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
--- /tmp/v1/gson/src/main/java/com/google/gson/Gson.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/Gson.java	2021-09-22 13:20:57.526039619 +0200
@@ -49,9 +49,8 @@
 import com.google.gson.internal.bind.MapTypeAdapterFactory;
 import com.google.gson.internal.bind.ObjectTypeAdapter;
 import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
-import com.google.gson.internal.bind.SqlDateTypeAdapter;
-import com.google.gson.internal.bind.TimeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
+import com.google.gson.internal.sql.SqlTypesSupport;
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 import com.google.gson.stream.JsonToken;
@@ -262,9 +261,13 @@
     factories.add(TypeAdapters.BIT_SET_FACTORY);
     factories.add(DateTypeAdapter.FACTORY);
     factories.add(TypeAdapters.CALENDAR_FACTORY);
-    factories.add(TimeTypeAdapter.FACTORY);
-    factories.add(SqlDateTypeAdapter.FACTORY);
-    factories.add(TypeAdapters.TIMESTAMP_FACTORY);
+
+    if (SqlTypesSupport.SUPPORTS_SQL_TYPES) {
+      factories.add(SqlTypesSupport.TIME_FACTORY);
+      factories.add(SqlTypesSupport.DATE_FACTORY);
+      factories.add(SqlTypesSupport.TIMESTAMP_FACTORY);
+    }
+
     factories.add(ArrayTypeAdapter.FACTORY);
     factories.add(TypeAdapters.CLASS_FACTORY);
 
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-22 13:20:57.526039619 +0200
@@ -339,6 +339,7 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
+
     return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable<?>, Type>());
   }
 
Only in /tmp/v2/gson/src/main/java/com/google/gson/internal/bind: DefaultDateTypeAdapter.java
Only in /tmp/v1/gson/src/main/java/com/google/gson/internal/bind: SqlDateTypeAdapter.java
Only in /tmp/v1/gson/src/main/java/com/google/gson/internal/bind: TimeTypeAdapter.java
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java	2021-09-22 13:50:18.062069640 +0200
@@ -26,12 +26,10 @@
 import java.net.URL;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
-import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.BitSet;
 import java.util.Calendar;
 import java.util.Currency;
-import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.List;
@@ -409,7 +407,7 @@
       out.value(value);
     }
   };
-  
+
   public static final TypeAdapter<BigDecimal> BIG_DECIMAL = new TypeAdapter<BigDecimal>() {
     @Override public BigDecimal read(JsonReader in) throws IOException {
       if (in.peek() == JsonToken.NULL) {
@@ -427,7 +425,7 @@
       out.value(value);
     }
   };
-  
+
   public static final TypeAdapter<BigInteger> BIG_INTEGER = new TypeAdapter<BigInteger>() {
     @Override public BigInteger read(JsonReader in) throws IOException {
       if (in.peek() == JsonToken.NULL) {
@@ -572,27 +570,6 @@
   }.nullSafe();
   public static final TypeAdapterFactory CURRENCY_FACTORY = newFactory(Currency.class, CURRENCY);
 
-  public static final TypeAdapterFactory TIMESTAMP_FACTORY = new TypeAdapterFactory() {
-    @SuppressWarnings("unchecked") // we use a runtime check to make sure the 'T's equal
-    @Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {
-      if (typeToken.getRawType() != Timestamp.class) {
-        return null;
-      }
-
-      final TypeAdapter<Date> dateTypeAdapter = gson.getAdapter(Date.class);
-      return (TypeAdapter<T>) new TypeAdapter<Timestamp>() {
-        @Override public Timestamp read(JsonReader in) throws IOException {
-          Date date = dateTypeAdapter.read(in);
-          return date != null ? new Timestamp(date.getTime()) : null;
-        }
-
-        @Override public void write(JsonWriter out, Timestamp value) throws IOException {
-          dateTypeAdapter.write(out, value);
-        }
-      };
-    }
-  };
-
   public static final TypeAdapter<Calendar> CALENDAR = new TypeAdapter<Calendar>() {
     private static final String YEAR = "year";
     private static final String MONTH = "month";
Only in /tmp/v2/gson/src/main/java/com/google/gson/internal: sql
Only in /tmp/v1/gson/src/test/java/com/google/gson: DefaultDateTypeAdapterTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-22 13:29:51.167654993 +0200
@@ -37,7 +37,6 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
-import com.google.gson.common.MoreAsserts;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.reflect.TypeToken;
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java	2021-09-22 13:44:16.831137343 +0200
@@ -69,12 +69,14 @@
 public class DefaultTypeAdaptersTest extends TestCase {
   private Gson gson;
   private TimeZone oldTimeZone;
+  private Locale oldLocale;
 
   @Override
   protected void setUp() throws Exception {
     super.setUp();
     this.oldTimeZone = TimeZone.getDefault();
     TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
+    this.oldLocale = Locale.getDefault();
     Locale.setDefault(Locale.US);
     gson = new Gson();
   }
@@ -82,6 +84,7 @@
   @Override
   protected void tearDown() throws Exception {
     TimeZone.setDefault(oldTimeZone);
+    Locale.setDefault(oldLocale);
     super.tearDown();
   }
 
@@ -146,7 +149,7 @@
     URI target = gson.fromJson(json, URI.class);
     assertEquals(uriValue, target.toASCIIString());
   }
-  
+
   public void testNullSerialization() throws Exception {
     testNullSerializationAndDeserialization(Boolean.class);
     testNullSerializationAndDeserialization(Byte.class);
@@ -175,14 +178,15 @@
     testNullSerializationAndDeserialization(Date.class);
     testNullSerializationAndDeserialization(GregorianCalendar.class);
     testNullSerializationAndDeserialization(Calendar.class);
-    testNullSerializationAndDeserialization(Time.class);
-    testNullSerializationAndDeserialization(Timestamp.class);
-    testNullSerializationAndDeserialization(java.sql.Date.class);
     testNullSerializationAndDeserialization(Enum.class);
     testNullSerializationAndDeserialization(Class.class);
   }
 
   private void testNullSerializationAndDeserialization(Class<?> c) {
+    testNullSerializationAndDeserialization(gson, c);
+  }
+
+  public static void testNullSerializationAndDeserialization(Gson gson, Class<?> c) {
     assertEquals("null", gson.toJson(null, c));
     assertEquals(null, gson.fromJson("null", c));
   }
@@ -269,7 +273,7 @@
     ClassWithBigInteger actual = gson.fromJson(json, ClassWithBigInteger.class);
     assertEquals(expected.value, actual.value);
   }
-  
+
   public void testOverrideBigIntegerTypeAdapter() throws Exception {
     gson = new GsonBuilder()
         .registerTypeAdapter(BigInteger.class, new NumberAsStringAdapter(BigInteger.class))
@@ -347,60 +351,19 @@
   // Date can not directly be compared with another instance since the deserialization loses the
   // millisecond portion.
   @SuppressWarnings("deprecation")
-  private void assertEqualsDate(Date date, int year, int month, int day) {
+  public static void assertEqualsDate(Date date, int year, int month, int day) {
     assertEquals(year-1900, date.getYear());
     assertEquals(month, date.getMonth());
     assertEquals(day, date.getDate());
   }
 
   @SuppressWarnings("deprecation")
-  private void assertEqualsTime(Date date, int hours, int minutes, int seconds) {
+  public static void assertEqualsTime(Date date, int hours, int minutes, int seconds) {
     assertEquals(hours, date.getHours());
     assertEquals(minutes, date.getMinutes());
     assertEquals(seconds, date.getSeconds());
   }
 
-  public void testDefaultJavaSqlDateSerialization() {
-    java.sql.Date instant = new java.sql.Date(1259875082000L);
-    String json = gson.toJson(instant);
-    assertEquals("\"Dec 3, 2009\"", json);
-  }
-
-  public void testDefaultJavaSqlDateDeserialization() {
-    String json = "'Dec 3, 2009'";
-    java.sql.Date extracted = gson.fromJson(json, java.sql.Date.class);
-    assertEqualsDate(extracted, 2009, 11, 3);
-  }
-
-  public void testDefaultJavaSqlTimestampSerialization() {
-    Timestamp now = new java.sql.Timestamp(1259875082000L);
-    String json = gson.toJson(now);
-    if (JavaVersion.isJava9OrLater()) {
-      assertEquals("\"Dec 3, 2009, 1:18:02 PM\"", json);
-    } else {
-      assertEquals("\"Dec 3, 2009 1:18:02 PM\"", json);
-    }
-  }
-
-  public void testDefaultJavaSqlTimestampDeserialization() {
-    String json = "'Dec 3, 2009 1:18:02 PM'";
-    Timestamp extracted = gson.fromJson(json, Timestamp.class);
-    assertEqualsDate(extracted, 2009, 11, 3);
-    assertEqualsTime(extracted, 13, 18, 2);
-  }
-
-  public void testDefaultJavaSqlTimeSerialization() {
-    Time now = new Time(1259875082000L);
-    String json = gson.toJson(now);
-    assertEquals("\"01:18:02 PM\"", json);
-  }
-
-  public void testDefaultJavaSqlTimeDeserialization() {
-    String json = "'1:18:02 PM'";
-    Time extracted = gson.fromJson(json, Time.class);
-    assertEqualsTime(extracted, 13, 18, 2);
-  }
-
   public void testDefaultDateSerializationUsingBuilder() throws Exception {
     Gson gson = new GsonBuilder().create();
     Date now = new Date(1315806903103L);
@@ -521,42 +484,6 @@
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
-    }
-  }
-
-  // http://code.google.com/p/google-gson/issues/detail?id=230
-  public void testTimestampSerialization() throws Exception {
-    TimeZone defaultTimeZone = TimeZone.getDefault();
-    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-    Locale defaultLocale = Locale.getDefault();
-    Locale.setDefault(Locale.US);
-    try {
-      Timestamp timestamp = new Timestamp(0L);
-      Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
-      String json = gson.toJson(timestamp, Timestamp.class);
-      assertEquals("\"1970-01-01\"", json);
-      assertEquals(0, gson.fromJson("\"1970-01-01\"", Timestamp.class).getTime());
-    } finally {
-      TimeZone.setDefault(defaultTimeZone);
-      Locale.setDefault(defaultLocale);
-    }
-  }
-
-  // http://code.google.com/p/google-gson/issues/detail?id=230
-  public void testSqlDateSerialization() throws Exception {
-    TimeZone defaultTimeZone = TimeZone.getDefault();
-    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-    Locale defaultLocale = Locale.getDefault();
-    Locale.setDefault(Locale.US);
-    try {
-      java.sql.Date sqlDate = new java.sql.Date(0L);
-      Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
-      String json = gson.toJson(sqlDate, Timestamp.class);
-      assertEquals("\"1970-01-01\"", json);
-      assertEquals(0, gson.fromJson("\"1970-01-01\"", java.sql.Date.class).getTime());
-    } finally {
-      TimeZone.setDefault(defaultTimeZone);
-      Locale.setDefault(defaultLocale);
     }
   }
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-22 13:50:18.066069631 +0200
@@ -172,6 +172,7 @@
     int numClasses;
   }
 
+  @SafeVarargs
   private static <T> List<T> createList(T ...items) {
     return Arrays.asList(items);
   }
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal/bind: DefaultDateTypeAdapterTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-22 13:29:51.167654993 +0200
@@ -36,7 +36,7 @@
 
   @SuppressWarnings("unused")
   private static class Foo1<A> {
-	public Foo2<? extends A> foo2;
+    public Foo2<? extends A> foo2;
   }
   @SuppressWarnings("unused")
   private static class Foo2<B> {
@@ -48,6 +48,7 @@
    */
 
   public void testRecursiveResolveSimple() {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);
     assertNotNull(adapter);
   }
@@ -62,6 +63,7 @@
   }
 
   public void testIssue440WeakReference() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<WeakReference> adapter = new Gson().getAdapter(WeakReference.class);
     assertNotNull(adapter);
   }
@@ -105,11 +107,13 @@
   }
 
   public void testRecursiveTypeVariablesResolve1() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType> adapter = new Gson().getAdapter(TestType.class);
     assertNotNull(adapter);
   }
 
   public void testRecursiveTypeVariablesResolve12() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType2> adapter = new Gson().getAdapter(TestType2.class);
     assertNotNull(adapter);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-22 13:20:57.538045801 +0200
@@ -280,6 +280,7 @@
     }
   }
 
+  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-22 13:20:57.538045801 +0200
@@ -140,6 +140,7 @@
     MoreAsserts.assertEqualsAndHashCode(map1, map2);
   }
 
+  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal: sql
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar, /home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar, /home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar, /home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar, /home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar, /home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar, /home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar], classpathV2=[/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar, /home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar, /home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar, /home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar, /home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar, /home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar, /home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar], classpathV1AsString='/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar', classpathV2AsString='/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar', testsList={com.google.gson.functional.CollectionTest=[testRawCollectionDeserializationNotAlllowed, testUserCollectionTypeAdapter, testCollectionOfObjectSerialization], com.google.gson.functional.ParameterizedTypesTest=[testParameterizedTypeWithReaderDeserialization, testParameterizedTypeDeserialization, testParameterizedTypeWithCustomSerializer, testParameterizedTypesWithCustomDeserializer], com.google.gson.functional.NullObjectAndFieldTest=[testExplicitSerializationOfNulls, testCustomSerializationOfNulls, testPrintPrintingObjectWithNulls, testNullWrappedPrimitiveMemberSerialization, testExplicitSerializationOfNullArrayMembers, testExplicitDeserializationOfNulls, testExplicitSerializationOfNullCollectionMembers, testExplicitSerializationOfNullStringMembers, testTopLevelNullObjectSerialization, testCustomTypeAdapterPassesNullSerialization, testPrintPrintingArraysWithNulls, testNullWrappedPrimitiveMemberDeserialization, testCustomTypeAdapterPassesNullDesrialization, testTopLevelNullObjectDeserialization], com.google.gson.functional.EscapingTest=[testGsonAcceptsEscapedAndNonEscapedJsonDeserialization], com.google.gson.functional.UncategorizedTest=[testReturningDerivedClassesDuringDeserialization], com.google.gson.functional.DelegateTypeAdapterTest=[testDelegateInvokedOnStrings], com.google.gson.functional.CustomSerializerTest=[testSerializerReturnsNull, testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances, testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances, testBaseClassSerializerInvokedForBaseClassFields, testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances], com.google.gson.functional.InstanceCreatorTest=[testInstanceCreatorReturnsBaseType, testInstanceCreatorForCollectionType, testInstanceCreatorReturnsSubTypeForField, testInstanceCreatorReturnsSubTypeForTopLevelObject, testInstanceCreatorForParametrizedType], com.google.gson.functional.JsonTreeTest=[testJsonTreeNull], com.google.gson.functional.ObjectTest=[testJsonObjectSerialization, testArrayOfArraysSerialization, testInnerClassDeserialization, testAnonymousLocalClassesCustomSerialization], com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest=[testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter, testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter], com.google.gson.functional.StreamingTypeAdaptersTest=[testNullSafe, testSerializeWithCustomTypeAdapter, testDeserializeWithCustomTypeAdapter], com.google.gson.functional.SecurityTest=[testNonExecutableJsonDeserialization, testJsonWithNonExectuableTokenWithRegularGsonDeserialization, testNonExecutableJsonSerialization, testJsonWithNonExectuableTokenSerialization, testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization], com.google.gson.functional.JsonArrayTest=[testCharPrimitiveAddition], com.google.gson.LongSerializationPolicyTest=[testStringLongSerializationIntegration, testDefaultLongSerializationIntegration], com.google.gson.functional.VersioningTest=[testVersionedClassesSerialization, testVersionedClassesDeserialization, testIgnoreLaterVersionClassSerialization, testVersionedGsonMixingSinceAndUntilDeserialization, testVersionedGsonMixingSinceAndUntilSerialization, testVersionedUntilSerialization, testVersionedUntilDeserialization, testIgnoreLaterVersionClassDeserialization, testVersionedGsonWithUnversionedClassesDeserialization, testVersionedGsonWithUnversionedClassesSerialization], com.google.gson.functional.MoreSpecificTypeSerializationTest=[testSubclassFields], com.google.gson.functional.JsonParserTest=[testExtraCommasInArrays], com.google.gson.functional.PrintFormattingTest=[testJsonObjectWithNullValuesSerialized], com.google.gson.OverrideCoreTypeAdaptersTest=[testOverrideStringAdapter, testOverrideWrapperBooleanAdapter, testOverridePrimitiveBooleanAdapter], com.google.gson.functional.FieldExclusionTest=[testDefaultNestedStaticClassIncluded, testDefaultInnerClassExclusion, testInnerClassExclusion], com.google.gson.GsonTypeAdapterTest=[testDeserializerForAbstractClass], com.google.gson.functional.JsonAdapterAnnotationOnClassesTest=[testSuperclassTypeAdapterNotInvoked, testRegisteredAdapterOverridesJsonAdapter, testIncorrectTypeAdapterFails, testRegisteredDeserializerOverridesJsonAdapter, testRegisteredSerializerOverridesJsonAdapter], com.google.gson.MixedStreamTest=[testWriteLenient, testWriteHtmlSafe], com.google.gson.GsonTest=[testClonedTypeAdapterFactoryListsAreIndependent], com.google.gson.functional.CustomTypeAdaptersTest=[testCustomTypeAdapterDoesNotAppliesToSubClasses, testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass, testCustomAdapterInvokedForCollectionElementDeserialization, testCustomAdapterInvokedForMapElementSerializationWithType, testRegisterHierarchyAdapterForDate, testCustomDeserializers, testCustomNestedDeserializers, testEnsureCustomSerializerNotInvokedForNullValues, testEnsureCustomDeserializerNotInvokedForNullValues, testCustomAdapterInvokedForCollectionElementSerializationWithType, testCustomAdapterInvokedForMapElementSerialization, testCustomSerializers, testCustomByteArraySerializer, testCustomNestedSerializers, testCustomSerializerInvokedForPrimitives, testCustomAdapterInvokedForMapElementDeserialization, testCustomAdapterInvokedForCollectionElementSerialization, testCustomByteArrayDeserializerAndInstanceCreator, testCustomDeserializerInvokedForPrimitives], com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest=[testSubclassesAutomaticallySerialized], com.google.gson.functional.NamingPolicyTest=[testGsonWithNonDefaultFieldNamingPolicyDeserialiation, testGsonWithLowerCaseDotPolicyDeserialiation, testGsonWithLowerCaseUnderscorePolicySerialization, testGsonWithLowerCaseDotPolicySerialization, testGsonWithLowerCaseDashPolicyDeserialiation, testGsonWithSerializedNameFieldNamingPolicySerialization, testGsonWithUpperCamelCaseSpacesPolicySerialiation, testGsonWithNonDefaultFieldNamingPolicySerialization, testGsonWithLowerCaseDashPolicySerialization, testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization, testGsonWithLowerCaseUnderscorePolicyDeserialiation, testDeprecatedNamingStrategy, testGsonWithSerializedNameFieldNamingPolicyDeserialization, testGsonWithUpperCamelCaseSpacesPolicyDeserialiation], com.google.gson.functional.FieldNamingTest=[testLowerCaseWithDashes, testUpperCamelCaseWithSpaces, testUpperCamelCase, testIdentity, testLowerCaseWithUnderscores], com.google.gson.functional.EnumTest=[testEnumSubclassWithRegisteredTypeAdapter], com.google.gson.functional.TypeHierarchyAdapterTest=[testRegisterSuperTypeFirst, testRegisterSubTypeFirstAllowed, testTypeHierarchy], com.google.gson.functional.ReadersWritersTest=[testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls, testTopLevelNullObjectSerializationWithWriterAndSerializeNulls, testTypeMismatchThrowsJsonSyntaxExceptionForReaders], com.google.gson.functional.CustomDeserializerTest=[testCustomDeserializerReturnsNullForArrayElements, testJsonTypeFieldBasedDeserialization, testCustomDeserializerReturnsNullForTopLevelObject, testCustomDeserializerReturnsNull, testCustomDeserializerReturnsNullForArrayElementsForArrayField], com.google.gson.functional.ExclusionStrategyFunctionalTest=[testExclusionStrategyWithMode, testExcludeTopLevelClassSerialization, testExclusionStrategySerialization, testExcludeTopLevelClassSerializationDoesNotImpactDeserialization, testExclusionStrategySerializationDoesNotImpactDeserialization, testExcludeTopLevelClassDeserialization, testExclusionStrategySerializationDoesNotImpactSerialization, testExcludeTopLevelClassDeserializationDoesNotImpactSerialization, testExclusionStrategyDeserialization], com.google.gson.GsonBuilderTest=[testTransientFieldExclusion, testCreatingMoreThanOnce, testExcludeFieldsWithModifiers], com.google.gson.functional.ArrayTest=[testNullsInArrayWithSerializeNullPropertySetSerialization], com.google.gson.functional.CircularReferenceTest=[testDirectedAcyclicGraphDeserialization, testDirectedAcyclicGraphSerialization, testSelfReferenceCustomHandlerSerialization], com.google.gson.stream.JsonReaderPathTest=[skipObjectValues], com.google.gson.functional.TypeAdapterPrecedenceTest=[testStreamingHierarchicalFollowedByNonstreaming, testStreamingHierarchicalFollowedByNonstreamingHierarchical, testNonstreamingHierarchicalFollowedByNonstreaming, testNonstreamingFollowedByNonstreaming, testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter, testStreamingFollowedByStreaming, testStreamingFollowedByNonstreaming, testStreamingFollowedByNonstreamingHierarchical], com.google.gson.functional.RawSerializationTest=[testCollectionOfPrimitives], com.google.gson.functional.MapTest=[testInterfaceTypeMap, testMapSubclassDeserialization, testInterfaceTypeMapWithSerializer, testMapSerializationWithNullValueButSerializeNulls, testMapSerializationWithWildcardValues, testGeneralMapField, testCustomSerializerForSpecificMapType, testMapSerializationWithNullValuesSerialized, testSerializeMaps], com.google.gson.functional.MapAsArrayTypeAdapterTest=[testTwoTypesCollapseToOneDeserialize, testMultipleEnableComplexKeyRegistrationHasNoEffect, testSerializeComplexMapWithTypeAdapter, testMapWithTypeVariableDeserialization, testMapWithTypeVariableSerialization], com.google.gson.functional.JavaUtilTest=[testProperties], com.google.gson.functional.PrimitiveTest=[testLongAsStringSerialization, testNegativeInfinityFloatSerialization, testHtmlCharacterSerialization, testDoubleInfinitySerialization, testBigDecimalInASingleElementArraySerialization, testDoubleArrayDeserialization, testNegativeInfinitySerialization, testLongAsStringDeserialization, testFloatInfinitySerialization, testBigDecimalNoFractAsStringRepresentationDeserialization, testDoubleNaNSerialization, testFloatNaNSerialization], com.google.gson.functional.JavaUtilConcurrentAtomicTest=[testAtomicLongWithStringSerializationPolicy, testAtomicLongArrayWithStringSerializationPolicy], com.google.gson.functional.DefaultTypeAdaptersTest=[testDefaultCalendarSerialization, testClassSerialization, testOverrideBigIntegerTypeAdapter, testClassDeserialization, testDefaultGregorianCalendarDeserialization, testDefaultDateSerializationUsingBuilder, testOverrideBigDecimalTypeAdapter, testDefaultGregorianCalendarSerialization, testDefaultCalendarDeserialization, testDateSerializationInCollection, testSetSerialization, testDefaultDateDeserializationUsingBuilder, testDateSerializationWithPattern, testDateSerializationWithPatternNotOverridenByTypeAdapter, testDateDeserializationWithPattern], com.google.gson.internal.sql.SqlTypesGsonTest=[testTimestampSerialization, testSqlDateSerialization]}, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={selection={package-0/uncore|uJ=14831, instructions=522184, package-0/dram|uJ=88122638, uncore|uJ=14831, cycles=5136978, dram|mW=1669, cache-misses=117922, package|uJ=831376717, branch-misses=0, package-0/core|mW=13602, device|uJ=919499355, core|uJ=718072564, psys|mW=42459, psys|uJ=2241386474, package-0|uJ=831376717, duration|ns=52788656076, branches=530251, core|mW=13602, device|mW=17418, package-0/dram|mW=1669, dram|uJ=88122638, package-0/core|uJ=718072564, cache-reference=416281, package-0/uncore|mW=0, package-0|mW=15749, package|mW=15749, uncore|mW=0}}, reportEnum=NONE}
[info] Instrument version before commit...
[info] Run on /tmp/v1/gson
[INFO] fr.davidson.diff.jjoules.instrumentation.process.junit4.JJoulesProcessor
[INFO] 46 instrumented test classes have been printed!
[INFO] Injecting JUnit-Jjoules in /tmp/v1/gson/pom.xml
[INFO] Output new POM file in /tmp/v1/gson/pom.xml
[info] Instrument version after commit...
[info] Run on /tmp/v2/gson/
[WARNING] warning: @SafeVarargs annotation cannot be applied to non-final instance method assertIterationOrder at /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java:144
[WARNING] warning: @SafeVarargs annotation cannot be applied to non-final instance method assertIterationOrder at /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java:284
[INFO] fr.davidson.diff.jjoules.instrumentation.process.junit4.JJoulesProcessor
[INFO] 77 instrumented test classes have been printed!
[INFO] Injecting JUnit-Jjoules in /tmp/v2/gson//pom.xml
[INFO] Output new POM file in /tmp/v2/gson//pom.xml
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v1/gson/pom.xml clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Specified base directory (/tmp/v1/gson/pom.xml) is a file. Using its parent directory...
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] Run Delta - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='Only in /tmp/v1/gson/src/main/java/com/google/gson: DefaultDateTypeAdapter.java
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
--- /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-22 13:20:57.526039619 +0200
@@ -17,7 +17,6 @@
 package com.google.gson;
 
 import java.lang.reflect.Type;
-import java.sql.Timestamp;
 import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -28,8 +27,10 @@
 
 import com.google.gson.internal.$Gson$Preconditions;
 import com.google.gson.internal.Excluder;
+import com.google.gson.internal.bind.DefaultDateTypeAdapter;
 import com.google.gson.internal.bind.TreeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
+import com.google.gson.internal.sql.SqlTypesSupport;
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 
@@ -417,8 +418,8 @@
    * call this method or {@link #setDateFormat(int)} multiple times, but only the last invocation
    * will be used to decide the serialization format.
    *
-   * <p>The date format will be used to serialize and deserialize {@link java.util.Date}, {@link
-   * java.sql.Timestamp} and {@link java.sql.Date}.
+   * <p>The date format will be used to serialize and deserialize {@link java.util.Date} and in case
+   * the {@code java.sql} module is present, also {@link java.sql.Timestamp} and {@link java.sql.Date}.
    *
    * <p>Note that this pattern must abide by the convention provided by {@code SimpleDateFormat}
    * class. See the documentation in {@link java.text.SimpleDateFormat} for more information on
@@ -602,26 +603,35 @@
         this.factories, this.hierarchyFactories, factories);
   }
 
-  @SuppressWarnings("unchecked")
   private void addTypeAdaptersForDate(String datePattern, int dateStyle, int timeStyle,
       List<TypeAdapterFactory> factories) {
-    DefaultDateTypeAdapter dateTypeAdapter;
-    TypeAdapter<Timestamp> timestampTypeAdapter;
-    TypeAdapter<java.sql.Date> javaSqlDateTypeAdapter;
-    if (datePattern != null && !"".equals(datePattern.trim())) {
-      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, datePattern);
-      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, datePattern);
-      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, datePattern);
+    TypeAdapterFactory dateAdapterFactory;
+    boolean sqlTypesSupported = SqlTypesSupport.SUPPORTS_SQL_TYPES;
+    TypeAdapterFactory sqlTimestampAdapterFactory = null;
+    TypeAdapterFactory sqlDateAdapterFactory = null;
+
+    if (datePattern != null && !datePattern.trim().isEmpty()) {
+      dateAdapterFactory = DefaultDateTypeAdapter.DateType.DATE.createAdapterFactory(datePattern);
+
+      if (sqlTypesSupported) {
+        sqlTimestampAdapterFactory = SqlTypesSupport.TIMESTAMP_DATE_TYPE.createAdapterFactory(datePattern);
+        sqlDateAdapterFactory = SqlTypesSupport.DATE_DATE_TYPE.createAdapterFactory(datePattern);
+      }
     } else if (dateStyle != DateFormat.DEFAULT && timeStyle != DateFormat.DEFAULT) {
-      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle, timeStyle);
-      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, dateStyle, timeStyle);
-      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, dateStyle, timeStyle);
+      dateAdapterFactory = DefaultDateTypeAdapter.DateType.DATE.createAdapterFactory(dateStyle, timeStyle);
+
+      if (sqlTypesSupported) {
+        sqlTimestampAdapterFactory = SqlTypesSupport.TIMESTAMP_DATE_TYPE.createAdapterFactory(dateStyle, timeStyle);
+        sqlDateAdapterFactory = SqlTypesSupport.DATE_DATE_TYPE.createAdapterFactory(dateStyle, timeStyle);
+      }
     } else {
       return;
     }
 
-    factories.add(TypeAdapters.newFactory(Date.class, dateTypeAdapter));
-    factories.add(TypeAdapters.newFactory(Timestamp.class, timestampTypeAdapter));
-    factories.add(TypeAdapters.newFactory(java.sql.Date.class, javaSqlDateTypeAdapter));
+    factories.add(dateAdapterFactory);
+    if (sqlTypesSupported) {
+      factories.add(sqlTimestampAdapterFactory);
+      factories.add(sqlDateAdapterFactory);
+    }
   }
 }
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/Gson.java /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
--- /tmp/v1/gson/src/main/java/com/google/gson/Gson.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/Gson.java	2021-09-22 13:20:57.526039619 +0200
@@ -49,9 +49,8 @@
 import com.google.gson.internal.bind.MapTypeAdapterFactory;
 import com.google.gson.internal.bind.ObjectTypeAdapter;
 import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
-import com.google.gson.internal.bind.SqlDateTypeAdapter;
-import com.google.gson.internal.bind.TimeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
+import com.google.gson.internal.sql.SqlTypesSupport;
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 import com.google.gson.stream.JsonToken;
@@ -262,9 +261,13 @@
     factories.add(TypeAdapters.BIT_SET_FACTORY);
     factories.add(DateTypeAdapter.FACTORY);
     factories.add(TypeAdapters.CALENDAR_FACTORY);
-    factories.add(TimeTypeAdapter.FACTORY);
-    factories.add(SqlDateTypeAdapter.FACTORY);
-    factories.add(TypeAdapters.TIMESTAMP_FACTORY);
+
+    if (SqlTypesSupport.SUPPORTS_SQL_TYPES) {
+      factories.add(SqlTypesSupport.TIME_FACTORY);
+      factories.add(SqlTypesSupport.DATE_FACTORY);
+      factories.add(SqlTypesSupport.TIMESTAMP_FACTORY);
+    }
+
     factories.add(ArrayTypeAdapter.FACTORY);
     factories.add(TypeAdapters.CLASS_FACTORY);
 
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-22 13:20:57.526039619 +0200
@@ -339,6 +339,7 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
+
     return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable<?>, Type>());
   }
 
Only in /tmp/v2/gson/src/main/java/com/google/gson/internal/bind: DefaultDateTypeAdapter.java
Only in /tmp/v1/gson/src/main/java/com/google/gson/internal/bind: SqlDateTypeAdapter.java
Only in /tmp/v1/gson/src/main/java/com/google/gson/internal/bind: TimeTypeAdapter.java
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java	2021-09-22 13:51:44.614135379 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java	2021-09-22 13:50:18.062069640 +0200
@@ -26,12 +26,10 @@
 import java.net.URL;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
-import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.BitSet;
 import java.util.Calendar;
 import java.util.Currency;
-import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.List;
@@ -409,7 +407,7 @@
       out.value(value);
     }
   };
-  
+
   public static final TypeAdapter<BigDecimal> BIG_DECIMAL = new TypeAdapter<BigDecimal>() {
     @Override public BigDecimal read(JsonReader in) throws IOException {
       if (in.peek() == JsonToken.NULL) {
@@ -427,7 +425,7 @@
       out.value(value);
     }
   };
-  
+
   public static final TypeAdapter<BigInteger> BIG_INTEGER = new TypeAdapter<BigInteger>() {
     @Override public BigInteger read(JsonReader in) throws IOException {
       if (in.peek() == JsonToken.NULL) {
@@ -572,27 +570,6 @@
   }.nullSafe();
   public static final TypeAdapterFactory CURRENCY_FACTORY = newFactory(Currency.class, CURRENCY);
 
-  public static final TypeAdapterFactory TIMESTAMP_FACTORY = new TypeAdapterFactory() {
-    @SuppressWarnings("unchecked") // we use a runtime check to make sure the 'T's equal
-    @Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {
-      if (typeToken.getRawType() != Timestamp.class) {
-        return null;
-      }
-
-      final TypeAdapter<Date> dateTypeAdapter = gson.getAdapter(Date.class);
-      return (TypeAdapter<T>) new TypeAdapter<Timestamp>() {
-        @Override public Timestamp read(JsonReader in) throws IOException {
-          Date date = dateTypeAdapter.read(in);
-          return date != null ? new Timestamp(date.getTime()) : null;
-        }
-
-        @Override public void write(JsonWriter out, Timestamp value) throws IOException {
-          dateTypeAdapter.write(out, value);
-        }
-      };
-    }
-  };
-
   public static final TypeAdapter<Calendar> CALENDAR = new TypeAdapter<Calendar>() {
     private static final String YEAR = "year";
     private static final String MONTH = "month";
Only in /tmp/v2/gson/src/main/java/com/google/gson/internal: sql
Only in /tmp/v1/gson/src/test/java/com/google/gson: DefaultDateTypeAdapterTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-22 13:29:51.167654993 +0200
@@ -37,7 +37,6 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
-import com.google.gson.common.MoreAsserts;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.reflect.TypeToken;
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java	2021-09-22 13:44:16.831137343 +0200
@@ -69,12 +69,14 @@
 public class DefaultTypeAdaptersTest extends TestCase {
   private Gson gson;
   private TimeZone oldTimeZone;
+  private Locale oldLocale;
 
   @Override
   protected void setUp() throws Exception {
     super.setUp();
     this.oldTimeZone = TimeZone.getDefault();
     TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
+    this.oldLocale = Locale.getDefault();
     Locale.setDefault(Locale.US);
     gson = new Gson();
   }
@@ -82,6 +84,7 @@
   @Override
   protected void tearDown() throws Exception {
     TimeZone.setDefault(oldTimeZone);
+    Locale.setDefault(oldLocale);
     super.tearDown();
   }
 
@@ -146,7 +149,7 @@
     URI target = gson.fromJson(json, URI.class);
     assertEquals(uriValue, target.toASCIIString());
   }
-  
+
   public void testNullSerialization() throws Exception {
     testNullSerializationAndDeserialization(Boolean.class);
     testNullSerializationAndDeserialization(Byte.class);
@@ -175,14 +178,15 @@
     testNullSerializationAndDeserialization(Date.class);
     testNullSerializationAndDeserialization(GregorianCalendar.class);
     testNullSerializationAndDeserialization(Calendar.class);
-    testNullSerializationAndDeserialization(Time.class);
-    testNullSerializationAndDeserialization(Timestamp.class);
-    testNullSerializationAndDeserialization(java.sql.Date.class);
     testNullSerializationAndDeserialization(Enum.class);
     testNullSerializationAndDeserialization(Class.class);
   }
 
   private void testNullSerializationAndDeserialization(Class<?> c) {
+    testNullSerializationAndDeserialization(gson, c);
+  }
+
+  public static void testNullSerializationAndDeserialization(Gson gson, Class<?> c) {
     assertEquals("null", gson.toJson(null, c));
     assertEquals(null, gson.fromJson("null", c));
   }
@@ -269,7 +273,7 @@
     ClassWithBigInteger actual = gson.fromJson(json, ClassWithBigInteger.class);
     assertEquals(expected.value, actual.value);
   }
-  
+
   public void testOverrideBigIntegerTypeAdapter() throws Exception {
     gson = new GsonBuilder()
         .registerTypeAdapter(BigInteger.class, new NumberAsStringAdapter(BigInteger.class))
@@ -347,60 +351,19 @@
   // Date can not directly be compared with another instance since the deserialization loses the
   // millisecond portion.
   @SuppressWarnings("deprecation")
-  private void assertEqualsDate(Date date, int year, int month, int day) {
+  public static void assertEqualsDate(Date date, int year, int month, int day) {
     assertEquals(year-1900, date.getYear());
     assertEquals(month, date.getMonth());
     assertEquals(day, date.getDate());
   }
 
   @SuppressWarnings("deprecation")
-  private void assertEqualsTime(Date date, int hours, int minutes, int seconds) {
+  public static void assertEqualsTime(Date date, int hours, int minutes, int seconds) {
     assertEquals(hours, date.getHours());
     assertEquals(minutes, date.getMinutes());
     assertEquals(seconds, date.getSeconds());
   }
 
-  public void testDefaultJavaSqlDateSerialization() {
-    java.sql.Date instant = new java.sql.Date(1259875082000L);
-    String json = gson.toJson(instant);
-    assertEquals("\"Dec 3, 2009\"", json);
-  }
-
-  public void testDefaultJavaSqlDateDeserialization() {
-    String json = "'Dec 3, 2009'";
-    java.sql.Date extracted = gson.fromJson(json, java.sql.Date.class);
-    assertEqualsDate(extracted, 2009, 11, 3);
-  }
-
-  public void testDefaultJavaSqlTimestampSerialization() {
-    Timestamp now = new java.sql.Timestamp(1259875082000L);
-    String json = gson.toJson(now);
-    if (JavaVersion.isJava9OrLater()) {
-      assertEquals("\"Dec 3, 2009, 1:18:02 PM\"", json);
-    } else {
-      assertEquals("\"Dec 3, 2009 1:18:02 PM\"", json);
-    }
-  }
-
-  public void testDefaultJavaSqlTimestampDeserialization() {
-    String json = "'Dec 3, 2009 1:18:02 PM'";
-    Timestamp extracted = gson.fromJson(json, Timestamp.class);
-    assertEqualsDate(extracted, 2009, 11, 3);
-    assertEqualsTime(extracted, 13, 18, 2);
-  }
-
-  public void testDefaultJavaSqlTimeSerialization() {
-    Time now = new Time(1259875082000L);
-    String json = gson.toJson(now);
-    assertEquals("\"01:18:02 PM\"", json);
-  }
-
-  public void testDefaultJavaSqlTimeDeserialization() {
-    String json = "'1:18:02 PM'";
-    Time extracted = gson.fromJson(json, Time.class);
-    assertEqualsTime(extracted, 13, 18, 2);
-  }
-
   public void testDefaultDateSerializationUsingBuilder() throws Exception {
     Gson gson = new GsonBuilder().create();
     Date now = new Date(1315806903103L);
@@ -521,42 +484,6 @@
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
-    }
-  }
-
-  // http://code.google.com/p/google-gson/issues/detail?id=230
-  public void testTimestampSerialization() throws Exception {
-    TimeZone defaultTimeZone = TimeZone.getDefault();
-    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-    Locale defaultLocale = Locale.getDefault();
-    Locale.setDefault(Locale.US);
-    try {
-      Timestamp timestamp = new Timestamp(0L);
-      Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
-      String json = gson.toJson(timestamp, Timestamp.class);
-      assertEquals("\"1970-01-01\"", json);
-      assertEquals(0, gson.fromJson("\"1970-01-01\"", Timestamp.class).getTime());
-    } finally {
-      TimeZone.setDefault(defaultTimeZone);
-      Locale.setDefault(defaultLocale);
-    }
-  }
-
-  // http://code.google.com/p/google-gson/issues/detail?id=230
-  public void testSqlDateSerialization() throws Exception {
-    TimeZone defaultTimeZone = TimeZone.getDefault();
-    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-    Locale defaultLocale = Locale.getDefault();
-    Locale.setDefault(Locale.US);
-    try {
-      java.sql.Date sqlDate = new java.sql.Date(0L);
-      Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
-      String json = gson.toJson(sqlDate, Timestamp.class);
-      assertEquals("\"1970-01-01\"", json);
-      assertEquals(0, gson.fromJson("\"1970-01-01\"", java.sql.Date.class).getTime());
-    } finally {
-      TimeZone.setDefault(defaultTimeZone);
-      Locale.setDefault(defaultLocale);
     }
   }
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-22 13:50:18.066069631 +0200
@@ -172,6 +172,7 @@
     int numClasses;
   }
 
+  @SafeVarargs
   private static <T> List<T> createList(T ...items) {
     return Arrays.asList(items);
   }
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal/bind: DefaultDateTypeAdapterTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-22 13:29:51.167654993 +0200
@@ -36,7 +36,7 @@
 
   @SuppressWarnings("unused")
   private static class Foo1<A> {
-	public Foo2<? extends A> foo2;
+    public Foo2<? extends A> foo2;
   }
   @SuppressWarnings("unused")
   private static class Foo2<B> {
@@ -48,6 +48,7 @@
    */
 
   public void testRecursiveResolveSimple() {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);
     assertNotNull(adapter);
   }
@@ -62,6 +63,7 @@
   }
 
   public void testIssue440WeakReference() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<WeakReference> adapter = new Gson().getAdapter(WeakReference.class);
     assertNotNull(adapter);
   }
@@ -105,11 +107,13 @@
   }
 
   public void testRecursiveTypeVariablesResolve1() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType> adapter = new Gson().getAdapter(TestType.class);
     assertNotNull(adapter);
   }
 
   public void testRecursiveTypeVariablesResolve12() throws Exception {
+    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType2> adapter = new Gson().getAdapter(TestType2.class);
     assertNotNull(adapter);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-22 13:20:57.538045801 +0200
@@ -280,6 +280,7 @@
     }
   }
 
+  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-22 13:51:44.618135393 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-22 13:20:57.538045801 +0200
@@ -140,6 +140,7 @@
     MoreAsserts.assertEqualsAndHashCode(map1, map2);
   }
 
+  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal: sql
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar, /home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar, /home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar, /home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar, /home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar, /home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar, /home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, /home/benjamin/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar, /home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar, /home/benjamin/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar, /home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar, /home/benjamin/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar, /home/benjamin/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar], classpathV2=[/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar, /home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar, /home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar, /home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar, /home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar, /home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar, /home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar, /home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar, /home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, /home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar, /home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, /home/benjamin/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar, /home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar, /home/benjamin/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar, /home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar, /home/benjamin/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar, /home/benjamin/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar], classpathV1AsString='/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/benjamin/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/benjamin/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/benjamin/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar', classpathV2AsString='/home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/benjamin/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/benjamin/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/benjamin/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar', testsList={com.google.gson.functional.CollectionTest=[testRawCollectionDeserializationNotAlllowed, testUserCollectionTypeAdapter, testCollectionOfObjectSerialization], com.google.gson.functional.ParameterizedTypesTest=[testParameterizedTypeWithReaderDeserialization, testParameterizedTypeDeserialization, testParameterizedTypeWithCustomSerializer, testParameterizedTypesWithCustomDeserializer], com.google.gson.functional.NullObjectAndFieldTest=[testExplicitSerializationOfNulls, testCustomSerializationOfNulls, testPrintPrintingObjectWithNulls, testNullWrappedPrimitiveMemberSerialization, testExplicitSerializationOfNullArrayMembers, testExplicitDeserializationOfNulls, testExplicitSerializationOfNullCollectionMembers, testExplicitSerializationOfNullStringMembers, testTopLevelNullObjectSerialization, testCustomTypeAdapterPassesNullSerialization, testPrintPrintingArraysWithNulls, testNullWrappedPrimitiveMemberDeserialization, testCustomTypeAdapterPassesNullDesrialization, testTopLevelNullObjectDeserialization], com.google.gson.functional.EscapingTest=[testGsonAcceptsEscapedAndNonEscapedJsonDeserialization], com.google.gson.functional.UncategorizedTest=[testReturningDerivedClassesDuringDeserialization], com.google.gson.functional.DelegateTypeAdapterTest=[testDelegateInvokedOnStrings], com.google.gson.functional.CustomSerializerTest=[testSerializerReturnsNull, testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances, testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances, testBaseClassSerializerInvokedForBaseClassFields, testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances], com.google.gson.functional.InstanceCreatorTest=[testInstanceCreatorReturnsBaseType, testInstanceCreatorForCollectionType, testInstanceCreatorReturnsSubTypeForField, testInstanceCreatorReturnsSubTypeForTopLevelObject, testInstanceCreatorForParametrizedType], com.google.gson.functional.JsonTreeTest=[testJsonTreeNull], com.google.gson.functional.ObjectTest=[testJsonObjectSerialization, testArrayOfArraysSerialization, testInnerClassDeserialization, testAnonymousLocalClassesCustomSerialization], com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest=[testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter, testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter], com.google.gson.functional.StreamingTypeAdaptersTest=[testNullSafe, testSerializeWithCustomTypeAdapter, testDeserializeWithCustomTypeAdapter], com.google.gson.functional.SecurityTest=[testNonExecutableJsonDeserialization, testJsonWithNonExectuableTokenWithRegularGsonDeserialization, testNonExecutableJsonSerialization, testJsonWithNonExectuableTokenSerialization, testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization], com.google.gson.functional.JsonArrayTest=[testCharPrimitiveAddition], com.google.gson.LongSerializationPolicyTest=[testStringLongSerializationIntegration, testDefaultLongSerializationIntegration], com.google.gson.functional.VersioningTest=[testVersionedClassesSerialization, testVersionedClassesDeserialization, testIgnoreLaterVersionClassSerialization, testVersionedGsonMixingSinceAndUntilDeserialization, testVersionedGsonMixingSinceAndUntilSerialization, testVersionedUntilSerialization, testVersionedUntilDeserialization, testIgnoreLaterVersionClassDeserialization, testVersionedGsonWithUnversionedClassesDeserialization, testVersionedGsonWithUnversionedClassesSerialization], com.google.gson.functional.MoreSpecificTypeSerializationTest=[testSubclassFields], com.google.gson.functional.JsonParserTest=[testExtraCommasInArrays], com.google.gson.functional.PrintFormattingTest=[testJsonObjectWithNullValuesSerialized], com.google.gson.OverrideCoreTypeAdaptersTest=[testOverrideStringAdapter, testOverrideWrapperBooleanAdapter, testOverridePrimitiveBooleanAdapter], com.google.gson.functional.FieldExclusionTest=[testDefaultNestedStaticClassIncluded, testDefaultInnerClassExclusion, testInnerClassExclusion], com.google.gson.GsonTypeAdapterTest=[testDeserializerForAbstractClass], com.google.gson.functional.JsonAdapterAnnotationOnClassesTest=[testSuperclassTypeAdapterNotInvoked, testRegisteredAdapterOverridesJsonAdapter, testIncorrectTypeAdapterFails, testRegisteredDeserializerOverridesJsonAdapter, testRegisteredSerializerOverridesJsonAdapter], com.google.gson.MixedStreamTest=[testWriteLenient, testWriteHtmlSafe], com.google.gson.GsonTest=[testClonedTypeAdapterFactoryListsAreIndependent], com.google.gson.functional.CustomTypeAdaptersTest=[testCustomTypeAdapterDoesNotAppliesToSubClasses, testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass, testCustomAdapterInvokedForCollectionElementDeserialization, testCustomAdapterInvokedForMapElementSerializationWithType, testRegisterHierarchyAdapterForDate, testCustomDeserializers, testCustomNestedDeserializers, testEnsureCustomSerializerNotInvokedForNullValues, testEnsureCustomDeserializerNotInvokedForNullValues, testCustomAdapterInvokedForCollectionElementSerializationWithType, testCustomAdapterInvokedForMapElementSerialization, testCustomSerializers, testCustomByteArraySerializer, testCustomNestedSerializers, testCustomSerializerInvokedForPrimitives, testCustomAdapterInvokedForMapElementDeserialization, testCustomAdapterInvokedForCollectionElementSerialization, testCustomByteArrayDeserializerAndInstanceCreator, testCustomDeserializerInvokedForPrimitives], com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest=[testSubclassesAutomaticallySerialized], com.google.gson.functional.NamingPolicyTest=[testGsonWithNonDefaultFieldNamingPolicyDeserialiation, testGsonWithLowerCaseDotPolicyDeserialiation, testGsonWithLowerCaseUnderscorePolicySerialization, testGsonWithLowerCaseDotPolicySerialization, testGsonWithLowerCaseDashPolicyDeserialiation, testGsonWithSerializedNameFieldNamingPolicySerialization, testGsonWithUpperCamelCaseSpacesPolicySerialiation, testGsonWithNonDefaultFieldNamingPolicySerialization, testGsonWithLowerCaseDashPolicySerialization, testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization, testGsonWithLowerCaseUnderscorePolicyDeserialiation, testDeprecatedNamingStrategy, testGsonWithSerializedNameFieldNamingPolicyDeserialization, testGsonWithUpperCamelCaseSpacesPolicyDeserialiation], com.google.gson.functional.FieldNamingTest=[testLowerCaseWithDashes, testUpperCamelCaseWithSpaces, testUpperCamelCase, testIdentity, testLowerCaseWithUnderscores], com.google.gson.functional.EnumTest=[testEnumSubclassWithRegisteredTypeAdapter], com.google.gson.functional.TypeHierarchyAdapterTest=[testRegisterSuperTypeFirst, testRegisterSubTypeFirstAllowed, testTypeHierarchy], com.google.gson.functional.ReadersWritersTest=[testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls, testTopLevelNullObjectSerializationWithWriterAndSerializeNulls, testTypeMismatchThrowsJsonSyntaxExceptionForReaders], com.google.gson.functional.CustomDeserializerTest=[testCustomDeserializerReturnsNullForArrayElements, testJsonTypeFieldBasedDeserialization, testCustomDeserializerReturnsNullForTopLevelObject, testCustomDeserializerReturnsNull, testCustomDeserializerReturnsNullForArrayElementsForArrayField], com.google.gson.functional.ExclusionStrategyFunctionalTest=[testExclusionStrategyWithMode, testExcludeTopLevelClassSerialization, testExclusionStrategySerialization, testExcludeTopLevelClassSerializationDoesNotImpactDeserialization, testExclusionStrategySerializationDoesNotImpactDeserialization, testExcludeTopLevelClassDeserialization, testExclusionStrategySerializationDoesNotImpactSerialization, testExcludeTopLevelClassDeserializationDoesNotImpactSerialization, testExclusionStrategyDeserialization], com.google.gson.GsonBuilderTest=[testTransientFieldExclusion, testCreatingMoreThanOnce, testExcludeFieldsWithModifiers], com.google.gson.functional.ArrayTest=[testNullsInArrayWithSerializeNullPropertySetSerialization], com.google.gson.functional.CircularReferenceTest=[testDirectedAcyclicGraphDeserialization, testDirectedAcyclicGraphSerialization, testSelfReferenceCustomHandlerSerialization], com.google.gson.stream.JsonReaderPathTest=[skipObjectValues], com.google.gson.functional.TypeAdapterPrecedenceTest=[testStreamingHierarchicalFollowedByNonstreaming, testStreamingHierarchicalFollowedByNonstreamingHierarchical, testNonstreamingHierarchicalFollowedByNonstreaming, testNonstreamingFollowedByNonstreaming, testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter, testStreamingFollowedByStreaming, testStreamingFollowedByNonstreaming, testStreamingFollowedByNonstreamingHierarchical], com.google.gson.functional.RawSerializationTest=[testCollectionOfPrimitives], com.google.gson.functional.MapTest=[testInterfaceTypeMap, testMapSubclassDeserialization, testInterfaceTypeMapWithSerializer, testMapSerializationWithNullValueButSerializeNulls, testMapSerializationWithWildcardValues, testGeneralMapField, testCustomSerializerForSpecificMapType, testMapSerializationWithNullValuesSerialized, testSerializeMaps], com.google.gson.functional.MapAsArrayTypeAdapterTest=[testTwoTypesCollapseToOneDeserialize, testMultipleEnableComplexKeyRegistrationHasNoEffect, testSerializeComplexMapWithTypeAdapter, testMapWithTypeVariableDeserialization, testMapWithTypeVariableSerialization], com.google.gson.functional.JavaUtilTest=[testProperties], com.google.gson.functional.PrimitiveTest=[testLongAsStringSerialization, testNegativeInfinityFloatSerialization, testHtmlCharacterSerialization, testDoubleInfinitySerialization, testBigDecimalInASingleElementArraySerialization, testDoubleArrayDeserialization, testNegativeInfinitySerialization, testLongAsStringDeserialization, testFloatInfinitySerialization, testBigDecimalNoFractAsStringRepresentationDeserialization, testDoubleNaNSerialization, testFloatNaNSerialization], com.google.gson.functional.JavaUtilConcurrentAtomicTest=[testAtomicLongWithStringSerializationPolicy, testAtomicLongArrayWithStringSerializationPolicy], com.google.gson.functional.DefaultTypeAdaptersTest=[testDefaultCalendarSerialization, testClassSerialization, testOverrideBigIntegerTypeAdapter, testClassDeserialization, testDefaultGregorianCalendarDeserialization, testDefaultDateSerializationUsingBuilder, testOverrideBigDecimalTypeAdapter, testDefaultGregorianCalendarSerialization, testDefaultCalendarDeserialization, testDateSerializationInCollection, testSetSerialization, testDefaultDateDeserializationUsingBuilder, testDateSerializationWithPattern, testDateSerializationWithPatternNotOverridenByTypeAdapter, testDateDeserializationWithPattern], com.google.gson.internal.sql.SqlTypesGsonTest=[testTimestampSerialization, testSqlDateSerialization]}, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={selection={package-0/uncore|uJ=14831, instructions=522184, package-0/dram|uJ=88122638, uncore|uJ=14831, cycles=5136978, dram|mW=1669, cache-misses=117922, package|uJ=831376717, branch-misses=0, package-0/core|mW=13602, device|uJ=919499355, core|uJ=718072564, psys|mW=42459, psys|uJ=2241386474, package-0|uJ=831376717, duration|ns=52788656076, branches=530251, core|mW=13602, device|mW=17418, package-0/dram|mW=1669, dram|uJ=88122638, package-0/core|uJ=718072564, cache-reference=416281, package-0/uncore|mW=0, package-0|mW=15749, package|mW=15749, uncore|mW=0}, instrumentation={package-0/uncore|uJ=0, instructions=44206621570, package-0/dram|uJ=20300302, uncore|uJ=0, cycles=27819155575, dram|mW=1458, cache-misses=301775560, package|uJ=220297593, branch-misses=88464805, package-0/core|mW=13359, device|uJ=240597895, core|uJ=185972241, psys|mW=42685, psys|uJ=594221624, package-0|uJ=220297593, duration|ns=13920898302, branches=7802301855, core|mW=13359, device|mW=17283, package-0/dram|mW=1458, dram|uJ=20300302, package-0/core|uJ=185972241, cache-reference=1540664153, package-0/uncore|mW=0, package-0|mW=15824, package|mW=15824, uncore|mW=0}}, reportEnum=NONE}
[INFO] Path to runner Classes: /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.5.2/junit-jupiter-api-5.5.2.jar
[INFO] /home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar
[INFO] /tmp/v1/gson
[INFO] Run: [java, -classpath, /home/benjamin/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/benjamin/.m2/repository/com/github/wvengen/proguard-maven-plugin/2.4.0/proguard-maven-plugin-2.4.0.jar:/home/benjamin/.m2/repository/org/apache/ant/ant/1.10.9/ant-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/ant/ant-launcher/1.10.9/ant-launcher-1.10.9.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-archiver/2.4/maven-archiver-2.4.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact/2.0/maven-artifact-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-model/2.0/maven-model-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-project/2.0/maven-project-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-profile/2.0/maven-profile-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-artifact-manager/2.0/maven-artifact-manager-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-repository-metadata/2.0/maven-repository-metadata-2.0.jar:/home/benjamin/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-5/wagon-provider-api-1.0-alpha-5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-8/plexus-container-default-1.0-alpha-8.jar:/home/benjamin/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-11/plexus-archiver-1.0-alpha-11.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-api/1.0-alpha-15/plexus-component-api-1.0-alpha-15.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-io/1.0-alpha-3/plexus-io-1.0-alpha-3.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/1.4.9/plexus-utils-1.4.9.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.6/plexus-interpolation-1.6.jar:/home/benjamin/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/home/benjamin/.m2/repository/org/apache/maven/maven-plugin-api/3.1.1/maven-plugin-api-3.1.1.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.0.0.M5/org.eclipse.sisu.plexus-0.0.0.M5.jar:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:/home/benjamin/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/benjamin/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/benjamin/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/benjamin/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M5/org.eclipse.sisu.inject-0.0.0.M5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/benjamin/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/benjamin/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/benjamin/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v1/gson/target/classes:/tmp/v1/gson/target/test-classes:/home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.CollectionTest:com.google.gson.functional.ParameterizedTypesTest:com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.EscapingTest:com.google.gson.functional.UncategorizedTest:com.google.gson.functional.DelegateTypeAdapterTest:com.google.gson.functional.CustomSerializerTest:com.google.gson.functional.InstanceCreatorTest:com.google.gson.functional.JsonTreeTest:com.google.gson.functional.ObjectTest:com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest:com.google.gson.functional.StreamingTypeAdaptersTest:com.google.gson.functional.SecurityTest:com.google.gson.functional.JsonArrayTest:com.google.gson.LongSerializationPolicyTest:com.google.gson.functional.VersioningTest:com.google.gson.functional.MoreSpecificTypeSerializationTest:com.google.gson.functional.JsonParserTest:com.google.gson.functional.PrintFormattingTest:com.google.gson.OverrideCoreTypeAdaptersTest:com.google.gson.functional.FieldExclusionTest:com.google.gson.GsonTypeAdapterTest:com.google.gson.functional.JsonAdapterAnnotationOnClassesTest:com.google.gson.MixedStreamTest:com.google.gson.GsonTest:com.google.gson.functional.CustomTypeAdaptersTest:com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest:com.google.gson.functional.NamingPolicyTest:com.google.gson.functional.FieldNamingTest:com.google.gson.functional.EnumTest:com.google.gson.functional.TypeHierarchyAdapterTest:com.google.gson.functional.ReadersWritersTest:com.google.gson.functional.CustomDeserializerTest:com.google.gson.functional.ExclusionStrategyFunctionalTest:com.google.gson.GsonBuilderTest:com.google.gson.functional.ArrayTest:com.google.gson.functional.CircularReferenceTest:com.google.gson.stream.JsonReaderPathTest:com.google.gson.functional.TypeAdapterPrecedenceTest:com.google.gson.functional.RawSerializationTest:com.google.gson.functional.MapTest:com.google.gson.functional.MapAsArrayTypeAdapterTest:com.google.gson.functional.JavaUtilTest:com.google.gson.functional.PrimitiveTest:com.google.gson.functional.JavaUtilConcurrentAtomicTest:com.google.gson.functional.DefaultTypeAdaptersTest:com.google.gson.internal.sql.SqlTypesGsonTest, --tests, testRawCollectionDeserializationNotAlllowed:testUserCollectionTypeAdapter:testCollectionOfObjectSerialization:testParameterizedTypeWithReaderDeserialization:testParameterizedTypeDeserialization:testParameterizedTypeWithCustomSerializer:testParameterizedTypesWithCustomDeserializer:testExplicitSerializationOfNulls:testCustomSerializationOfNulls:testPrintPrintingObjectWithNulls:testNullWrappedPrimitiveMemberSerialization:testExplicitSerializationOfNullArrayMembers:testExplicitDeserializationOfNulls:testExplicitSerializationOfNullCollectionMembers:testExplicitSerializationOfNullStringMembers:testTopLevelNullObjectSerialization:testCustomTypeAdapterPassesNullSerialization:testPrintPrintingArraysWithNulls:testNullWrappedPrimitiveMemberDeserialization:testCustomTypeAdapterPassesNullDesrialization:testTopLevelNullObjectDeserialization:testGsonAcceptsEscapedAndNonEscapedJsonDeserialization:testReturningDerivedClassesDuringDeserialization:testDelegateInvokedOnStrings:testSerializerReturnsNull:testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances:testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances:testBaseClassSerializerInvokedForBaseClassFields:testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances:testInstanceCreatorReturnsBaseType:testInstanceCreatorForCollectionType:testInstanceCreatorReturnsSubTypeForField:testInstanceCreatorReturnsSubTypeForTopLevelObject:testInstanceCreatorForParametrizedType:testJsonTreeNull:testJsonObjectSerialization:testArrayOfArraysSerialization:testInnerClassDeserialization:testAnonymousLocalClassesCustomSerialization:testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter:testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter:testNullSafe:testSerializeWithCustomTypeAdapter:testDeserializeWithCustomTypeAdapter:testNonExecutableJsonDeserialization:testJsonWithNonExectuableTokenWithRegularGsonDeserialization:testNonExecutableJsonSerialization:testJsonWithNonExectuableTokenSerialization:testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization:testCharPrimitiveAddition:testStringLongSerializationIntegration:testDefaultLongSerializationIntegration:testVersionedClassesSerialization:testVersionedClassesDeserialization:testIgnoreLaterVersionClassSerialization:testVersionedGsonMixingSinceAndUntilDeserialization:testVersionedGsonMixingSinceAndUntilSerialization:testVersionedUntilSerialization:testVersionedUntilDeserialization:testIgnoreLaterVersionClassDeserialization:testVersionedGsonWithUnversionedClassesDeserialization:testVersionedGsonWithUnversionedClassesSerialization:testSubclassFields:testExtraCommasInArrays:testJsonObjectWithNullValuesSerialized:testOverrideStringAdapter:testOverrideWrapperBooleanAdapter:testOverridePrimitiveBooleanAdapter:testDefaultNestedStaticClassIncluded:testDefaultInnerClassExclusion:testInnerClassExclusion:testDeserializerForAbstractClass:testSuperclassTypeAdapterNotInvoked:testRegisteredAdapterOverridesJsonAdapter:testIncorrectTypeAdapterFails:testRegisteredDeserializerOverridesJsonAdapter:testRegisteredSerializerOverridesJsonAdapter:testWriteLenient:testWriteHtmlSafe:testClonedTypeAdapterFactoryListsAreIndependent:testCustomTypeAdapterDoesNotAppliesToSubClasses:testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass:testCustomAdapterInvokedForCollectionElementDeserialization:testCustomAdapterInvokedForMapElementSerializationWithType:testRegisterHierarchyAdapterForDate:testCustomDeserializers:testCustomNestedDeserializers:testEnsureCustomSerializerNotInvokedForNullValues:testEnsureCustomDeserializerNotInvokedForNullValues:testCustomAdapterInvokedForCollectionElementSerializationWithType:testCustomAdapterInvokedForMapElementSerialization:testCustomSerializers:testCustomByteArraySerializer:testCustomNestedSerializers:testCustomSerializerInvokedForPrimitives:testCustomAdapterInvokedForMapElementDeserialization:testCustomAdapterInvokedForCollectionElementSerialization:testCustomByteArrayDeserializerAndInstanceCreator:testCustomDeserializerInvokedForPrimitives:testSubclassesAutomaticallySerialized:testGsonWithNonDefaultFieldNamingPolicyDeserialiation:testGsonWithLowerCaseDotPolicyDeserialiation:testGsonWithLowerCaseUnderscorePolicySerialization:testGsonWithLowerCaseDotPolicySerialization:testGsonWithLowerCaseDashPolicyDeserialiation:testGsonWithSerializedNameFieldNamingPolicySerialization:testGsonWithUpperCamelCaseSpacesPolicySerialiation:testGsonWithNonDefaultFieldNamingPolicySerialization:testGsonWithLowerCaseDashPolicySerialization:testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization:testGsonWithLowerCaseUnderscorePolicyDeserialiation:testDeprecatedNamingStrategy:testGsonWithSerializedNameFieldNamingPolicyDeserialization:testGsonWithUpperCamelCaseSpacesPolicyDeserialiation:testLowerCaseWithDashes:testUpperCamelCaseWithSpaces:testUpperCamelCase:testIdentity:testLowerCaseWithUnderscores:testEnumSubclassWithRegisteredTypeAdapter:testRegisterSuperTypeFirst:testRegisterSubTypeFirstAllowed:testTypeHierarchy:testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls:testTopLevelNullObjectSerializationWithWriterAndSerializeNulls:testTypeMismatchThrowsJsonSyntaxExceptionForReaders:testCustomDeserializerReturnsNullForArrayElements:testJsonTypeFieldBasedDeserialization:testCustomDeserializerReturnsNullForTopLevelObject:testCustomDeserializerReturnsNull:testCustomDeserializerReturnsNullForArrayElementsForArrayField:testExclusionStrategyWithMode:testExcludeTopLevelClassSerialization:testExclusionStrategySerialization:testExcludeTopLevelClassSerializationDoesNotImpactDeserialization:testExclusionStrategySerializationDoesNotImpactDeserialization:testExcludeTopLevelClassDeserialization:testExclusionStrategySerializationDoesNotImpactSerialization:testExcludeTopLevelClassDeserializationDoesNotImpactSerialization:testExclusionStrategyDeserialization:testTransientFieldExclusion:testCreatingMoreThanOnce:testExcludeFieldsWithModifiers:testNullsInArrayWithSerializeNullPropertySetSerialization:testDirectedAcyclicGraphDeserialization:testDirectedAcyclicGraphSerialization:testSelfReferenceCustomHandlerSerialization:skipObjectValues:testStreamingHierarchicalFollowedByNonstreaming:testStreamingHierarchicalFollowedByNonstreamingHierarchical:testNonstreamingHierarchicalFollowedByNonstreaming:testNonstreamingFollowedByNonstreaming:testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter:testStreamingFollowedByStreaming:testStreamingFollowedByNonstreaming:testStreamingFollowedByNonstreamingHierarchical:testCollectionOfPrimitives:testInterfaceTypeMap:testMapSubclassDeserialization:testInterfaceTypeMapWithSerializer:testMapSerializationWithNullValueButSerializeNulls:testMapSerializationWithWildcardValues:testGeneralMapField:testCustomSerializerForSpecificMapType:testMapSerializationWithNullValuesSerialized:testSerializeMaps:testTwoTypesCollapseToOneDeserialize:testMultipleEnableComplexKeyRegistrationHasNoEffect:testSerializeComplexMapWithTypeAdapter:testMapWithTypeVariableDeserialization:testMapWithTypeVariableSerialization:testProperties:testLongAsStringSerialization:testNegativeInfinityFloatSerialization:testHtmlCharacterSerialization:testDoubleInfinitySerialization:testBigDecimalInASingleElementArraySerialization:testDoubleArrayDeserialization:testNegativeInfinitySerialization:testLongAsStringDeserialization:testFloatInfinitySerialization:testBigDecimalNoFractAsStringRepresentationDeserialization:testDoubleNaNSerialization:testFloatNaNSerialization:testAtomicLongWithStringSerializationPolicy:testAtomicLongArrayWithStringSerializationPolicy:testDefaultCalendarSerialization:testClassSerialization:testOverrideBigIntegerTypeAdapter:testClassDeserialization:testDefaultGregorianCalendarDeserialization:testDefaultDateSerializationUsingBuilder:testOverrideBigDecimalTypeAdapter:testDefaultGregorianCalendarSerialization:testDefaultCalendarDeserialization:testDateSerializationInCollection:testSetSerialization:testDefaultDateDeserializationUsingBuilder:testDateSerializationWithPattern:testDateSerializationWithPatternNotOverridenByTypeAdapter:testDateDeserializationWithPattern:testTimestampSerialization:testSqlDateSerialization]
