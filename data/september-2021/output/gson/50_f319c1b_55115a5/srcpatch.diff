diff -ru /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-30 15:31:33.012519872 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-30 15:31:33.016519881 +0200
@@ -20,6 +20,9 @@
 
 import com.google.gson.common.MoreAsserts;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
 /**
  * @author Jesse Wilson
  */
@@ -99,4 +102,65 @@
     assertEquals(1, original.get(0).getAsJsonArray().size());
     assertEquals(0, copy.get(0).getAsJsonArray().size());
   }
+
+  public void testFailedGetArrayValues() {
+    String arrayStr = "[" + "true," + "false," + "\"true\"," + "\"false\"," + "\"hello\"," + "23.45e-4," + "\"23.45\"," + "42," + "\"43\"," + "[" + "\"world\"" + "]," + "{" + "\"key1\":\"value1\"," + "\"key2\":\"value2\"," + "\"key3\":\"value3\"," + "\"key4\":\"value4\"" + "}," + "0," + "\"-1\"" + "]";
+    JsonArray jsonArray = (JsonArray) JsonParser.parseString(arrayStr);
+    try {
+      jsonArray.get(10).getAsBoolean();
+      assertTrue("expected getBoolean to fail", false);
+    } catch (UnsupportedOperationException e) {
+      assertEquals("Expected an exception message",
+              "JsonObject",e.getMessage());
+    }
+    try {
+      jsonArray.get(-1);
+      assertTrue("expected get to fail", false);
+    } catch (IndexOutOfBoundsException e) {
+      assertEquals("Expected an exception message",
+              "Index -1 out of bounds for length 13",e.getMessage());
+    }
+    try {
+      jsonArray.get(4).getAsDouble();
+      assertTrue("expected getDouble to fail", false);
+    } catch (NumberFormatException e) {
+      assertEquals("Expected an exception message",
+              "For input string: \"hello\"",e.getMessage());
+    }
+    try {
+      jsonArray.get(4).getAsInt();
+      assertTrue("expected getInt to fail", false);
+    } catch (NumberFormatException e) {
+      assertEquals("Expected an exception message",
+              "For input string: \"hello\"",e.getMessage());
+    }
+    try {
+      jsonArray.get(4).getAsJsonArray();
+      assertTrue("expected getJSONArray to fail", false);
+    } catch (IllegalStateException e) {
+      assertEquals("Expected an exception message",
+              "Not a JSON Array: \"hello\"",e.getMessage());
+    }
+    try {
+      jsonArray.get(4).getAsJsonObject();
+      assertTrue("expected getJSONObject to fail", false);
+    } catch (IllegalStateException e) {
+      assertEquals("Expected an exception message",
+              "Not a JSON Object: \"hello\"",e.getMessage());
+    }
+    try {
+      jsonArray.get(4).getAsLong();
+      assertTrue("expected getLong to fail", false);
+    } catch (NumberFormatException e) {
+      assertEquals("Expected an exception message",
+              "For input string: \"hello\"",e.getMessage());
+    }
+    try {
+      jsonArray.get(10).getAsString();
+      assertTrue("expected getString to fail", false);
+    } catch (UnsupportedOperationException e) {
+      assertEquals("Expected an exception message",
+              "JsonObject",e.getMessage());
+    }
+  }
 }
