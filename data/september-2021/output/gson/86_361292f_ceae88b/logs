[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.7-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 46, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ---------------------< com.google.code.gson:gson >----------------------
[INFO] Building Gson 2.8.7-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ gson ---
[INFO] Deleting /tmp/v1/gson/target
[INFO] 
[INFO] --- diff-jjoules:0.0.1-SNAPSHOT:diff-jjoules (default-cli) @ gson ---
[INFO] Running on:
[INFO] /tmp/v1/gson
[INFO] /tmp/v2/gson/
[INFO] Enable JUnit4 mode
[WARNING] No path to diff file has been specified.
[WARNING] I'll compute a diff file using the UNIX diff command
[WARNING] You may encounter troubles.
[WARNING] If so, please specify a path to a correct diff file
[WARNING] or implement a new way to compute a diff file.
[INFO] Computing the diff with diff commnd line
[INFO] The diff will be computed between:
[INFO] /tmp/v1/gson/src and 
[INFO] /tmp/v2/gson/src
[INFO] Executing: diff -ru /tmp/v1/gson/src /tmp/v2/gson/src from /tmp/v1/gson/src
[INFO] Run DiffJJoules - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='diff -ru /tmp/v1/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java /tmp/v2/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
--- /tmp/v1/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	2021-09-23 11:15:16.790115509 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	2021-09-23 11:15:16.818116047 +0200
@@ -41,52 +41,11 @@
  * @author Inderjeet Singh
  * @author Joel Leitch
  */
-final class DefaultDateTypeAdapter<T extends Date> extends TypeAdapter<T> {
-  private static final String SIMPLE_NAME = "DefaultDateTypeAdapter";
-
-  static abstract class DateType<T extends Date> {
-    private DateType() {
-    }
-
-    public static final DateType<Date> DATE = new DateType<Date>() {
-      @Override
-      protected Date deserialize(Date date) {
-        return date;
-      }
-    };
-    public static final DateType<java.sql.Date> SQL_DATE = new DateType<java.sql.Date>() {
-      @Override
-      protected java.sql.Date deserialize(Date date) {
-        return new java.sql.Date(date.getTime());
-      }
-    };
-    public static final DateType<Timestamp> SQL_TIMESTAMP = new DateType<Timestamp>() {
-      @Override
-      protected Timestamp deserialize(Date date) {
-        return new Timestamp(date.getTime());
-      }
-    };
-
-    protected abstract T deserialize(Date date);
-
-    public DefaultDateTypeAdapter<T> createAdapter(String datePattern) {
-      return new DefaultDateTypeAdapter<T>(this, datePattern);
-    }
-
-    public DefaultDateTypeAdapter<T> createAdapter(int style) {
-      return new DefaultDateTypeAdapter<T>(this, style);
-    }
+final class DefaultDateTypeAdapter extends TypeAdapter<Date> {
 
-    public DefaultDateTypeAdapter<T> createAdapter(int dateStyle, int timeStyle) {
-      return new DefaultDateTypeAdapter<T>(this, dateStyle, timeStyle);
-    }
-
-    public DefaultDateTypeAdapter<T> createDefaultsAdapter() {
-      return new DefaultDateTypeAdapter<T>(this, DateFormat.DEFAULT, DateFormat.DEFAULT);
-    }
-  }
+  private static final String SIMPLE_NAME = "DefaultDateTypeAdapter";
 
-  private final DateType<T> dateType;
+  private final Class<? extends Date> dateType;
 
   /**
    * List of 1 or more different date formats used for de-serialization attempts.
@@ -94,7 +53,18 @@
    */
   private final List<DateFormat> dateFormats = new ArrayList<DateFormat>();
 
-  private DefaultDateTypeAdapter(DateType<T> dateType, String datePattern) {
+  DefaultDateTypeAdapter(Class<? extends Date> dateType) {
+    this.dateType = verifyDateType(dateType);
+    dateFormats.add(DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.US));
+    if (!Locale.getDefault().equals(Locale.US)) {
+      dateFormats.add(DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT));
+    }
+    if (JavaVersion.isJava9OrLater()) {
+      dateFormats.add(PreJava9DateFormatProvider.getUSDateTimeFormat(DateFormat.DEFAULT, DateFormat.DEFAULT));
+    }
+  }
+
+  DefaultDateTypeAdapter(Class<? extends Date> dateType, String datePattern) {
     this.dateType = verifyDateType(dateType);
     dateFormats.add(new SimpleDateFormat(datePattern, Locale.US));
     if (!Locale.getDefault().equals(Locale.US)) {
@@ -102,7 +72,7 @@
     }
   }
 
-  private DefaultDateTypeAdapter(DateType<T> dateType, int style) {
+  DefaultDateTypeAdapter(Class<? extends Date> dateType, int style) {
     this.dateType = verifyDateType(dateType);
     dateFormats.add(DateFormat.getDateInstance(style, Locale.US));
     if (!Locale.getDefault().equals(Locale.US)) {
@@ -113,7 +83,11 @@
     }
   }
 
-  private DefaultDateTypeAdapter(DateType<T> dateType, int dateStyle, int timeStyle) {
+  public DefaultDateTypeAdapter(int dateStyle, int timeStyle) {
+    this(Date.class, dateStyle, timeStyle);
+  }
+
+  public DefaultDateTypeAdapter(Class<? extends Date> dateType, int dateStyle, int timeStyle) {
     this.dateType = verifyDateType(dateType);
     dateFormats.add(DateFormat.getDateTimeInstance(dateStyle, timeStyle, Locale.US));
     if (!Locale.getDefault().equals(Locale.US)) {
@@ -124,9 +98,9 @@
     }
   }
 
-  private static <T extends Date> DateType<T> verifyDateType(DateType<T> dateType) {
-    if (dateType == null) {
-      throw new NullPointerException("dateType == null");
+  private static Class<? extends Date> verifyDateType(Class<? extends Date> dateType) {
+    if ( dateType != Date.class && dateType != java.sql.Date.class && dateType != Timestamp.class ) {
+      throw new IllegalArgumentException("Date type must be one of " + Date.class + ", " + Timestamp.class + ", or " + java.sql.Date.class + " but was " + dateType);
     }
     return dateType;
   }
@@ -146,13 +120,22 @@
   }
 
   @Override
-  public T read(JsonReader in) throws IOException {
+  public Date read(JsonReader in) throws IOException {
     if (in.peek() == JsonToken.NULL) {
       in.nextNull();
       return null;
     }
     Date date = deserializeToDate(in.nextString());
-    return dateType.deserialize(date);
+    if (dateType == Date.class) {
+      return date;
+    } else if (dateType == Timestamp.class) {
+      return new Timestamp(date.getTime());
+    } else if (dateType == java.sql.Date.class) {
+      return new java.sql.Date(date.getTime());
+    } else {
+      // This must never happen: dateType is guarded in the primary constructor
+      throw new AssertionError();
+    }
   }
 
   private Date deserializeToDate(String s) {
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
--- /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-23 11:15:16.794115586 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-23 11:15:16.818116047 +0200
@@ -602,19 +602,20 @@
         this.factories, this.hierarchyFactories, factories);
   }
 
+  @SuppressWarnings("unchecked")
   private void addTypeAdaptersForDate(String datePattern, int dateStyle, int timeStyle,
       List<TypeAdapterFactory> factories) {
-    DefaultDateTypeAdapter<Date> dateTypeAdapter;
+    DefaultDateTypeAdapter dateTypeAdapter;
     TypeAdapter<Timestamp> timestampTypeAdapter;
     TypeAdapter<java.sql.Date> javaSqlDateTypeAdapter;
     if (datePattern != null && !"".equals(datePattern.trim())) {
-      dateTypeAdapter = DefaultDateTypeAdapter.DateType.DATE.createAdapter(datePattern);
-      timestampTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_TIMESTAMP.createAdapter(datePattern);
-      javaSqlDateTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_DATE.createAdapter(datePattern);
+      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, datePattern);
+      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, datePattern);
+      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, datePattern);
     } else if (dateStyle != DateFormat.DEFAULT && timeStyle != DateFormat.DEFAULT) {
-      dateTypeAdapter = DefaultDateTypeAdapter.DateType.DATE.createAdapter(dateStyle, timeStyle);
-      timestampTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_TIMESTAMP.createAdapter(dateStyle, timeStyle);
-      javaSqlDateTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_DATE.createAdapter(dateStyle, timeStyle);
+      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle, timeStyle);
+      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, dateStyle, timeStyle);
+      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, dateStyle, timeStyle);
     } else {
       return;
     }
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-23 11:15:16.794115586 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-23 11:15:16.818116047 +0200
@@ -334,11 +334,11 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
-    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable<?>>());
+    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
   }
 
   private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
-                              Collection<TypeVariable<?>> visitedTypeVariables) {
+                              Collection<TypeVariable> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
     while (true) {
       if (toResolve instanceof TypeVariable) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java /tmp/v2/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java	2021-09-23 11:15:16.794115586 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -23,7 +23,6 @@
 import java.util.Locale;
 import java.util.TimeZone;
 
-import com.google.gson.DefaultDateTypeAdapter.DateType;
 import com.google.gson.internal.JavaVersion;
 
 import junit.framework.TestCase;
@@ -53,18 +52,18 @@
       String afterYearLongSep = JavaVersion.isJava9OrLater() ? " at " : " ";
       String utcFull = JavaVersion.isJava9OrLater() ? "Coordinated Universal Time" : "UTC";
       assertFormatted(String.format("Jan 1, 1970%s12:00:00 AM", afterYearSep),
-          DateType.DATE.createDefaultsAdapter());
-      assertFormatted("1/1/70", DateType.DATE.createAdapter(DateFormat.SHORT));
-      assertFormatted("Jan 1, 1970", DateType.DATE.createAdapter(DateFormat.MEDIUM));
-      assertFormatted("January 1, 1970", DateType.DATE.createAdapter(DateFormat.LONG));
+              new DefaultDateTypeAdapter(Date.class));
+      assertFormatted("1/1/70", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));
+      assertFormatted("Jan 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));
+      assertFormatted("January 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));
       assertFormatted(String.format("1/1/70%s12:00 AM", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.SHORT, DateFormat.SHORT));
+          new DefaultDateTypeAdapter(DateFormat.SHORT, DateFormat.SHORT));
       assertFormatted(String.format("Jan 1, 1970%s12:00:00 AM", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
+          new DefaultDateTypeAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
       assertFormatted(String.format("January 1, 1970%s12:00:00 AM UTC", afterYearLongSep),
-          DateType.DATE.createAdapter(DateFormat.LONG, DateFormat.LONG));
+          new DefaultDateTypeAdapter(DateFormat.LONG, DateFormat.LONG));
       assertFormatted(String.format("Thursday, January 1, 1970%s12:00:00 AM %s", afterYearLongSep, utcFull),
-          DateType.DATE.createAdapter(DateFormat.FULL, DateFormat.FULL));
+          new DefaultDateTypeAdapter(DateFormat.FULL, DateFormat.FULL));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -79,21 +78,21 @@
     try {
       String afterYearSep = JavaVersion.isJava9OrLater() ? " à " : " ";
       assertParsed(String.format("1 janv. 1970%s00:00:00", afterYearSep),
-          DateType.DATE.createDefaultsAdapter());
-      assertParsed("01/01/70", DateType.DATE.createAdapter(DateFormat.SHORT));
-      assertParsed("1 janv. 1970", DateType.DATE.createAdapter(DateFormat.MEDIUM));
-      assertParsed("1 janvier 1970", DateType.DATE.createAdapter(DateFormat.LONG));
+              new DefaultDateTypeAdapter(Date.class));
+      assertParsed("01/01/70", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));
+      assertParsed("1 janv. 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));
+      assertParsed("1 janvier 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));
       assertParsed("01/01/70 00:00",
-          DateType.DATE.createAdapter(DateFormat.SHORT, DateFormat.SHORT));
+          new DefaultDateTypeAdapter(DateFormat.SHORT, DateFormat.SHORT));
       assertParsed(String.format("1 janv. 1970%s00:00:00", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
+          new DefaultDateTypeAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
       assertParsed(String.format("1 janvier 1970%s00:00:00 UTC", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.LONG, DateFormat.LONG));
+          new DefaultDateTypeAdapter(DateFormat.LONG, DateFormat.LONG));
       assertParsed(JavaVersion.isJava9OrLater() ? (JavaVersion.getMajorJavaVersion() <11 ?
                       "jeudi 1 janvier 1970 à 00:00:00 Coordinated Universal Time" :
                       "jeudi 1 janvier 1970 à 00:00:00 Temps universel coordonné") :
                       "jeudi 1 janvier 1970 00 h 00 UTC",
-          DateType.DATE.createAdapter(DateFormat.FULL, DateFormat.FULL));
+          new DefaultDateTypeAdapter(DateFormat.FULL, DateFormat.FULL));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -106,18 +105,18 @@
     Locale defaultLocale = Locale.getDefault();
     Locale.setDefault(Locale.US);
     try {
-      assertParsed("Jan 1, 1970 0:00:00 AM", DateType.DATE.createDefaultsAdapter());
-      assertParsed("1/1/70", DateType.DATE.createAdapter(DateFormat.SHORT));
-      assertParsed("Jan 1, 1970", DateType.DATE.createAdapter(DateFormat.MEDIUM));
-      assertParsed("January 1, 1970", DateType.DATE.createAdapter(DateFormat.LONG));
+      assertParsed("Jan 1, 1970 0:00:00 AM", new DefaultDateTypeAdapter(Date.class));
+      assertParsed("1/1/70", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));
+      assertParsed("Jan 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));
+      assertParsed("January 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));
       assertParsed("1/1/70 0:00 AM",
-          DateType.DATE.createAdapter(DateFormat.SHORT, DateFormat.SHORT));
+          new DefaultDateTypeAdapter(DateFormat.SHORT, DateFormat.SHORT));
       assertParsed("Jan 1, 1970 0:00:00 AM",
-          DateType.DATE.createAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
+          new DefaultDateTypeAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
       assertParsed("January 1, 1970 0:00:00 AM UTC",
-          DateType.DATE.createAdapter(DateFormat.LONG, DateFormat.LONG));
+          new DefaultDateTypeAdapter(DateFormat.LONG, DateFormat.LONG));
       assertParsed("Thursday, January 1, 1970 0:00:00 AM UTC",
-          DateType.DATE.createAdapter(DateFormat.FULL, DateFormat.FULL));
+          new DefaultDateTypeAdapter(DateFormat.FULL, DateFormat.FULL));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -132,8 +131,8 @@
     try {
       String afterYearSep = JavaVersion.isJava9OrLater() ? ", " : " ";
       assertFormatted(String.format("Dec 31, 1969%s4:00:00 PM", afterYearSep),
-          DateType.DATE.createDefaultsAdapter());
-      assertParsed("Dec 31, 1969 4:00:00 PM", DateType.DATE.createDefaultsAdapter());
+              new DefaultDateTypeAdapter(Date.class));
+      assertParsed("Dec 31, 1969 4:00:00 PM", new DefaultDateTypeAdapter(Date.class));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -141,7 +140,7 @@
   }
 
   public void testDateDeserializationISO8601() throws Exception {
-    DefaultDateTypeAdapter<Date> adapter = DateType.DATE.createDefaultsAdapter();
+    DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
     assertParsed("1970-01-01T00:00:00.000Z", adapter);
     assertParsed("1970-01-01T00:00Z", adapter);
     assertParsed("1970-01-01T00:00:00+00:00", adapter);
@@ -151,7 +150,7 @@
   
   public void testDateSerialization() throws Exception {
     int dateStyle = DateFormat.LONG;
-    DefaultDateTypeAdapter<Date> dateTypeAdapter = DateType.DATE.createAdapter(dateStyle);
+    DefaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle);
     DateFormat formatter = DateFormat.getDateInstance(dateStyle, Locale.US);
     Date currentDate = new Date();
 
@@ -161,7 +160,7 @@
 
   public void testDatePattern() throws Exception {
     String pattern = "yyyy-MM-dd";
-    DefaultDateTypeAdapter<Date> dateTypeAdapter = DateType.DATE.createAdapter(pattern);
+    DefaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, pattern);
     DateFormat formatter = new SimpleDateFormat(pattern);
     Date currentDate = new Date();
 
@@ -169,32 +168,33 @@
     assertEquals(toLiteral(formatter.format(currentDate)), dateString);
   }
 
+  @SuppressWarnings("unused")
   public void testInvalidDatePattern() throws Exception {
     try {
-      DateType.DATE.createAdapter("I am a bad Date pattern....");
+      new DefaultDateTypeAdapter(Date.class, "I am a bad Date pattern....");
       fail("Invalid date pattern should fail.");
     } catch (IllegalArgumentException expected) { }
   }
 
   public void testNullValue() throws Exception {
-    DefaultDateTypeAdapter<Date> adapter = DateType.DATE.createDefaultsAdapter();
+    DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
     assertNull(adapter.fromJson("null"));
     assertEquals("null", adapter.toJson(null));
   }
 
   public void testUnexpectedToken() throws Exception {
     try {
-      DefaultDateTypeAdapter<Date> adapter = DateType.DATE.createDefaultsAdapter();
+      DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
       adapter.fromJson("{}");
       fail("Unexpected token should fail.");
     } catch (IllegalStateException expected) { }
   }
 
-  private void assertFormatted(String formatted, DefaultDateTypeAdapter<Date> adapter) {
+  private void assertFormatted(String formatted, DefaultDateTypeAdapter adapter) {
     assertEquals(toLiteral(formatted), adapter.toJson(new Date(0)));
   }
 
-  private void assertParsed(String date, DefaultDateTypeAdapter<Date> adapter) throws IOException {
+  private void assertParsed(String date, DefaultDateTypeAdapter adapter) throws IOException {
     assertEquals(date, new Date(0), adapter.fromJson(toLiteral(date)));
     assertEquals("ISO 8601", new Date(0), adapter.fromJson(toLiteral("1970-01-01T00:00:00Z")));
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-23 11:15:14.886078903 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -37,6 +37,7 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
+import com.google.gson.common.MoreAsserts;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.reflect.TypeToken;
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -172,7 +172,6 @@
     int numClasses;
   }
 
-  @SafeVarargs
   private static <T> List<T> createList(T ...items) {
     return Arrays.asList(items);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -36,7 +36,7 @@
 
   @SuppressWarnings("unused")
   private static class Foo1<A> {
-    public Foo2<? extends A> foo2;
+	public Foo2<? extends A> foo2;
   }
   @SuppressWarnings("unused")
   private static class Foo2<B> {
@@ -48,7 +48,6 @@
    */
 
   public void testRecursiveResolveSimple() {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);
     assertNotNull(adapter);
   }
@@ -63,7 +62,6 @@
   }
 
   public void testIssue440WeakReference() throws Exception {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<WeakReference> adapter = new Gson().getAdapter(WeakReference.class);
     assertNotNull(adapter);
   }
@@ -107,13 +105,11 @@
   }
 
   public void testRecursiveTypeVariablesResolve1() throws Exception {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType> adapter = new Gson().getAdapter(TestType.class);
     assertNotNull(adapter);
   }
 
   public void testRecursiveTypeVariablesResolve12() throws Exception {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType2> adapter = new Gson().getAdapter(TestType2.class);
     assertNotNull(adapter);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -280,7 +280,6 @@
     }
   }
 
-  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -140,7 +140,6 @@
     MoreAsserts.assertEqualsAndHashCode(map1, map2);
   }
 
-  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV2=[/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV1AsString='/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', classpathV2AsString='/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', testsList=null, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={}, reportEnum=NONE}
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v1/gson clean eu.stamp-project:dspot-diff-test-selection:3.1.1-SNAPSHOT:list -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dpath-dir-second-version=/tmp/v2/gson/ -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.7-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 46, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.7-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Deleting /tmp/v1/gson/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mdspot-diff-test-selection:3.1.1-SNAPSHOT:list[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Running on:
[[1;34mINFO[m] /tmp/v1/gson
[[1;33mWARNING[m] No path to diff file has been specified.
[[1;33mWARNING[m] I'll compute a diff file using the UNIX diff command
[[1;33mWARNING[m] You may encounter troubles.
[[1;33mWARNING[m] If so, please specify a path to a correct diff file
[[1;33mWARNING[m] or implement a new way to compute a diff file.
[[1;34mINFO[m] Computing the diff with diff commnd line
[[1;34mINFO[m] The diff will be computed between:
[[1;34mINFO[m] /tmp/v1/gson/src and 
[[1;34mINFO[m] /tmp/v2/gson/src
[[1;34mINFO[m] Executing: diff -ru /tmp/v1/gson/src /tmp/v2/gson/src from /tmp/v1/gson/src
[[1;34mINFO[m] Running in enhanced mode...
[[1;34mINFO[m] Computing coverage for /tmp/v1/gson
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.7-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 46, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.7-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mclover-maven-plugin:4.4.1:setup[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Creating new database at '/tmp/v1/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 72 files (8 packages).
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Updating existing database at '/tmp/v1/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 102 files (11 packages).
[[1;34mINFO[m] 1053 test methods detected.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Skipping Rule Enforcement.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mtemplating-maven-plugin:1.0.0:filter-sources[m [1m(filtering-java-templates)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Coping files with filtering to temporary directory.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] Copied 1 files to output directory: /tmp/v1/gson/target/generated-sources/java-templates
[[1;34mINFO[m] Source directory: /tmp/v1/gson/target/generated-sources/java-templates added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v1/gson/src/main/resources
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(default-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v1/gson/target/classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(base-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v1/gson/target/classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/JsonPrimitive.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbnd-maven-plugin:4.0.0:bnd-process[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;33mWARNING[m] /tmp/v1/gson/bnd.bnd [0:0]: Export com.google.gson,  has 1,  private references [com.google.gson.internal], 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v1/gson/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:testCompile[m [1m(default-testCompile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 102 source files to /tmp/v1/gson/target/test-classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/DefaultTypeAdaptersTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/DefaultTypeAdaptersTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/MapTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/MapTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /tmp/v1/gson/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.google.gson.stream.JsonReaderTest
Tests run: 120, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.213 sec
Running com.google.gson.stream.JsonReaderPathTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.074 sec
Running com.google.gson.stream.JsonWriterTest
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.GsonTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.InnerClassExclusionStrategyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.ObjectTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.VersionExclusionStrategyTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.JsonArrayTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.JavaSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.ParameterizedTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.GsonBuilderTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.JsonNullTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.GsonTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.CommentsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.JsonParserTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.reflect.TypeTokenTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.JsonPrimitiveTest
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.ExposeAnnotationExclusionStrategyTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.GenericArrayTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.FieldAttributesTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.JsonStreamParserTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.regression.JsonAdapterNullSafeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.MixedStreamTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.DefaultDateTypeAdapterTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.189 sec
Running com.google.gson.DefaultInetAddressTypeAdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.LongSerializationPolicyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.internal.LazilyParsedNumberTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.GsonTypesTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.internal.LinkedHashTreeMapTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running com.google.gson.internal.bind.JsonTreeReaderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.bind.JsonTreeWriterTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.internal.bind.util.ISO8601UtilsTest
Tests run: 7, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec <<< FAILURE!
testDateFormatString(com.google.gson.internal.bind.util.ISO8601UtilsTest)  Time elapsed: 0.01 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<2018-06-2[5]> but was:<2018-06-2[4]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.google.gson.internal.bind.util.ISO8601UtilsTest.__CLR4_4_1wyqt75aoy(ISO8601UtilsTest.java:23)
	at com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatString(ISO8601UtilsTest.java:19)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.google.gson.internal.bind.RecursiveTypesResolveTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.internal.bind.JsonElementReaderTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.internal.GsonBuildConfigTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.JavaVersionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.internal.reflect.UnsafeReflectionAccessorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.LinkedTreeMapTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running com.google.gson.internal.UnsafeAllocatorInstantiationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.DefaultMapJsonSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.OverrideCoreTypeAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.MoreSpecificTypeSerializationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.JavaUtilTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.CircularReferenceTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 sec
Running com.google.gson.functional.NullObjectAndFieldTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.ConcurrencyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.functional.PrimitiveCharacterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.functional.CustomDeserializerTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.MapTest
Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec
Running com.google.gson.functional.ExclusionStrategyFunctionalTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.TypeHierarchyAdapterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.InternationalizationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.CustomSerializerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.JsonArrayTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.JsonTreeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.TreeTypeAdaptersTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.FieldNamingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.LeniencyTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.GsonVersionDiagnosticsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.SecurityTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.InheritanceTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.functional.SerializedNameTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterSerializerDeserializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.ExposeFieldsTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.ParameterizedTypesTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.functional.MapAsArrayTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.NamingPolicyTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.functional.VersioningTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.DelegateTypeAdapterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.ArrayTest
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running com.google.gson.functional.PrettyPrintingTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.CollectionTest
Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running com.google.gson.functional.ThrowableFunctionalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.JsonParserTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.EnumTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.InterfaceTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.RawSerializationTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.TypeVariableTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.UncategorizedTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.PrimitiveTest
Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 sec
Running com.google.gson.functional.EscapingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnClassesTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.ReadersWritersTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.InstanceCreatorTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.CustomTypeAdaptersTest
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running com.google.gson.functional.TypeAdapterPrecedenceTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.FieldExclusionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.StreamingTypeAdaptersTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running com.google.gson.functional.PrintFormattingTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JavaUtilConcurrentAtomicTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.StringTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.functional.ObjectTest
Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec
Running com.google.gson.functional.DefaultTypeAdaptersTest
Tests run: 65, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.09 sec
Running com.google.gson.metrics.PerformanceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.JsonObjectTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec

Results :

Failed tests:   testDateFormatString(com.google.gson.internal.bind.util.ISO8601UtilsTest): expected:<2018-06-2[5]> but was:<2018-06-2[4]>

Tests run: 1063, Failures: 1, Errors: 0, Skipped: 1

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;31mBUILD FAILURE[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  15.365 s
[[1;34mINFO[m] Finished at: 2021-09-23T11:16:14+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-surefire-plugin:2.12.4:test[m [1m(default-test)[m on project [36mgson[m: [1;31mThere are test failures.[m
[[1;31mERROR[m] [1;31m[m
[[1;31mERROR[m] [1;31mPlease refer to /tmp/v1/gson/target/surefire-reports for the individual test results.[m
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
Reading Clover data /tmp/v1/gson/target/clover
Writing HTML report to '/tmp/v1/gson/target/clover/report'
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/Gson.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/MixedStreamTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/EnumTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/InheritanceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MapTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ObjectTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/common/TestTypes.java
Done. Processed 12 packages in 6447ms (537ms per package).
[[1;34mINFO[m] Computing coverage for /tmp/v2/gson/
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.7-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 46, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.7-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Deleting /tmp/v2/gson/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mclover-maven-plugin:4.4.1:setup[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Creating new database at '/tmp/v2/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 72 files (8 packages).
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Updating existing database at '/tmp/v2/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 102 files (11 packages).
[[1;34mINFO[m] 1053 test methods detected.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Skipping Rule Enforcement.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mtemplating-maven-plugin:1.0.0:filter-sources[m [1m(filtering-java-templates)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Coping files with filtering to temporary directory.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] Copied 1 files to output directory: /tmp/v2/gson/target/generated-sources/java-templates
[[1;34mINFO[m] Source directory: /tmp/v2/gson/target/generated-sources/java-templates added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v2/gson/src/main/resources
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(default-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v2/gson/target/classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(base-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v2/gson/target/classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbnd-maven-plugin:4.0.0:bnd-process[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;33mWARNING[m] /tmp/v2/gson/bnd.bnd [0:0]: Export com.google.gson,  has 1,  private references [com.google.gson.internal], 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v2/gson/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:testCompile[m [1m(default-testCompile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 102 source files to /tmp/v2/gson/target/test-classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/JsonNullTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/JsonNullTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/functional/ParameterizedTypesTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/functional/ParameterizedTypesTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /tmp/v2/gson/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.google.gson.stream.JsonReaderTest
Tests run: 120, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.211 sec
Running com.google.gson.stream.JsonReaderPathTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.076 sec
Running com.google.gson.stream.JsonWriterTest
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 sec
Running com.google.gson.GsonTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running com.google.gson.InnerClassExclusionStrategyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.ObjectTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.VersionExclusionStrategyTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.JsonArrayTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.JavaSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running com.google.gson.ParameterizedTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.GsonBuilderTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.JsonNullTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.GsonTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.CommentsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.JsonParserTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.reflect.TypeTokenTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.JsonPrimitiveTest
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.ExposeAnnotationExclusionStrategyTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.GenericArrayTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.FieldAttributesTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.JsonStreamParserTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.regression.JsonAdapterNullSafeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.MixedStreamTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.DefaultDateTypeAdapterTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.182 sec
Running com.google.gson.DefaultInetAddressTypeAdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.LongSerializationPolicyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.internal.LazilyParsedNumberTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.internal.GsonTypesTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.internal.LinkedHashTreeMapTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.google.gson.internal.bind.JsonTreeReaderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.bind.JsonTreeWriterTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.internal.bind.util.ISO8601UtilsTest
Tests run: 7, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec <<< FAILURE!
testDateFormatString(com.google.gson.internal.bind.util.ISO8601UtilsTest)  Time elapsed: 0.008 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<2018-06-2[5]> but was:<2018-06-2[4]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.google.gson.internal.bind.util.ISO8601UtilsTest.__CLR4_4_1wyqt75ap8(ISO8601UtilsTest.java:23)
	at com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatString(ISO8601UtilsTest.java:19)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.google.gson.internal.bind.RecursiveTypesResolveTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.internal.bind.JsonElementReaderTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.internal.GsonBuildConfigTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running com.google.gson.internal.JavaVersionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.internal.reflect.UnsafeReflectionAccessorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.internal.LinkedTreeMapTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running com.google.gson.internal.UnsafeAllocatorInstantiationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.DefaultMapJsonSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.OverrideCoreTypeAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.MoreSpecificTypeSerializationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.JavaUtilTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.CircularReferenceTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
Running com.google.gson.functional.NullObjectAndFieldTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.functional.ConcurrencyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.PrimitiveCharacterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running com.google.gson.functional.CustomDeserializerTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.MapTest
Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running com.google.gson.functional.ExclusionStrategyFunctionalTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.TypeHierarchyAdapterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.InternationalizationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.CustomSerializerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.JsonArrayTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonTreeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.TreeTypeAdaptersTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.FieldNamingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.LeniencyTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.functional.GsonVersionDiagnosticsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.SecurityTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.InheritanceTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.SerializedNameTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterSerializerDeserializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.ExposeFieldsTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.ParameterizedTypesTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running com.google.gson.functional.MapAsArrayTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.NamingPolicyTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.VersioningTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.DelegateTypeAdapterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.ArrayTest
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running com.google.gson.functional.PrettyPrintingTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.CollectionTest
Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 sec
Running com.google.gson.functional.ThrowableFunctionalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.JsonParserTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.EnumTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.InterfaceTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.functional.RawSerializationTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.TypeVariableTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.UncategorizedTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.PrimitiveTest
Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 sec
Running com.google.gson.functional.EscapingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnClassesTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.ReadersWritersTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.InstanceCreatorTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.CustomTypeAdaptersTest
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.TypeAdapterPrecedenceTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.FieldExclusionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.StreamingTypeAdaptersTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.PrintFormattingTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.functional.JavaUtilConcurrentAtomicTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.StringTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.ObjectTest
Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
Running com.google.gson.functional.DefaultTypeAdaptersTest
Tests run: 65, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 sec
Running com.google.gson.metrics.PerformanceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running com.google.gson.JsonObjectTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec

Results :

Failed tests:   testDateFormatString(com.google.gson.internal.bind.util.ISO8601UtilsTest): expected:<2018-06-2[5]> but was:<2018-06-2[4]>

Tests run: 1063, Failures: 1, Errors: 0, Skipped: 1

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;31mBUILD FAILURE[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  14.467 s
[[1;34mINFO[m] Finished at: 2021-09-23T11:16:37+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-surefire-plugin:2.12.4:test[m [1m(default-test)[m on project [36mgson[m: [1;31mThere are test failures.[m
[[1;31mERROR[m] [1;31m[m
[[1;31mERROR[m] [1;31mPlease refer to /tmp/v2/gson/target/surefire-reports for the individual test results.[m
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
Reading Clover data /tmp/v2/gson/target/clover
Writing HTML report to '/tmp/v2/gson/target/clover/report'
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/MixedStreamTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/EnumTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/InheritanceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MapTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ObjectTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/common/TestTypes.java
Done. Processed 12 packages in 2775ms (231ms per package).
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:[131, 104, 133, 135, 51, 57, 59, 63, 65, 73, 73, 73, 77, 77, 77, 81, 81, 81, 85, 85, 129, 155, 155] are modified.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:[56, 90, 57, 81, 87, 129, 54, 57, 58, 59, 62, 118, 87, 102, 129, 57, 58, 59, 60, 62, 63, 55, 131, 59, 60, 63, 130, 131, 59, 60, 63, 86, 129, 103, 67, 133, 133, 156, 61, 137, 137] are modified.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:118 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:102 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:57 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:129 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:58 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:59 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:62 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:63 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:130 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:81 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:87 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:60 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:131 covered.
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter:133 covered.
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
[[1;34mINFO[m] com.google.gson.GsonBuilder:[611, 611, 612, 612, 613, 613, 615, 615, 616, 616, 617, 617] are modified.
[[1;34mINFO[m] com.google.gson.GsonBuilder:611 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:612 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:613 covered.
[[1;34mINFO[m] com.google.gson.GsonBuilder:[605, 612, 613, 614, 612, 613, 614, 616, 617, 618, 616, 617, 618] are modified.
[[1;34mINFO[m] com.google.gson.GsonBuilder:614 covered.
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
[[1;34mINFO[m] Saving result in /tmp/v1/gson/testsThatExecuteTheChange.csv ...
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapterTest;testFormattingInFr;testFormattingInEnUs
com.google.gson.functional.DefaultTypeAdaptersTest;testDateSerializationWithPattern;testTimestampSerialization;testSqlDateSerialization;testDateSerializationWithPatternNotOverridenByTypeAdapter;testDateSerializationInCollection;testDateDeserializationWithPattern
[[1;34mINFO[m] Writing Coverage in /tmp/v1/gson/testsThatExecuteTheChange_coverage.csv
[[1;34mINFO[m] com.google.gson.DefaultDateTypeAdapter;14;32

[[1;34mINFO[m] com.google.gson.GsonBuilder;4;9

[[1;34mINFO[m] total;18;41

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  49.412 s
[[1;34mINFO[m] Finished at: 2021-09-23T11:16:45+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] Run Instrumentation - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='diff -ru /tmp/v1/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java /tmp/v2/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
--- /tmp/v1/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	2021-09-23 11:15:16.790115509 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	2021-09-23 11:15:16.818116047 +0200
@@ -41,52 +41,11 @@
  * @author Inderjeet Singh
  * @author Joel Leitch
  */
-final class DefaultDateTypeAdapter<T extends Date> extends TypeAdapter<T> {
-  private static final String SIMPLE_NAME = "DefaultDateTypeAdapter";
-
-  static abstract class DateType<T extends Date> {
-    private DateType() {
-    }
-
-    public static final DateType<Date> DATE = new DateType<Date>() {
-      @Override
-      protected Date deserialize(Date date) {
-        return date;
-      }
-    };
-    public static final DateType<java.sql.Date> SQL_DATE = new DateType<java.sql.Date>() {
-      @Override
-      protected java.sql.Date deserialize(Date date) {
-        return new java.sql.Date(date.getTime());
-      }
-    };
-    public static final DateType<Timestamp> SQL_TIMESTAMP = new DateType<Timestamp>() {
-      @Override
-      protected Timestamp deserialize(Date date) {
-        return new Timestamp(date.getTime());
-      }
-    };
-
-    protected abstract T deserialize(Date date);
-
-    public DefaultDateTypeAdapter<T> createAdapter(String datePattern) {
-      return new DefaultDateTypeAdapter<T>(this, datePattern);
-    }
-
-    public DefaultDateTypeAdapter<T> createAdapter(int style) {
-      return new DefaultDateTypeAdapter<T>(this, style);
-    }
+final class DefaultDateTypeAdapter extends TypeAdapter<Date> {
 
-    public DefaultDateTypeAdapter<T> createAdapter(int dateStyle, int timeStyle) {
-      return new DefaultDateTypeAdapter<T>(this, dateStyle, timeStyle);
-    }
-
-    public DefaultDateTypeAdapter<T> createDefaultsAdapter() {
-      return new DefaultDateTypeAdapter<T>(this, DateFormat.DEFAULT, DateFormat.DEFAULT);
-    }
-  }
+  private static final String SIMPLE_NAME = "DefaultDateTypeAdapter";
 
-  private final DateType<T> dateType;
+  private final Class<? extends Date> dateType;
 
   /**
    * List of 1 or more different date formats used for de-serialization attempts.
@@ -94,7 +53,18 @@
    */
   private final List<DateFormat> dateFormats = new ArrayList<DateFormat>();
 
-  private DefaultDateTypeAdapter(DateType<T> dateType, String datePattern) {
+  DefaultDateTypeAdapter(Class<? extends Date> dateType) {
+    this.dateType = verifyDateType(dateType);
+    dateFormats.add(DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.US));
+    if (!Locale.getDefault().equals(Locale.US)) {
+      dateFormats.add(DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT));
+    }
+    if (JavaVersion.isJava9OrLater()) {
+      dateFormats.add(PreJava9DateFormatProvider.getUSDateTimeFormat(DateFormat.DEFAULT, DateFormat.DEFAULT));
+    }
+  }
+
+  DefaultDateTypeAdapter(Class<? extends Date> dateType, String datePattern) {
     this.dateType = verifyDateType(dateType);
     dateFormats.add(new SimpleDateFormat(datePattern, Locale.US));
     if (!Locale.getDefault().equals(Locale.US)) {
@@ -102,7 +72,7 @@
     }
   }
 
-  private DefaultDateTypeAdapter(DateType<T> dateType, int style) {
+  DefaultDateTypeAdapter(Class<? extends Date> dateType, int style) {
     this.dateType = verifyDateType(dateType);
     dateFormats.add(DateFormat.getDateInstance(style, Locale.US));
     if (!Locale.getDefault().equals(Locale.US)) {
@@ -113,7 +83,11 @@
     }
   }
 
-  private DefaultDateTypeAdapter(DateType<T> dateType, int dateStyle, int timeStyle) {
+  public DefaultDateTypeAdapter(int dateStyle, int timeStyle) {
+    this(Date.class, dateStyle, timeStyle);
+  }
+
+  public DefaultDateTypeAdapter(Class<? extends Date> dateType, int dateStyle, int timeStyle) {
     this.dateType = verifyDateType(dateType);
     dateFormats.add(DateFormat.getDateTimeInstance(dateStyle, timeStyle, Locale.US));
     if (!Locale.getDefault().equals(Locale.US)) {
@@ -124,9 +98,9 @@
     }
   }
 
-  private static <T extends Date> DateType<T> verifyDateType(DateType<T> dateType) {
-    if (dateType == null) {
-      throw new NullPointerException("dateType == null");
+  private static Class<? extends Date> verifyDateType(Class<? extends Date> dateType) {
+    if ( dateType != Date.class && dateType != java.sql.Date.class && dateType != Timestamp.class ) {
+      throw new IllegalArgumentException("Date type must be one of " + Date.class + ", " + Timestamp.class + ", or " + java.sql.Date.class + " but was " + dateType);
     }
     return dateType;
   }
@@ -146,13 +120,22 @@
   }
 
   @Override
-  public T read(JsonReader in) throws IOException {
+  public Date read(JsonReader in) throws IOException {
     if (in.peek() == JsonToken.NULL) {
       in.nextNull();
       return null;
     }
     Date date = deserializeToDate(in.nextString());
-    return dateType.deserialize(date);
+    if (dateType == Date.class) {
+      return date;
+    } else if (dateType == Timestamp.class) {
+      return new Timestamp(date.getTime());
+    } else if (dateType == java.sql.Date.class) {
+      return new java.sql.Date(date.getTime());
+    } else {
+      // This must never happen: dateType is guarded in the primary constructor
+      throw new AssertionError();
+    }
   }
 
   private Date deserializeToDate(String s) {
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java
--- /tmp/v1/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-23 11:15:16.794115586 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/GsonBuilder.java	2021-09-23 11:15:16.818116047 +0200
@@ -602,19 +602,20 @@
         this.factories, this.hierarchyFactories, factories);
   }
 
+  @SuppressWarnings("unchecked")
   private void addTypeAdaptersForDate(String datePattern, int dateStyle, int timeStyle,
       List<TypeAdapterFactory> factories) {
-    DefaultDateTypeAdapter<Date> dateTypeAdapter;
+    DefaultDateTypeAdapter dateTypeAdapter;
     TypeAdapter<Timestamp> timestampTypeAdapter;
     TypeAdapter<java.sql.Date> javaSqlDateTypeAdapter;
     if (datePattern != null && !"".equals(datePattern.trim())) {
-      dateTypeAdapter = DefaultDateTypeAdapter.DateType.DATE.createAdapter(datePattern);
-      timestampTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_TIMESTAMP.createAdapter(datePattern);
-      javaSqlDateTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_DATE.createAdapter(datePattern);
+      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, datePattern);
+      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, datePattern);
+      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, datePattern);
     } else if (dateStyle != DateFormat.DEFAULT && timeStyle != DateFormat.DEFAULT) {
-      dateTypeAdapter = DefaultDateTypeAdapter.DateType.DATE.createAdapter(dateStyle, timeStyle);
-      timestampTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_TIMESTAMP.createAdapter(dateStyle, timeStyle);
-      javaSqlDateTypeAdapter = DefaultDateTypeAdapter.DateType.SQL_DATE.createAdapter(dateStyle, timeStyle);
+      dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle, timeStyle);
+      timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, dateStyle, timeStyle);
+      javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, dateStyle, timeStyle);
     } else {
       return;
     }
diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-23 11:15:16.794115586 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-23 11:15:16.818116047 +0200
@@ -334,11 +334,11 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
-    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable<?>>());
+    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
   }
 
   private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
-                              Collection<TypeVariable<?>> visitedTypeVariables) {
+                              Collection<TypeVariable> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
     while (true) {
       if (toResolve instanceof TypeVariable) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java /tmp/v2/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java	2021-09-23 11:15:16.794115586 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -23,7 +23,6 @@
 import java.util.Locale;
 import java.util.TimeZone;
 
-import com.google.gson.DefaultDateTypeAdapter.DateType;
 import com.google.gson.internal.JavaVersion;
 
 import junit.framework.TestCase;
@@ -53,18 +52,18 @@
       String afterYearLongSep = JavaVersion.isJava9OrLater() ? " at " : " ";
       String utcFull = JavaVersion.isJava9OrLater() ? "Coordinated Universal Time" : "UTC";
       assertFormatted(String.format("Jan 1, 1970%s12:00:00 AM", afterYearSep),
-          DateType.DATE.createDefaultsAdapter());
-      assertFormatted("1/1/70", DateType.DATE.createAdapter(DateFormat.SHORT));
-      assertFormatted("Jan 1, 1970", DateType.DATE.createAdapter(DateFormat.MEDIUM));
-      assertFormatted("January 1, 1970", DateType.DATE.createAdapter(DateFormat.LONG));
+              new DefaultDateTypeAdapter(Date.class));
+      assertFormatted("1/1/70", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));
+      assertFormatted("Jan 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));
+      assertFormatted("January 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));
       assertFormatted(String.format("1/1/70%s12:00 AM", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.SHORT, DateFormat.SHORT));
+          new DefaultDateTypeAdapter(DateFormat.SHORT, DateFormat.SHORT));
       assertFormatted(String.format("Jan 1, 1970%s12:00:00 AM", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
+          new DefaultDateTypeAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
       assertFormatted(String.format("January 1, 1970%s12:00:00 AM UTC", afterYearLongSep),
-          DateType.DATE.createAdapter(DateFormat.LONG, DateFormat.LONG));
+          new DefaultDateTypeAdapter(DateFormat.LONG, DateFormat.LONG));
       assertFormatted(String.format("Thursday, January 1, 1970%s12:00:00 AM %s", afterYearLongSep, utcFull),
-          DateType.DATE.createAdapter(DateFormat.FULL, DateFormat.FULL));
+          new DefaultDateTypeAdapter(DateFormat.FULL, DateFormat.FULL));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -79,21 +78,21 @@
     try {
       String afterYearSep = JavaVersion.isJava9OrLater() ? " à " : " ";
       assertParsed(String.format("1 janv. 1970%s00:00:00", afterYearSep),
-          DateType.DATE.createDefaultsAdapter());
-      assertParsed("01/01/70", DateType.DATE.createAdapter(DateFormat.SHORT));
-      assertParsed("1 janv. 1970", DateType.DATE.createAdapter(DateFormat.MEDIUM));
-      assertParsed("1 janvier 1970", DateType.DATE.createAdapter(DateFormat.LONG));
+              new DefaultDateTypeAdapter(Date.class));
+      assertParsed("01/01/70", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));
+      assertParsed("1 janv. 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));
+      assertParsed("1 janvier 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));
       assertParsed("01/01/70 00:00",
-          DateType.DATE.createAdapter(DateFormat.SHORT, DateFormat.SHORT));
+          new DefaultDateTypeAdapter(DateFormat.SHORT, DateFormat.SHORT));
       assertParsed(String.format("1 janv. 1970%s00:00:00", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
+          new DefaultDateTypeAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
       assertParsed(String.format("1 janvier 1970%s00:00:00 UTC", afterYearSep),
-          DateType.DATE.createAdapter(DateFormat.LONG, DateFormat.LONG));
+          new DefaultDateTypeAdapter(DateFormat.LONG, DateFormat.LONG));
       assertParsed(JavaVersion.isJava9OrLater() ? (JavaVersion.getMajorJavaVersion() <11 ?
                       "jeudi 1 janvier 1970 à 00:00:00 Coordinated Universal Time" :
                       "jeudi 1 janvier 1970 à 00:00:00 Temps universel coordonné") :
                       "jeudi 1 janvier 1970 00 h 00 UTC",
-          DateType.DATE.createAdapter(DateFormat.FULL, DateFormat.FULL));
+          new DefaultDateTypeAdapter(DateFormat.FULL, DateFormat.FULL));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -106,18 +105,18 @@
     Locale defaultLocale = Locale.getDefault();
     Locale.setDefault(Locale.US);
     try {
-      assertParsed("Jan 1, 1970 0:00:00 AM", DateType.DATE.createDefaultsAdapter());
-      assertParsed("1/1/70", DateType.DATE.createAdapter(DateFormat.SHORT));
-      assertParsed("Jan 1, 1970", DateType.DATE.createAdapter(DateFormat.MEDIUM));
-      assertParsed("January 1, 1970", DateType.DATE.createAdapter(DateFormat.LONG));
+      assertParsed("Jan 1, 1970 0:00:00 AM", new DefaultDateTypeAdapter(Date.class));
+      assertParsed("1/1/70", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));
+      assertParsed("Jan 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));
+      assertParsed("January 1, 1970", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));
       assertParsed("1/1/70 0:00 AM",
-          DateType.DATE.createAdapter(DateFormat.SHORT, DateFormat.SHORT));
+          new DefaultDateTypeAdapter(DateFormat.SHORT, DateFormat.SHORT));
       assertParsed("Jan 1, 1970 0:00:00 AM",
-          DateType.DATE.createAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
+          new DefaultDateTypeAdapter(DateFormat.MEDIUM, DateFormat.MEDIUM));
       assertParsed("January 1, 1970 0:00:00 AM UTC",
-          DateType.DATE.createAdapter(DateFormat.LONG, DateFormat.LONG));
+          new DefaultDateTypeAdapter(DateFormat.LONG, DateFormat.LONG));
       assertParsed("Thursday, January 1, 1970 0:00:00 AM UTC",
-          DateType.DATE.createAdapter(DateFormat.FULL, DateFormat.FULL));
+          new DefaultDateTypeAdapter(DateFormat.FULL, DateFormat.FULL));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -132,8 +131,8 @@
     try {
       String afterYearSep = JavaVersion.isJava9OrLater() ? ", " : " ";
       assertFormatted(String.format("Dec 31, 1969%s4:00:00 PM", afterYearSep),
-          DateType.DATE.createDefaultsAdapter());
-      assertParsed("Dec 31, 1969 4:00:00 PM", DateType.DATE.createDefaultsAdapter());
+              new DefaultDateTypeAdapter(Date.class));
+      assertParsed("Dec 31, 1969 4:00:00 PM", new DefaultDateTypeAdapter(Date.class));
     } finally {
       TimeZone.setDefault(defaultTimeZone);
       Locale.setDefault(defaultLocale);
@@ -141,7 +140,7 @@
   }
 
   public void testDateDeserializationISO8601() throws Exception {
-    DefaultDateTypeAdapter<Date> adapter = DateType.DATE.createDefaultsAdapter();
+    DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
     assertParsed("1970-01-01T00:00:00.000Z", adapter);
     assertParsed("1970-01-01T00:00Z", adapter);
     assertParsed("1970-01-01T00:00:00+00:00", adapter);
@@ -151,7 +150,7 @@
   
   public void testDateSerialization() throws Exception {
     int dateStyle = DateFormat.LONG;
-    DefaultDateTypeAdapter<Date> dateTypeAdapter = DateType.DATE.createAdapter(dateStyle);
+    DefaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle);
     DateFormat formatter = DateFormat.getDateInstance(dateStyle, Locale.US);
     Date currentDate = new Date();
 
@@ -161,7 +160,7 @@
 
   public void testDatePattern() throws Exception {
     String pattern = "yyyy-MM-dd";
-    DefaultDateTypeAdapter<Date> dateTypeAdapter = DateType.DATE.createAdapter(pattern);
+    DefaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, pattern);
     DateFormat formatter = new SimpleDateFormat(pattern);
     Date currentDate = new Date();
 
@@ -169,32 +168,33 @@
     assertEquals(toLiteral(formatter.format(currentDate)), dateString);
   }
 
+  @SuppressWarnings("unused")
   public void testInvalidDatePattern() throws Exception {
     try {
-      DateType.DATE.createAdapter("I am a bad Date pattern....");
+      new DefaultDateTypeAdapter(Date.class, "I am a bad Date pattern....");
       fail("Invalid date pattern should fail.");
     } catch (IllegalArgumentException expected) { }
   }
 
   public void testNullValue() throws Exception {
-    DefaultDateTypeAdapter<Date> adapter = DateType.DATE.createDefaultsAdapter();
+    DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
     assertNull(adapter.fromJson("null"));
     assertEquals("null", adapter.toJson(null));
   }
 
   public void testUnexpectedToken() throws Exception {
     try {
-      DefaultDateTypeAdapter<Date> adapter = DateType.DATE.createDefaultsAdapter();
+      DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
       adapter.fromJson("{}");
       fail("Unexpected token should fail.");
     } catch (IllegalStateException expected) { }
   }
 
-  private void assertFormatted(String formatted, DefaultDateTypeAdapter<Date> adapter) {
+  private void assertFormatted(String formatted, DefaultDateTypeAdapter adapter) {
     assertEquals(toLiteral(formatted), adapter.toJson(new Date(0)));
   }
 
-  private void assertParsed(String date, DefaultDateTypeAdapter<Date> adapter) throws IOException {
+  private void assertParsed(String date, DefaultDateTypeAdapter adapter) throws IOException {
     assertEquals(date, new Date(0), adapter.fromJson(toLiteral(date)));
     assertEquals("ISO 8601", new Date(0), adapter.fromJson(toLiteral("1970-01-01T00:00:00Z")));
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-23 11:15:14.886078903 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -37,6 +37,7 @@
 import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
+import com.google.gson.common.MoreAsserts;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.reflect.TypeToken;
 
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -172,7 +172,6 @@
     int numClasses;
   }
 
-  @SafeVarargs
   private static <T> List<T> createList(T ...items) {
     return Arrays.asList(items);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -36,7 +36,7 @@
 
   @SuppressWarnings("unused")
   private static class Foo1<A> {
-    public Foo2<? extends A> foo2;
+	public Foo2<? extends A> foo2;
   }
   @SuppressWarnings("unused")
   private static class Foo2<B> {
@@ -48,7 +48,6 @@
    */
 
   public void testRecursiveResolveSimple() {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<Foo1> adapter = new Gson().getAdapter(Foo1.class);
     assertNotNull(adapter);
   }
@@ -63,7 +62,6 @@
   }
 
   public void testIssue440WeakReference() throws Exception {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<WeakReference> adapter = new Gson().getAdapter(WeakReference.class);
     assertNotNull(adapter);
   }
@@ -107,13 +105,11 @@
   }
 
   public void testRecursiveTypeVariablesResolve1() throws Exception {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType> adapter = new Gson().getAdapter(TestType.class);
     assertNotNull(adapter);
   }
 
   public void testRecursiveTypeVariablesResolve12() throws Exception {
-    @SuppressWarnings("rawtypes")
     TypeAdapter<TestType2> adapter = new Gson().getAdapter(TestType2.class);
     assertNotNull(adapter);
   }
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -280,7 +280,6 @@
     }
   }
 
-  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-23 11:15:14.890078979 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java	2021-09-23 11:15:16.818116047 +0200
@@ -140,7 +140,6 @@
     MoreAsserts.assertEqualsAndHashCode(map1, map2);
   }
 
-  @SafeVarargs
   private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
     ArrayList<T> actualList = new ArrayList<T>();
     for (T t : actual) {
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV2=[/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar, /home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV1AsString='/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', classpathV2AsString='/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', testsList={com.google.gson.DefaultDateTypeAdapterTest=[testFormattingInFr, testFormattingInEnUs], com.google.gson.functional.DefaultTypeAdaptersTest=[testDateSerializationWithPattern, testTimestampSerialization, testSqlDateSerialization, testDateSerializationWithPatternNotOverridenByTypeAdapter, testDateSerializationInCollection, testDateDeserializationWithPattern]}, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={selection={package-0/uncore|uJ=40283, instructions=426117, package-0/dram|uJ=82942598, uncore|uJ=40283, cycles=4681555, dram|mW=1614, cache-misses=135014, package|uJ=799194365, branch-misses=2020, package-0/core|mW=13160, device|uJ=882136963, core|uJ=676208718, psys|mW=36279, psys|uJ=1864151356, package-0|uJ=799194365, duration|ns=51383080543, branches=556864, core|mW=13160, device|mW=17167, package-0/dram|mW=1614, dram|uJ=82942598, package-0/core|uJ=676208718, cache-reference=390391, package-0/uncore|mW=0, package-0|mW=15553, package|mW=15553, uncore|mW=0}}, reportEnum=NONE}
[info] Instrument version before commit...
[info] Run on /tmp/v1/gson
[WARNING] cannot create shadow class: com.google.gson.DefaultDateTypeAdapter$DateType
java.lang.IllegalAccessError: failed to access class com.google.gson.DefaultDateTypeAdapter from class com.google.gson.DefaultDateTypeAdapter$DateType (com.google.gson.DefaultDateTypeAdapter is in unnamed module of loader org.codehaus.plexus.classworlds.realm.ClassRealm @3d278b4d; com.google.gson.DefaultDateTypeAdapter$DateType is in unnamed module of loader java.net.URLClassLoader @2773504f)
    at java.lang.Class.getDeclaringClass0 (Native Method)
    at java.lang.Class.getEnclosingClass (Class.java:1517)
    at spoon.support.visitor.java.JavaReflectionTreeBuilder.scan (JavaReflectionTreeBuilder.java:90)
    at spoon.reflect.factory.TypeFactory.get (TypeFactory.java:562)
    at spoon.support.compiler.jdt.JDTImportBuilder.getOrLoadClass (JDTImportBuilder.java:150)
    at spoon.support.compiler.jdt.JDTImportBuilder.getOrLoadClass (JDTImportBuilder.java:157)
    at spoon.support.compiler.jdt.JDTImportBuilder.build (JDTImportBuilder.java:75)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.lambda$buildModel$1 (JDTBasedSpoonCompiler.java:441)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.forEachCompilationUnit (JDTBasedSpoonCompiler.java:464)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildModel (JDTBasedSpoonCompiler.java:440)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel (JDTBasedSpoonCompiler.java:372)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources (JDTBasedSpoonCompiler.java:335)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build (JDTBasedSpoonCompiler.java:116)
    at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build (JDTBasedSpoonCompiler.java:99)
    at spoon.Launcher.buildModel (Launcher.java:781)
    at fr.davidson.diff.jjoules.instrumentation.InstrumentationMojo.instrument (InstrumentationMojo.java:66)
    at fr.davidson.diff.jjoules.instrumentation.InstrumentationMojo._run (InstrumentationMojo.java:37)
    at fr.davidson.diff.jjoules.DiffJJoulesMojo.run (DiffJJoulesMojo.java:253)
    at fr.davidson.diff.jjoules.DiffJJoulesMojo.runDiffJJoulesStep (DiffJJoulesMojo.java:272)
    at fr.davidson.diff.jjoules.DiffJJoulesMojo.testInstrumentation (DiffJJoulesMojo.java:298)
    at fr.davidson.diff.jjoules.DiffJJoulesMojo._run (DiffJJoulesMojo.java:261)
    at fr.davidson.diff.jjoules.DiffJJoulesMojo.execute (DiffJJoulesMojo.java:224)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:30 min
[INFO] Finished at: 2021-09-23T11:17:06+02:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal fr.davidson:diff-jjoules:0.0.1-SNAPSHOT:diff-jjoules (default-cli) on project gson: Execution default-cli of goal fr.davidson:diff-jjoules:0.0.1-SNAPSHOT:diff-jjoules failed: An API incompatibility was encountered while executing fr.davidson:diff-jjoules:0.0.1-SNAPSHOT:diff-jjoules: java.lang.IllegalAccessError: failed to access class com.google.gson.DefaultDateTypeAdapter from class com.google.gson.DefaultDateTypeAdapter$DateType (com.google.gson.DefaultDateTypeAdapter is in unnamed module of loader org.codehaus.plexus.classworlds.realm.ClassRealm @3d278b4d; com.google.gson.DefaultDateTypeAdapter$DateType is in unnamed module of loader java.net.URLClassLoader @2773504f)
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>fr.davidson:diff-jjoules:0.0.1-SNAPSHOT
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/home/benjamin/.m2/repository/fr/davidson/diff-jjoules/0.0.1-SNAPSHOT/diff-jjoules-0.0.1-SNAPSHOT.jar
[ERROR] urls[1] = file:/home/benjamin/.m2/repository/eu/stamp-project/dspot-diff-test-selection/3.1.1-SNAPSHOT/dspot-diff-test-selection-3.1.1-SNAPSHOT.jar
[ERROR] urls[2] = file:/home/benjamin/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar
[ERROR] urls[3] = file:/home/benjamin/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar
[ERROR] urls[4] = file:/home/benjamin/.m2/repository/org/openclover/clover/4.2.1/clover-4.2.1.jar
[ERROR] urls[5] = file:/home/benjamin/.m2/repository/fr/inria/gforge/spoon/labs/gumtree-spoon-ast-diff/1.9/gumtree-spoon-ast-diff-1.9.jar
[ERROR] urls[6] = file:/home/benjamin/.m2/repository/com/github/gumtreediff/core/2.1.0/core-2.1.0.jar
[ERROR] urls[7] = file:/home/benjamin/.m2/repository/com/github/mpkorstanje/simmetrics-core/3.2.3/simmetrics-core-3.2.3.jar
[ERROR] urls[8] = file:/home/benjamin/.m2/repository/net/sf/trove4j/trove4j/3.0.3/trove4j-3.0.3.jar
[ERROR] urls[9] = file:/home/benjamin/.m2/repository/org/jgrapht/jgrapht-core/1.0.1/jgrapht-core-1.0.1.jar
[ERROR] urls[10] = file:/home/benjamin/.m2/repository/io/github/java-diff-utils/java-diff-utils/4.0/java-diff-utils-4.0.jar
[ERROR] urls[11] = file:/home/benjamin/.m2/repository/fr/inria/gforge/spoon/spoon-core/9.2.0-beta-5/spoon-core-9.2.0-beta-5.jar
[ERROR] urls[12] = file:/home/benjamin/.m2/repository/org/eclipse/jdt/org.eclipse.jdt.core/3.26.0/org.eclipse.jdt.core-3.26.0.jar
[ERROR] urls[13] = file:/home/benjamin/.m2/repository/com/martiansoftware/jsap/2.1/jsap-2.1.jar
[ERROR] urls[14] = file:/home/benjamin/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar
[ERROR] urls[15] = file:/home/benjamin/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar
[ERROR] urls[16] = file:/home/benjamin/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.5/jackson-databind-2.12.5.jar
[ERROR] urls[17] = file:/home/benjamin/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.5/jackson-annotations-2.12.5.jar
[ERROR] urls[18] = file:/home/benjamin/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.5/jackson-core-2.12.5.jar
[ERROR] urls[19] = file:/home/benjamin/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar
[ERROR] urls[20] = file:/home/benjamin/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar
[ERROR] urls[21] = file:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-utils/3.1.0/plexus-utils-3.1.0.jar
[ERROR] urls[22] = file:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.24/plexus-interpolation-1.24.jar
[ERROR] urls[23] = file:/home/benjamin/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.4/plexus-sec-dispatcher-1.4.jar
[ERROR] urls[24] = file:/home/benjamin/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar
[ERROR] urls[25] = file:/home/benjamin/.m2/repository/org/apache/maven/maven-builder-support/3.5.4/maven-builder-support-3.5.4.jar
[ERROR] urls[26] = file:/home/benjamin/.m2/repository/org/apache/maven/resolver/maven-resolver-util/1.1.1/maven-resolver-util-1.1.1.jar
[ERROR] urls[27] = file:/home/benjamin/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven-shared-utils-3.2.1.jar
[ERROR] urls[28] = file:/home/benjamin/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.3.3/org.eclipse.sisu.inject-0.3.3.jar
[ERROR] urls[29] = file:/home/benjamin/.m2/repository/com/google/inject/guice/4.2.0/guice-4.2.0-no_aop.jar
[ERROR] urls[30] = file:/home/benjamin/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar
[ERROR] urls[31] = file:/home/benjamin/.m2/repository/com/google/guava/guava/20.0/guava-20.0.jar
[ERROR] urls[32] = file:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.7.1/plexus-component-annotations-1.7.1.jar
[ERROR] urls[33] = file:/home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.5.2/junit-jupiter-api-5.5.2.jar
[ERROR] urls[34] = file:/home/benjamin/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar
[ERROR] urls[35] = file:/home/benjamin/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar
[ERROR] urls[36] = file:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-commons/1.5.2/junit-platform-commons-1.5.2.jar
[ERROR] urls[37] = file:/home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.5.2/junit-jupiter-engine-5.5.2.jar
[ERROR] urls[38] = file:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-engine/1.5.2/junit-platform-engine-1.5.2.jar
[ERROR] urls[39] = file:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-runner/1.3.2/junit-platform-runner-1.3.2.jar
[ERROR] urls[40] = file:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-launcher/1.3.2/junit-platform-launcher-1.3.2.jar
[ERROR] urls[41] = file:/home/benjamin/.m2/repository/org/junit/platform/junit-platform-suite-api/1.3.2/junit-platform-suite-api-1.3.2.jar
[ERROR] urls[42] = file:/home/benjamin/.m2/repository/junit/junit/4.12/junit-4.12.jar
[ERROR] urls[43] = file:/home/benjamin/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
[ERROR] urls[44] = file:/home/benjamin/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar
[ERROR] urls[45] = file:/home/benjamin/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar
[ERROR] urls[46] = file:/home/benjamin/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar
[ERROR] urls[47] = file:/home/benjamin/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[ERROR] urls[48] = file:/home/benjamin/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.3.2/junit-jupiter-params-5.3.2.jar
[ERROR] urls[49] = file:/home/benjamin/.m2/repository/eu/stamp-project/test-runner/3.0.0/test-runner-3.0.0.jar
[ERROR] urls[50] = file:/home/benjamin/.m2/repository/eu/stamp-project/descartes/1.2.4/descartes-1.2.4.jar
[ERROR] urls[51] = file:/home/benjamin/.m2/repository/org/pitest/pitest-entry/1.6.7/pitest-entry-1.6.7.jar
[ERROR] urls[52] = file:/home/benjamin/.m2/repository/org/pitest/pitest/1.6.7/pitest-1.6.7.jar
[ERROR] urls[53] = file:/home/benjamin/.m2/repository/org/jacoco/org.jacoco.core/0.8.7/org.jacoco.core-0.8.7.jar
[ERROR] urls[54] = file:/home/benjamin/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar
[ERROR] urls[55] = file:/home/benjamin/.m2/repository/org/ow2/asm/asm-commons/9.1/asm-commons-9.1.jar
[ERROR] urls[56] = file:/home/benjamin/.m2/repository/org/ow2/asm/asm-analysis/9.1/asm-analysis-9.1.jar
[ERROR] urls[57] = file:/home/benjamin/.m2/repository/org/ow2/asm/asm-tree/9.1/asm-tree-9.1.jar
[ERROR] urls[58] = file:/home/benjamin/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar
[ERROR] urls[59] = file:/home/benjamin/.m2/repository/org/pitest/pitest-junit5-plugin/0.8/pitest-junit5-plugin-0.8.jar
[ERROR] urls[60] = file:/home/benjamin/.m2/repository/org/apache/logging/log4j/log4j-core/2.14.1/log4j-core-2.14.1.jar
[ERROR] urls[61] = file:/home/benjamin/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar
[ERROR] urls[62] = file:/home/benjamin/.m2/repository/org/apache/logging/log4j/log4j-jcl/2.14.1/log4j-jcl-2.14.1.jar
[ERROR] urls[63] = file:/home/benjamin/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar
[ERROR] urls[64] = file:/home/benjamin/.m2/repository/info/picocli/picocli/4.6.1/picocli-4.6.1.jar
[ERROR] urls[65] = file:/home/benjamin/.m2/repository/net/sf/supercsv/super-csv/2.4.0/super-csv-2.4.0.jar
[ERROR] urls[66] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/maven-surefire-common/3.0.0-M5/maven-surefire-common-3.0.0-M5.jar
[ERROR] urls[67] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/surefire-api/3.0.0-M5/surefire-api-3.0.0-M5.jar
[ERROR] urls[68] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/surefire-logger-api/3.0.0-M5/surefire-logger-api-3.0.0-M5.jar
[ERROR] urls[69] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/surefire-extensions-api/3.0.0-M5/surefire-extensions-api-3.0.0-M5.jar
[ERROR] urls[70] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/surefire-booter/3.0.0-M5/surefire-booter-3.0.0-M5.jar
[ERROR] urls[71] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/surefire-extensions-spi/3.0.0-M5/surefire-extensions-spi-3.0.0-M5.jar
[ERROR] urls[72] = file:/home/benjamin/.m2/repository/org/apache/maven/shared/maven-artifact-transfer/0.11.0/maven-artifact-transfer-0.11.0.jar
[ERROR] urls[73] = file:/home/benjamin/.m2/repository/org/apache/maven/shared/maven-common-artifact-filters/3.0.1/maven-common-artifact-filters-3.0.1.jar
[ERROR] urls[74] = file:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar
[ERROR] urls[75] = file:/home/benjamin/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar
[ERROR] urls[76] = file:/home/benjamin/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar
[ERROR] urls[77] = file:/home/benjamin/.m2/repository/org/codehaus/plexus/plexus-java/1.0.5/plexus-java-1.0.5.jar
[ERROR] urls[78] = file:/home/benjamin/.m2/repository/com/thoughtworks/qdox/qdox/2.0-M9/qdox-2.0-M9.jar
[ERROR] urls[79] = file:/home/benjamin/.m2/repository/org/apache/maven/surefire/surefire-shared-utils/3.0.0-M4/surefire-shared-utils-3.0.0-M4.jar
[ERROR] urls[80] = file:/home/benjamin/.m2/repository/org/apache/maven/shared/maven-invoker/2.2/maven-invoker-2.2.jar
[ERROR] urls[81] = file:/home/benjamin/.m2/repository/org/eclipse/jgit/org.eclipse.jgit/5.12.0.202106070339-r/org.eclipse.jgit-5.12.0.202106070339-r.jar
[ERROR] urls[82] = file:/home/benjamin/.m2/repository/com/googlecode/javaewah/JavaEWAH/1.1.7/JavaEWAH-1.1.7.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR] 
[ERROR] -----------------------------------------------------
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
