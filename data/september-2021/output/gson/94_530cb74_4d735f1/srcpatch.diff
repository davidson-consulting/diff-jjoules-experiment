diff -ru /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java	2021-09-22 16:21:40.355700646 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java	2021-09-22 16:18:58.257657673 +0200
@@ -120,6 +120,34 @@
     assertEquals(JsonNull.INSTANCE, writer.get());
   }
 
+  public void testBeginArray() throws Exception {
+    JsonTreeWriter writer = new JsonTreeWriter();
+    assertEquals(writer, writer.beginArray());
+  }
+
+  public void testBeginObject() throws Exception {
+    JsonTreeWriter writer = new JsonTreeWriter();
+    assertEquals(writer, writer.beginObject());
+  }
+
+  public void testValueString() throws Exception {
+    JsonTreeWriter writer = new JsonTreeWriter();
+    String n = "as";
+    assertEquals(writer, writer.value(n));
+  }
+
+  public void testBoolValue() throws Exception {
+    JsonTreeWriter writer = new JsonTreeWriter();
+    boolean bool = true;
+    assertEquals(writer, writer.value(bool));
+  }
+
+  public void testBoolMaisValue() throws Exception {
+    JsonTreeWriter writer = new JsonTreeWriter();
+    Boolean bool = true;
+    assertEquals(writer, writer.value(bool));
+  }
+
   public void testLenientNansAndInfinities() throws IOException {
     JsonTreeWriter writer = new JsonTreeWriter();
     writer.setLenient(true);
Only in /tmp/v2/gson/src/test/java/com/google/gson/internal/bind: util
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java /tmp/v2/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java	2021-09-22 16:21:40.355700646 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java	2021-09-22 14:19:41.248352177 +0200
@@ -108,6 +108,9 @@
     assertTrue(json.isString());
     assertEquals('z', json.getAsCharacter());
     assertEquals("z", json.getAsString());
+
+    json = new JsonPrimitive(true);
+    assertEquals("true", json.getAsString());
   }
 
   public void testExponential() throws Exception {
