[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.8-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ com.google.code.gson:gson:[unknown-version], /tmp/v1/gson/pom.xml, line 46, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ---------------------< com.google.code.gson:gson >----------------------
[INFO] Building Gson 2.8.8-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ gson ---
[INFO] Deleting /tmp/v1/gson/target
[INFO] 
[INFO] --- diff-jjoules:0.0.1-SNAPSHOT:diff-jjoules (default-cli) @ gson ---
[INFO] Running on:
[INFO] /tmp/v1/gson
[INFO] /tmp/v2/gson/
[INFO] Enable JUnit4 mode
[WARNING] No path to diff file has been specified.
[WARNING] I'll compute a diff file using the UNIX diff command
[WARNING] You may encounter troubles.
[WARNING] If so, please specify a path to a correct diff file
[WARNING] or implement a new way to compute a diff file.
[INFO] Computing the diff with diff commnd line
[INFO] The diff will be computed between:
[INFO] /tmp/v1/gson/src and 
[INFO] /tmp/v2/gson/src
[INFO] Executing: diff -ru /tmp/v1/gson/src /tmp/v2/gson/src from /tmp/v1/gson/src
[INFO] Run DiffJJoules - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.405864043 +0200
@@ -25,7 +25,12 @@
 import java.lang.reflect.Type;
 import java.lang.reflect.TypeVariable;
 import java.lang.reflect.WildcardType;
-import java.util.*;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.NoSuchElementException;
+import java.util.Properties;
 
 import static com.google.gson.internal.$Gson$Preconditions.checkArgument;
 import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;
@@ -334,52 +339,61 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
-    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
+    return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable, Type>());
   }
 
   private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
-                              Collection<TypeVariable> visitedTypeVariables) {
+                              Map<TypeVariable, Type> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
+    TypeVariable resolving = null;
     while (true) {
       if (toResolve instanceof TypeVariable) {
         TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;
-        if (visitedTypeVariables.contains(typeVariable)) {
+        Type previouslyResolved = visitedTypeVariables.get(typeVariable);
+        if (previouslyResolved != null) {
           // cannot reduce due to infinite recursion
-          return toResolve;
-        } else {
-          visitedTypeVariables.add(typeVariable);
+          return (previouslyResolved == Void.TYPE) ? toResolve : previouslyResolved;
         }
+
+        // Insert a placeholder to mark the fact that we are in the process of resolving this type
+        visitedTypeVariables.put(typeVariable, Void.TYPE);
+        if (resolving == null) {
+          resolving = typeVariable;
+        }
+
         toResolve = resolveTypeVariable(context, contextRawType, typeVariable);
         if (toResolve == typeVariable) {
-          return toResolve;
+          break;
         }
 
       } else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {
         Class<?> original = (Class<?>) toResolve;
         Type componentType = original.getComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof GenericArrayType) {
         GenericArrayType original = (GenericArrayType) toResolve;
         Type componentType = original.getGenericComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof ParameterizedType) {
         ParameterizedType original = (ParameterizedType) toResolve;
         Type ownerType = original.getOwnerType();
         Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);
-        boolean changed = newOwnerType != ownerType;
+        boolean changed = !equal(newOwnerType, ownerType);
 
         Type[] args = original.getActualTypeArguments();
         for (int t = 0, length = args.length; t < length; t++) {
           Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);
-          if (resolvedTypeArgument != args[t]) {
+          if (!equal(resolvedTypeArgument, args[t])) {
             if (!changed) {
               args = args.clone();
               changed = true;
@@ -388,9 +402,10 @@
           }
         }
 
-        return changed
+        toResolve = changed
             ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)
             : original;
+        break;
 
       } else if (toResolve instanceof WildcardType) {
         WildcardType original = (WildcardType) toResolve;
@@ -400,20 +415,28 @@
         if (originalLowerBound.length == 1) {
           Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);
           if (lowerBound != originalLowerBound[0]) {
-            return supertypeOf(lowerBound);
+            toResolve = supertypeOf(lowerBound);
+            break;
           }
         } else if (originalUpperBound.length == 1) {
           Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);
           if (upperBound != originalUpperBound[0]) {
-            return subtypeOf(upperBound);
+            toResolve = subtypeOf(upperBound);
+            break;
           }
         }
-        return original;
+        toResolve = original;
+        break;
 
       } else {
-        return toResolve;
+        break;
       }
     }
+    // ensure that any in-process resolution gets updated with the final result
+    if (resolving != null) {
+      visitedTypeVariables.put(resolving, toResolve);
+    }
+    return toResolve;
   }
 
   static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/functional: ReusedTypeVariablesFullyResolveTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 15:10:07.863784941 +0200
@@ -20,9 +20,6 @@
 
 import com.google.gson.common.MoreAsserts;
 
-import static org.junit.Assert.*;
-import static org.junit.Assert.assertEquals;
-
 /**
  * @author Jesse Wilson
  */
@@ -102,68 +99,4 @@
     assertEquals(1, original.get(0).getAsJsonArray().size());
     assertEquals(0, copy.get(0).getAsJsonArray().size());
   }
-
-  public void testFailedGetArrayValues() {
-    JsonArray jsonArray = new JsonArray();
-    jsonArray.add(JsonParser.parseString("{" + "\"key1\":\"value1\"," + "\"key2\":\"value2\"," + "\"key3\":\"value3\"," + "\"key4\":\"value4\"" + "}"));
-    try {
-      jsonArray.getAsBoolean();
-      fail("expected getBoolean to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-    try {
-      jsonArray.get(-1);
-      fail("expected get to fail");
-    } catch (IndexOutOfBoundsException e) {
-      assertEquals("Expected an exception message",
-              "Index -1 out of bounds for length 1", e.getMessage());
-    }
-    try {
-      jsonArray.getAsString();
-      fail("expected getString to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-
-    jsonArray.remove(0);
-    jsonArray.add("hello");
-    try {
-      jsonArray.getAsDouble();
-      fail("expected getDouble to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsInt();
-      fail("expected getInt to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.get(0).getAsJsonArray();
-      fail("expected getJSONArray to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Array: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsJsonObject();
-      fail("expected getJSONObject to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Object: [\"hello\"]", e.getMessage());
-    }
-    try {
-      jsonArray.getAsLong();
-      fail("expected getLong to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-  }
 }
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV2=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV1AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', classpathV2AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', testsList=null, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={}, reportEnum=NONE}
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v1/gson clean eu.stamp-project:dspot-diff-test-selection:3.1.1-SNAPSHOT:list -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dpath-dir-second-version=/tmp/v2/gson/ -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.8-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ com.google.code.gson:gson:[unknown-version], /tmp/v1/gson/pom.xml, line 46, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.8-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Deleting /tmp/v1/gson/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mdspot-diff-test-selection:3.1.1-SNAPSHOT:list[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Running on:
[[1;34mINFO[m] /tmp/v1/gson
[[1;33mWARNING[m] No path to diff file has been specified.
[[1;33mWARNING[m] I'll compute a diff file using the UNIX diff command
[[1;33mWARNING[m] You may encounter troubles.
[[1;33mWARNING[m] If so, please specify a path to a correct diff file
[[1;33mWARNING[m] or implement a new way to compute a diff file.
[[1;34mINFO[m] Computing the diff with diff commnd line
[[1;34mINFO[m] The diff will be computed between:
[[1;34mINFO[m] /tmp/v1/gson/src and 
[[1;34mINFO[m] /tmp/v2/gson/src
[[1;34mINFO[m] Executing: diff -ru /tmp/v1/gson/src /tmp/v2/gson/src from /tmp/v1/gson/src
[[1;34mINFO[m] Running in enhanced mode...
[[1;34mINFO[m] Computing coverage for /tmp/v1/gson
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.8-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ com.google.code.gson:gson:[unknown-version], /tmp/v1/gson/pom.xml, line 46, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.8-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mclover-maven-plugin:4.4.1:setup[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Creating new database at '/tmp/v1/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 72 files (8 packages).
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Updating existing database at '/tmp/v1/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 102 files (11 packages).
[[1;34mINFO[m] 1054 test methods detected.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Skipping Rule Enforcement.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mtemplating-maven-plugin:1.0.0:filter-sources[m [1m(filtering-java-templates)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Coping files with filtering to temporary directory.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] Copied 1 files to output directory: /tmp/v1/gson/target/generated-sources/java-templates
[[1;34mINFO[m] Source directory: /tmp/v1/gson/target/generated-sources/java-templates added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v1/gson/src/main/resources
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(default-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v1/gson/target/classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(base-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v1/gson/target/classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-instrumented/com/google/gson/internal/ConstructorConstructor.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbnd-maven-plugin:5.3.0:bnd-process[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;33mWARNING[m] /tmp/v1/gson/bnd.bnd [0:0]: Export com.google.gson,  has 1,  private references [com.google.gson.internal]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v1/gson/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:testCompile[m [1m(default-testCompile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 102 source files to /tmp/v1/gson/target/test-classes
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/DefaultTypeAdaptersTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/DefaultTypeAdaptersTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/MapTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /tmp/v1/gson/target/clover/src-test-instrumented/com/google/gson/functional/MapTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /tmp/v1/gson/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.google.gson.DefaultDateTypeAdapterTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.65 sec
Running com.google.gson.InnerClassExclusionStrategyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running com.google.gson.GsonTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.127 sec
Running com.google.gson.internal.LinkedHashTreeMapTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.095 sec
Running com.google.gson.internal.GsonBuildConfigTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 sec
Running com.google.gson.internal.LazilyParsedNumberTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.internal.reflect.UnsafeReflectionAccessorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.internal.UnsafeAllocatorInstantiationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.internal.GsonTypesTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.internal.JavaVersionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running com.google.gson.internal.bind.util.ISO8601UtilsTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 sec
Running com.google.gson.internal.bind.RecursiveTypesResolveTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.097 sec
Running com.google.gson.internal.bind.JsonTreeWriterTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec
Running com.google.gson.internal.bind.JsonElementReaderTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec
Running com.google.gson.internal.bind.JsonTreeReaderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.internal.LinkedTreeMapTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 sec
Running com.google.gson.ParameterizedTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.GsonBuilderTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.reflect.TypeTokenTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.DefaultInetAddressTypeAdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.ExposeAnnotationExclusionStrategyTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running com.google.gson.FieldAttributesTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running com.google.gson.CommentsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.regression.JsonAdapterNullSafeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.JsonNullTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.JsonObjectTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.google.gson.stream.JsonReaderPathTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.104 sec
Running com.google.gson.stream.JsonWriterTest
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec
Running com.google.gson.stream.JsonReaderTest
Tests run: 120, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.321 sec
Running com.google.gson.metrics.PerformanceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.google.gson.MixedStreamTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running com.google.gson.DefaultMapJsonSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.VersionExclusionStrategyTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.InternationalizationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running com.google.gson.functional.SecurityTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.EnumTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 sec
Running com.google.gson.functional.ObjectTest
Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.141 sec
Running com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.FieldExclusionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.ExposeFieldsTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.functional.SerializedNameTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.GsonVersionDiagnosticsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.ThrowableFunctionalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running com.google.gson.functional.ParameterizedTypesTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 sec
Running com.google.gson.functional.PrettyPrintingTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.CustomTypeAdaptersTest
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running com.google.gson.functional.ReadersWritersTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.functional.CircularReferenceTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 sec
Running com.google.gson.functional.JsonAdapterSerializerDeserializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.LeniencyTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.functional.RawSerializationTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.CustomDeserializerTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.functional.TypeAdapterPrecedenceTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.functional.MoreSpecificTypeSerializationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running com.google.gson.functional.InterfaceTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.TypeVariableTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.ExclusionStrategyFunctionalTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running com.google.gson.functional.DefaultTypeAdaptersTest
Tests run: 65, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.213 sec
Running com.google.gson.functional.NullObjectAndFieldTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
Running com.google.gson.functional.MapAsArrayTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.functional.InstanceCreatorTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running com.google.gson.functional.PrimitiveCharacterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.MapTest
Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.185 sec
Running com.google.gson.functional.FieldNamingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running com.google.gson.functional.VersioningTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec
Running com.google.gson.functional.DelegateTypeAdapterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.InheritanceTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.functional.TypeHierarchyAdapterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.CustomSerializerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.functional.StreamingTypeAdaptersTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 sec
Running com.google.gson.functional.EscapingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.CollectionTest
Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.097 sec
Running com.google.gson.functional.JsonTreeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.ArrayTest
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 sec
Running com.google.gson.functional.PrintFormattingTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.StringTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running com.google.gson.functional.JavaUtilConcurrentAtomicTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running com.google.gson.functional.UncategorizedTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.JsonArrayTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.JsonParserTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnClassesTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running com.google.gson.functional.NamingPolicyTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running com.google.gson.functional.ConcurrencyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 sec
Running com.google.gson.functional.PrimitiveTest
Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.127 sec
Running com.google.gson.functional.TreeTypeAdaptersTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.JavaUtilTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.ObjectTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.JsonStreamParserTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.JavaSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running com.google.gson.GenericArrayTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
Running com.google.gson.GsonTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.JsonArrayTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.JsonParserTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.JsonPrimitiveTest
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running com.google.gson.LongSerializationPolicyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.OverrideCoreTypeAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec

Results :

Tests run: 1064, Failures: 0, Errors: 0, Skipped: 1

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  29.804 s
[[1;34mINFO[m] Finished at: 2021-09-24T16:19:27+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
Reading Clover data /tmp/v1/gson/target/clover
Writing HTML report to '/tmp/v1/gson/target/clover/report'
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/main/java/com/google/gson/Gson.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/MixedStreamTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CollectionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/EnumTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/InheritanceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MapTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ObjectTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v1/gson/src/test/java/com/google/gson/common/TestTypes.java
Done. Processed 12 packages in 14913ms (1242ms per package).
[[1;34mINFO[m] Computing coverage for /tmp/v2/gson/
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for com.google.code.gson:gson:jar:2.8.8-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ com.google.code.gson:gson:[unknown-version], /tmp/v2/gson/pom.xml, line 46, column 15
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.google.code.gson:gson[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding Gson 2.8.8-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Deleting /tmp/v2/gson/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mclover-maven-plugin:4.4.1:setup[m [1m(default-cli)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Creating new database at '/tmp/v2/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 72 files (8 packages).
[[1;34mINFO[m] OpenClover Version 4.4.1, built on October 11 2019 (build-1020)
[[1;34mINFO[m] Updating existing database at '/tmp/v2/gson/target/clover/clover.db'.
[[1;34mINFO[m] Processing files at 1.9 source level.
[[1;34mINFO[m] Clover all over. Instrumented 103 files (11 packages).
[[1;34mINFO[m] 1054 test methods detected.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Skipping Rule Enforcement.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mtemplating-maven-plugin:1.0.0:filter-sources[m [1m(filtering-java-templates)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Coping files with filtering to temporary directory.
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] Copied 1 files to output directory: /tmp/v2/gson/target/generated-sources/java-templates
[[1;34mINFO[m] Source directory: /tmp/v2/gson/target/generated-sources/java-templates added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v2/gson/src/main/resources
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(default-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v2/gson/target/classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:compile[m [1m(base-compile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 73 source files to /tmp/v2/gson/target/classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-instrumented/com/google/gson/JsonArray.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbnd-maven-plugin:5.3.0:bnd-process[m [1m(default)[m @ [36mgson[0;1m ---[m
[[1;33mWARNING[m] /tmp/v2/gson/bnd.bnd [0:0]: Export com.google.gson,  has 1,  private references [com.google.gson.internal]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /tmp/v2/gson/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.1:testCompile[m [1m(default-testCompile)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 103 source files to /tmp/v2/gson/target/test-classes
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/internal/bind/util/ISO8601UtilsTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/internal/bind/util/ISO8601UtilsTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/functional/ParameterizedTypesTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /tmp/v2/gson/target/clover/src-test-instrumented/com/google/gson/functional/ParameterizedTypesTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgson[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /tmp/v2/gson/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.google.gson.DefaultDateTypeAdapterTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.88 sec
Running com.google.gson.InnerClassExclusionStrategyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec
Running com.google.gson.GsonTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.188 sec
Running com.google.gson.internal.LinkedHashTreeMapTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.153 sec
Running com.google.gson.internal.GsonBuildConfigTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.09 sec
Running com.google.gson.internal.LazilyParsedNumberTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.internal.reflect.UnsafeReflectionAccessorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.internal.UnsafeAllocatorInstantiationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.internal.GsonTypesTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.internal.JavaVersionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running com.google.gson.internal.bind.util.ISO8601UtilsTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec
Running com.google.gson.internal.bind.RecursiveTypesResolveTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.119 sec
Running com.google.gson.internal.bind.JsonTreeWriterTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 sec
Running com.google.gson.internal.bind.JsonElementReaderTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running com.google.gson.internal.bind.JsonTreeReaderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.internal.LinkedTreeMapTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.098 sec
Running com.google.gson.ParameterizedTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.GsonBuilderTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.reflect.TypeTokenTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running com.google.gson.DefaultInetAddressTypeAdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.ExposeAnnotationExclusionStrategyTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running com.google.gson.FieldAttributesTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec
Running com.google.gson.CommentsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running com.google.gson.regression.JsonAdapterNullSafeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.JsonNullTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.JsonObjectTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running com.google.gson.stream.JsonReaderPathTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.117 sec
Running com.google.gson.stream.JsonWriterTest
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.112 sec
Running com.google.gson.stream.JsonReaderTest
Tests run: 120, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.402 sec
Running com.google.gson.metrics.PerformanceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.MixedStreamTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running com.google.gson.DefaultMapJsonSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.VersionExclusionStrategyTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.InternationalizationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 sec
Running com.google.gson.functional.SecurityTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.functional.EnumTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 sec
Running com.google.gson.functional.ObjectTest
Tests run: 44, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.132 sec
Running com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.FieldExclusionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.ExposeFieldsTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.google.gson.functional.SerializedNameTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.GsonVersionDiagnosticsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.ThrowableFunctionalTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
Running com.google.gson.functional.ParameterizedTypesTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 sec
Running com.google.gson.functional.PrettyPrintingTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.functional.CustomTypeAdaptersTest
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running com.google.gson.functional.ReadersWritersTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.CircularReferenceTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 sec
Running com.google.gson.functional.JsonAdapterSerializerDeserializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.google.gson.functional.LeniencyTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.google.gson.functional.RawSerializationTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.google.gson.functional.CustomDeserializerTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.functional.TypeAdapterPrecedenceTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.google.gson.functional.MoreSpecificTypeSerializationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running com.google.gson.functional.InterfaceTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.TypeVariableTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.ExclusionStrategyFunctionalTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec
Running com.google.gson.functional.DefaultTypeAdaptersTest
Tests run: 65, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.14 sec
Running com.google.gson.functional.NullObjectAndFieldTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running com.google.gson.functional.MapAsArrayTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.functional.InstanceCreatorTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.functional.PrimitiveCharacterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.MapTest
Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.132 sec
Running com.google.gson.functional.FieldNamingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.functional.VersioningTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running com.google.gson.functional.DelegateTypeAdapterTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.functional.InheritanceTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running com.google.gson.functional.TypeHierarchyAdapterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.google.gson.functional.CustomSerializerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.google.gson.functional.StreamingTypeAdaptersTest
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 sec
Running com.google.gson.functional.EscapingTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec
Running com.google.gson.functional.CollectionTest
Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec
Running com.google.gson.functional.JsonTreeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.ArrayTest
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.functional.PrintFormattingTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.google.gson.functional.StringTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running com.google.gson.functional.JavaUtilConcurrentAtomicTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running com.google.gson.functional.UncategorizedTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.google.gson.functional.ReusedTypeVariablesFullyResolveTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.functional.JsonArrayTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.google.gson.functional.JsonParserTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec
Running com.google.gson.functional.JsonAdapterAnnotationOnClassesTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec
Running com.google.gson.functional.NamingPolicyTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec
Running com.google.gson.functional.ConcurrencyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.131 sec
Running com.google.gson.functional.PrimitiveTest
Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.188 sec
Running com.google.gson.functional.TreeTypeAdaptersTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.google.gson.functional.JavaUtilTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.ObjectTypeAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.google.gson.JsonStreamParserTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.google.gson.JavaSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.076 sec
Running com.google.gson.GenericArrayTypeTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.GsonTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running com.google.gson.JsonArrayTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.google.gson.JsonParserTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.google.gson.JsonPrimitiveTest
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
Running com.google.gson.LongSerializationPolicyTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running com.google.gson.OverrideCoreTypeAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec

Results :

Tests run: 1064, Failures: 0, Errors: 0, Skipped: 1

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  31.397 s
[[1;34mINFO[m] Finished at: 2021-09-24T16:20:18+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
Reading Clover data /tmp/v2/gson/target/clover
Writing HTML report to '/tmp/v2/gson/target/clover/report'
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/main/java/com/google/gson/Gson.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/MixedStreamTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CollectionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/EnumTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/InheritanceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MapTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ObjectTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
ERROR: Invalid Java source found or Clover failed to parse it: /tmp/v2/gson/src/test/java/com/google/gson/common/TestTypes.java
Done. Processed 12 packages in 9652ms (804ms per package).
[[1;34mINFO[m] /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[[1;34mINFO[m] /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:[343, 347, 343, 365, 360, 366, 353, 373, 391, 396, 417, 423, 348, 350, 361, 369, 377, 391, 403, 408, 411, 411] are modified.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:343 covered.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:365 covered.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:373 covered.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:[348, 415, 338, 342, 348, 436, 338, 353, 437, 437, 352, 353, 347, 351, 360, 354, 347, 361, 366, 373, 355, 361, 361, 373, 363, 372, 382, 373, 382, 405, 377, 391, 405, 392, 391, 382, 396, 428, 391, 396, 428, 396, 383, 402, 418, 418, 404, 407, 424, 424, 409] are modified.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:348 covered.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:342 covered.
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types:436 covered.
[[1;34mINFO[m] /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java
[[1;34mINFO[m] /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
[[1;34mINFO[m] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
[[1;34mINFO[m] Saving result in /tmp/v1/gson/testsThatExecuteTheChange.csv ...
[[1;34mINFO[m] com.google.gson.functional.NullObjectAndFieldTest;testExplicitDeserializationOfNulls
com.google.gson.functional.TypeHierarchyAdapterTest;testTypeHierarchy
[[1;34mINFO[m] Writing Coverage in /tmp/v1/gson/testsThatExecuteTheChange_coverage.csv
[[1;34mINFO[m] com.google.gson.internal.$Gson$Types;6;41

[[1;34mINFO[m] total;6;41

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  01:41 min
[[1;34mINFO[m] Finished at: 2021-09-24T16:20:34+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] Run Instrumentation - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.405864043 +0200
@@ -25,7 +25,12 @@
 import java.lang.reflect.Type;
 import java.lang.reflect.TypeVariable;
 import java.lang.reflect.WildcardType;
-import java.util.*;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.NoSuchElementException;
+import java.util.Properties;
 
 import static com.google.gson.internal.$Gson$Preconditions.checkArgument;
 import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;
@@ -334,52 +339,61 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
-    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
+    return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable, Type>());
   }
 
   private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
-                              Collection<TypeVariable> visitedTypeVariables) {
+                              Map<TypeVariable, Type> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
+    TypeVariable resolving = null;
     while (true) {
       if (toResolve instanceof TypeVariable) {
         TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;
-        if (visitedTypeVariables.contains(typeVariable)) {
+        Type previouslyResolved = visitedTypeVariables.get(typeVariable);
+        if (previouslyResolved != null) {
           // cannot reduce due to infinite recursion
-          return toResolve;
-        } else {
-          visitedTypeVariables.add(typeVariable);
+          return (previouslyResolved == Void.TYPE) ? toResolve : previouslyResolved;
         }
+
+        // Insert a placeholder to mark the fact that we are in the process of resolving this type
+        visitedTypeVariables.put(typeVariable, Void.TYPE);
+        if (resolving == null) {
+          resolving = typeVariable;
+        }
+
         toResolve = resolveTypeVariable(context, contextRawType, typeVariable);
         if (toResolve == typeVariable) {
-          return toResolve;
+          break;
         }
 
       } else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {
         Class<?> original = (Class<?>) toResolve;
         Type componentType = original.getComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof GenericArrayType) {
         GenericArrayType original = (GenericArrayType) toResolve;
         Type componentType = original.getGenericComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof ParameterizedType) {
         ParameterizedType original = (ParameterizedType) toResolve;
         Type ownerType = original.getOwnerType();
         Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);
-        boolean changed = newOwnerType != ownerType;
+        boolean changed = !equal(newOwnerType, ownerType);
 
         Type[] args = original.getActualTypeArguments();
         for (int t = 0, length = args.length; t < length; t++) {
           Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);
-          if (resolvedTypeArgument != args[t]) {
+          if (!equal(resolvedTypeArgument, args[t])) {
             if (!changed) {
               args = args.clone();
               changed = true;
@@ -388,9 +402,10 @@
           }
         }
 
-        return changed
+        toResolve = changed
             ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)
             : original;
+        break;
 
       } else if (toResolve instanceof WildcardType) {
         WildcardType original = (WildcardType) toResolve;
@@ -400,20 +415,28 @@
         if (originalLowerBound.length == 1) {
           Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);
           if (lowerBound != originalLowerBound[0]) {
-            return supertypeOf(lowerBound);
+            toResolve = supertypeOf(lowerBound);
+            break;
           }
         } else if (originalUpperBound.length == 1) {
           Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);
           if (upperBound != originalUpperBound[0]) {
-            return subtypeOf(upperBound);
+            toResolve = subtypeOf(upperBound);
+            break;
           }
         }
-        return original;
+        toResolve = original;
+        break;
 
       } else {
-        return toResolve;
+        break;
       }
     }
+    // ensure that any in-process resolution gets updated with the final result
+    if (resolving != null) {
+      visitedTypeVariables.put(resolving, toResolve);
+    }
+    return toResolve;
   }
 
   static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/functional: ReusedTypeVariablesFullyResolveTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 15:10:07.863784941 +0200
@@ -20,9 +20,6 @@
 
 import com.google.gson.common.MoreAsserts;
 
-import static org.junit.Assert.*;
-import static org.junit.Assert.assertEquals;
-
 /**
  * @author Jesse Wilson
  */
@@ -102,68 +99,4 @@
     assertEquals(1, original.get(0).getAsJsonArray().size());
     assertEquals(0, copy.get(0).getAsJsonArray().size());
   }
-
-  public void testFailedGetArrayValues() {
-    JsonArray jsonArray = new JsonArray();
-    jsonArray.add(JsonParser.parseString("{" + "\"key1\":\"value1\"," + "\"key2\":\"value2\"," + "\"key3\":\"value3\"," + "\"key4\":\"value4\"" + "}"));
-    try {
-      jsonArray.getAsBoolean();
-      fail("expected getBoolean to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-    try {
-      jsonArray.get(-1);
-      fail("expected get to fail");
-    } catch (IndexOutOfBoundsException e) {
-      assertEquals("Expected an exception message",
-              "Index -1 out of bounds for length 1", e.getMessage());
-    }
-    try {
-      jsonArray.getAsString();
-      fail("expected getString to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-
-    jsonArray.remove(0);
-    jsonArray.add("hello");
-    try {
-      jsonArray.getAsDouble();
-      fail("expected getDouble to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsInt();
-      fail("expected getInt to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.get(0).getAsJsonArray();
-      fail("expected getJSONArray to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Array: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsJsonObject();
-      fail("expected getJSONObject to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Object: [\"hello\"]", e.getMessage());
-    }
-    try {
-      jsonArray.getAsLong();
-      fail("expected getLong to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-  }
 }
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV2=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV1AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', classpathV2AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', testsList={com.google.gson.functional.NullObjectAndFieldTest=[testExplicitDeserializationOfNulls], com.google.gson.functional.TypeHierarchyAdapterTest=[testTypeHierarchy]}, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={selection={instructions=2308322, package-0/dram|uJ=161604475, package-0|uJ=2160647179, cycles=3712914, duration|ns=104598686406, branches=431145, dram|mW=1544, cache-misses=18412, device|mW=22201, package|uJ=2160647179, branch-misses=28560, package-0/dram|mW=1544, dram|uJ=161604475, cache-reference=92542, device|uJ=2322251654, package-0|mW=20656, package|mW=20656}}, reportEnum=NONE}
[info] Instrument version before commit...
[info] Run on /tmp/v1/gson
[INFO] fr.davidson.diff.jjoules.instrumentation.process.junit4.JJoulesProcessor
[INFO] 2 instrumented test classes have been printed!
[INFO] Injecting JUnit-Jjoules in /tmp/v1/gson/pom.xml
[INFO] Output new POM file in /tmp/v1/gson/pom.xml
[info] Instrument version after commit...
[info] Run on /tmp/v2/gson/
[INFO] fr.davidson.diff.jjoules.instrumentation.process.junit4.JJoulesProcessor
[INFO] 2 instrumented test classes have been printed!
[INFO] Injecting JUnit-Jjoules in /tmp/v2/gson//pom.xml
[INFO] Output new POM file in /tmp/v2/gson//pom.xml
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v1/gson/pom.xml clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Specified base directory (/tmp/v1/gson/pom.xml) is a file. Using its parent directory...
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] Run Delta - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.405864043 +0200
@@ -25,7 +25,12 @@
 import java.lang.reflect.Type;
 import java.lang.reflect.TypeVariable;
 import java.lang.reflect.WildcardType;
-import java.util.*;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.NoSuchElementException;
+import java.util.Properties;
 
 import static com.google.gson.internal.$Gson$Preconditions.checkArgument;
 import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;
@@ -334,52 +339,61 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
-    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
+    return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable, Type>());
   }
 
   private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
-                              Collection<TypeVariable> visitedTypeVariables) {
+                              Map<TypeVariable, Type> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
+    TypeVariable resolving = null;
     while (true) {
       if (toResolve instanceof TypeVariable) {
         TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;
-        if (visitedTypeVariables.contains(typeVariable)) {
+        Type previouslyResolved = visitedTypeVariables.get(typeVariable);
+        if (previouslyResolved != null) {
           // cannot reduce due to infinite recursion
-          return toResolve;
-        } else {
-          visitedTypeVariables.add(typeVariable);
+          return (previouslyResolved == Void.TYPE) ? toResolve : previouslyResolved;
         }
+
+        // Insert a placeholder to mark the fact that we are in the process of resolving this type
+        visitedTypeVariables.put(typeVariable, Void.TYPE);
+        if (resolving == null) {
+          resolving = typeVariable;
+        }
+
         toResolve = resolveTypeVariable(context, contextRawType, typeVariable);
         if (toResolve == typeVariable) {
-          return toResolve;
+          break;
         }
 
       } else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {
         Class<?> original = (Class<?>) toResolve;
         Type componentType = original.getComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof GenericArrayType) {
         GenericArrayType original = (GenericArrayType) toResolve;
         Type componentType = original.getGenericComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof ParameterizedType) {
         ParameterizedType original = (ParameterizedType) toResolve;
         Type ownerType = original.getOwnerType();
         Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);
-        boolean changed = newOwnerType != ownerType;
+        boolean changed = !equal(newOwnerType, ownerType);
 
         Type[] args = original.getActualTypeArguments();
         for (int t = 0, length = args.length; t < length; t++) {
           Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);
-          if (resolvedTypeArgument != args[t]) {
+          if (!equal(resolvedTypeArgument, args[t])) {
             if (!changed) {
               args = args.clone();
               changed = true;
@@ -388,9 +402,10 @@
           }
         }
 
-        return changed
+        toResolve = changed
             ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)
             : original;
+        break;
 
       } else if (toResolve instanceof WildcardType) {
         WildcardType original = (WildcardType) toResolve;
@@ -400,20 +415,28 @@
         if (originalLowerBound.length == 1) {
           Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);
           if (lowerBound != originalLowerBound[0]) {
-            return supertypeOf(lowerBound);
+            toResolve = supertypeOf(lowerBound);
+            break;
           }
         } else if (originalUpperBound.length == 1) {
           Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);
           if (upperBound != originalUpperBound[0]) {
-            return subtypeOf(upperBound);
+            toResolve = subtypeOf(upperBound);
+            break;
           }
         }
-        return original;
+        toResolve = original;
+        break;
 
       } else {
-        return toResolve;
+        break;
       }
     }
+    // ensure that any in-process resolution gets updated with the final result
+    if (resolving != null) {
+      visitedTypeVariables.put(resolving, toResolve);
+    }
+    return toResolve;
   }
 
   static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/functional: ReusedTypeVariablesFullyResolveTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 15:10:07.863784941 +0200
@@ -20,9 +20,6 @@
 
 import com.google.gson.common.MoreAsserts;
 
-import static org.junit.Assert.*;
-import static org.junit.Assert.assertEquals;
-
 /**
  * @author Jesse Wilson
  */
@@ -102,68 +99,4 @@
     assertEquals(1, original.get(0).getAsJsonArray().size());
     assertEquals(0, copy.get(0).getAsJsonArray().size());
   }
-
-  public void testFailedGetArrayValues() {
-    JsonArray jsonArray = new JsonArray();
-    jsonArray.add(JsonParser.parseString("{" + "\"key1\":\"value1\"," + "\"key2\":\"value2\"," + "\"key3\":\"value3\"," + "\"key4\":\"value4\"" + "}"));
-    try {
-      jsonArray.getAsBoolean();
-      fail("expected getBoolean to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-    try {
-      jsonArray.get(-1);
-      fail("expected get to fail");
-    } catch (IndexOutOfBoundsException e) {
-      assertEquals("Expected an exception message",
-              "Index -1 out of bounds for length 1", e.getMessage());
-    }
-    try {
-      jsonArray.getAsString();
-      fail("expected getString to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-
-    jsonArray.remove(0);
-    jsonArray.add("hello");
-    try {
-      jsonArray.getAsDouble();
-      fail("expected getDouble to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsInt();
-      fail("expected getInt to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.get(0).getAsJsonArray();
-      fail("expected getJSONArray to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Array: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsJsonObject();
-      fail("expected getJSONObject to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Object: [\"hello\"]", e.getMessage());
-    }
-    try {
-      jsonArray.getAsLong();
-      fail("expected getLong to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-  }
 }
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar, /home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar, /home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar, /home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar, /home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar, /home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar], classpathV2=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar, /home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar, /home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar, /home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar, /home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar, /home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar], classpathV1AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar', classpathV2AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar', testsList={com.google.gson.functional.NullObjectAndFieldTest=[testExplicitDeserializationOfNulls], com.google.gson.functional.TypeHierarchyAdapterTest=[testTypeHierarchy]}, dataV1=null, dataV2=null, deltas=null, consideredTestsNames=null, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={selection={instructions=2308322, package-0/dram|uJ=161604475, package-0|uJ=2160647179, cycles=3712914, duration|ns=104598686406, branches=431145, dram|mW=1544, cache-misses=18412, device|mW=22201, package|uJ=2160647179, branch-misses=28560, package-0/dram|mW=1544, dram|uJ=161604475, cache-reference=92542, device|uJ=2322251654, package-0|mW=20656, package|mW=20656}, instrumentation={instructions=17446645406, package-0/dram|uJ=22098479, package-0|uJ=299684657, cycles=13495331278, duration|ns=14539150477, branches=3203580788, dram|mW=1519, cache-misses=14063422, device|mW=22132, package|uJ=299684657, branch-misses=83579777, package-0/dram|mW=1519, dram|uJ=22098479, cache-reference=274120156, device|uJ=321783136, package-0|mW=20612, package|mW=20612}}, reportEnum=NONE}
[INFO] Path to runner Classes: /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar
[INFO] /home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.5.2/junit-jupiter-api-5.5.2.jar
[INFO] /home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar
[INFO] /tmp/v1/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v1/gson/target/classes:/tmp/v1/gson/target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v1/gson/target/jjoules-reports(/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v2/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v2/gson//target/classes:/tmp/v2/gson//target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v2/gson/target/jjoules-reports(/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v1/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v1/gson/target/classes:/tmp/v1/gson/target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v1/gson/target/jjoules-reports(/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v2/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v2/gson//target/classes:/tmp/v2/gson//target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v2/gson/target/jjoules-reports(/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v1/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v1/gson/target/classes:/tmp/v1/gson/target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v1/gson/target/jjoules-reports(/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v2/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v2/gson//target/classes:/tmp/v2/gson//target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v2/gson/target/jjoules-reports(/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v1/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v1/gson/target/classes:/tmp/v1/gson/target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v1/gson/target/jjoules-reports(/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v2/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v2/gson//target/classes:/tmp/v2/gson//target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v2/gson/target/jjoules-reports(/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v1/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v1/gson/target/classes:/tmp/v1/gson/target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v1/gson/target/jjoules-reports(/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v1/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] /tmp/v2/gson
[INFO] Run: [java, -classpath, /home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/spino/.m2/repository/org/powerapi/jjoules/junit-jjoules/1.0-SNAPSHOT/junit-jjoules-1.0-SNAPSHOT.jar:/home/spino/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/spino/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/spino/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/spino/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/spino/.m2/repository/org/powerapi/jjoules/j-joules/1.0-SNAPSHOT/j-joules-1.0-SNAPSHOT.jar:/tmp/v2/gson//target/classes:/tmp/v2/gson//target/test-classes:/home/spino/.m2/repository/com/github/spoonlabs/flacoco/1.0.0/flacoco-1.0.0-jar-with-dependencies.jar, eu.stamp_project.testrunner.runner.JUnit4Runner, --class, com.google.gson.functional.NullObjectAndFieldTest:com.google.gson.functional.TypeHierarchyAdapterTest, --tests, testExplicitDeserializationOfNulls:testTypeHierarchy]
[INFO] Test has been run: com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy,com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls
[INFO] Reading json file from /tmp/v2/gson/target/jjoules-reports(/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.TypeHierarchyAdapterTest-testTypeHierarchy.json,/tmp/v2/gson/target/jjoules-reports/com.google.gson.functional.NullObjectAndFieldTest-testExplicitDeserializationOfNulls.json)
[INFO] mvn -f /tmp/v1/gson clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] mvn -f /tmp/v2/gson/ clean test -DskipTests dependency:build-classpath --quiet -Dcobertura.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Danimal.sniffer.skip=true -Djacoco.skip=true -Dcheckstyle.skip=true -Dproguard.skip=true -Dmdep.outputFile=classpath -DskipITs=true -Drat.skip=true -Denforcer.skip=true -Dgpg.skip=true
[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[info] Run Mark - Configuration{pathToFirstVersion='/tmp/v1/gson', pathToSecondVersion='/tmp/v2/gson/', pathToTestListAsCSV='/tmp/v1/gson/testsThatExecuteTheChange.csv', junit4=true, iterations=5, output='/tmp/v1/gson/diff-jjoules', pathToJSONDelta='deltas.json', pathToJSONDataV1='data_v1.json', pathToJSONDataV2='data_v2.json', diff='diff -ru /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
--- /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java	2021-09-24 16:17:29.405864043 +0200
@@ -25,7 +25,12 @@
 import java.lang.reflect.Type;
 import java.lang.reflect.TypeVariable;
 import java.lang.reflect.WildcardType;
-import java.util.*;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.NoSuchElementException;
+import java.util.Properties;
 
 import static com.google.gson.internal.$Gson$Preconditions.checkArgument;
 import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;
@@ -334,52 +339,61 @@
   }
 
   public static Type resolve(Type context, Class<?> contextRawType, Type toResolve) {
-    return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());
+    return resolve(context, contextRawType, toResolve, new HashMap<TypeVariable, Type>());
   }
 
   private static Type resolve(Type context, Class<?> contextRawType, Type toResolve,
-                              Collection<TypeVariable> visitedTypeVariables) {
+                              Map<TypeVariable, Type> visitedTypeVariables) {
     // this implementation is made a little more complicated in an attempt to avoid object-creation
+    TypeVariable resolving = null;
     while (true) {
       if (toResolve instanceof TypeVariable) {
         TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;
-        if (visitedTypeVariables.contains(typeVariable)) {
+        Type previouslyResolved = visitedTypeVariables.get(typeVariable);
+        if (previouslyResolved != null) {
           // cannot reduce due to infinite recursion
-          return toResolve;
-        } else {
-          visitedTypeVariables.add(typeVariable);
+          return (previouslyResolved == Void.TYPE) ? toResolve : previouslyResolved;
         }
+
+        // Insert a placeholder to mark the fact that we are in the process of resolving this type
+        visitedTypeVariables.put(typeVariable, Void.TYPE);
+        if (resolving == null) {
+          resolving = typeVariable;
+        }
+
         toResolve = resolveTypeVariable(context, contextRawType, typeVariable);
         if (toResolve == typeVariable) {
-          return toResolve;
+          break;
         }
 
       } else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {
         Class<?> original = (Class<?>) toResolve;
         Type componentType = original.getComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof GenericArrayType) {
         GenericArrayType original = (GenericArrayType) toResolve;
         Type componentType = original.getGenericComponentType();
         Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
-        return componentType == newComponentType
+        toResolve = equal(componentType, newComponentType)
             ? original
             : arrayOf(newComponentType);
+        break;
 
       } else if (toResolve instanceof ParameterizedType) {
         ParameterizedType original = (ParameterizedType) toResolve;
         Type ownerType = original.getOwnerType();
         Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);
-        boolean changed = newOwnerType != ownerType;
+        boolean changed = !equal(newOwnerType, ownerType);
 
         Type[] args = original.getActualTypeArguments();
         for (int t = 0, length = args.length; t < length; t++) {
           Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);
-          if (resolvedTypeArgument != args[t]) {
+          if (!equal(resolvedTypeArgument, args[t])) {
             if (!changed) {
               args = args.clone();
               changed = true;
@@ -388,9 +402,10 @@
           }
         }
 
-        return changed
+        toResolve = changed
             ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)
             : original;
+        break;
 
       } else if (toResolve instanceof WildcardType) {
         WildcardType original = (WildcardType) toResolve;
@@ -400,20 +415,28 @@
         if (originalLowerBound.length == 1) {
           Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);
           if (lowerBound != originalLowerBound[0]) {
-            return supertypeOf(lowerBound);
+            toResolve = supertypeOf(lowerBound);
+            break;
           }
         } else if (originalUpperBound.length == 1) {
           Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);
           if (upperBound != originalUpperBound[0]) {
-            return subtypeOf(upperBound);
+            toResolve = subtypeOf(upperBound);
+            break;
           }
         }
-        return original;
+        toResolve = original;
+        break;
 
       } else {
-        return toResolve;
+        break;
       }
     }
+    // ensure that any in-process resolution gets updated with the final result
+    if (resolving != null) {
+      visitedTypeVariables.put(resolving, toResolve);
+    }
+    return toResolve;
   }
 
   static Type resolveTypeVariable(Type context, Class<?> contextRawType, TypeVariable<?> unknown) {
Only in /tmp/v2/gson/src/test/java/com/google/gson/functional: ReusedTypeVariablesFullyResolveTest.java
diff -ru /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
--- /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 16:17:29.401864060 +0200
+++ /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java	2021-09-24 15:10:07.863784941 +0200
@@ -20,9 +20,6 @@
 
 import com.google.gson.common.MoreAsserts;
 
-import static org.junit.Assert.*;
-import static org.junit.Assert.assertEquals;
-
 /**
  * @author Jesse Wilson
  */
@@ -102,68 +99,4 @@
     assertEquals(1, original.get(0).getAsJsonArray().size());
     assertEquals(0, copy.get(0).getAsJsonArray().size());
   }
-
-  public void testFailedGetArrayValues() {
-    JsonArray jsonArray = new JsonArray();
-    jsonArray.add(JsonParser.parseString("{" + "\"key1\":\"value1\"," + "\"key2\":\"value2\"," + "\"key3\":\"value3\"," + "\"key4\":\"value4\"" + "}"));
-    try {
-      jsonArray.getAsBoolean();
-      fail("expected getBoolean to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-    try {
-      jsonArray.get(-1);
-      fail("expected get to fail");
-    } catch (IndexOutOfBoundsException e) {
-      assertEquals("Expected an exception message",
-              "Index -1 out of bounds for length 1", e.getMessage());
-    }
-    try {
-      jsonArray.getAsString();
-      fail("expected getString to fail");
-    } catch (UnsupportedOperationException e) {
-      assertEquals("Expected an exception message",
-              "JsonObject", e.getMessage());
-    }
-
-    jsonArray.remove(0);
-    jsonArray.add("hello");
-    try {
-      jsonArray.getAsDouble();
-      fail("expected getDouble to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsInt();
-      fail("expected getInt to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.get(0).getAsJsonArray();
-      fail("expected getJSONArray to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Array: \"hello\"", e.getMessage());
-    }
-    try {
-      jsonArray.getAsJsonObject();
-      fail("expected getJSONObject to fail");
-    } catch (IllegalStateException e) {
-      assertEquals("Expected an exception message",
-              "Not a JSON Object: [\"hello\"]", e.getMessage());
-    }
-    try {
-      jsonArray.getAsLong();
-      fail("expected getLong to fail");
-    } catch (NumberFormatException e) {
-      assertEquals("Expected an exception message",
-              "For input string: \"hello\"", e.getMessage());
-    }
-  }
 }
', pathToJSONDeltaOmega='deltaOmega.json', pathToRepositoryV1='/tmp/v1', pathToRepositoryV2='/tmp/v2', pathToJSONConsideredTestMethodNames='consideredTestMethods.json', pathToExecLinesAdditions='exec_additions.json', pathToExecLinesDeletions='exec_deletions.json', pathToJSONSuspiciousV1='suspicious_v1.json', pathToJSONSuspiciousV2='suspicious_v2.json', pathToReport='.github/workflows/template.md', classpathV1=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV2=[/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar, /home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar], classpathV1AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', classpathV2AsString='/home/spino/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/spino/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar', testsList={com.google.gson.functional.NullObjectAndFieldTest=[testExplicitDeserializationOfNulls], com.google.gson.functional.TypeHierarchyAdapterTest=[testTypeHierarchy]}, dataV1={com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy=[Data{energy=570495.0, instructions=2.3075043E7, durations=2.790285E7, cycles=2.8115306E7, caches=750756.0, cacheMisses=5248.0, branches=4591587.0, branchMisses=292545.0}, Data{energy=613279.0, instructions=2.2760541E7, durations=2.9911084E7, cycles=2.7377191E7, caches=721010.0, cacheMisses=5463.0, branches=4531149.0, branchMisses=287041.0}, Data{energy=717100.0, instructions=2.3296852E7, durations=3.5761708E7, cycles=2.7988108E7, caches=729709.0, cacheMisses=4981.0, branches=4639695.0, branchMisses=293409.0}, Data{energy=653013.0, instructions=2.307512E7, durations=3.2237107E7, cycles=2.8441699E7, caches=764562.0, cacheMisses=5396.0, branches=4591596.0, branchMisses=297130.0}, Data{energy=612974.0, instructions=2.3183489E7, durations=3.0530156E7, cycles=2.743054E7, caches=715685.0, cacheMisses=5212.0, branches=4608578.0, branchMisses=287417.0}], com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls=[Data{energy=1571346.0, instructions=7.1951486E7, durations=7.8146317E7, cycles=8.4559956E7, caches=2465222.0, cacheMisses=27076.0, branches=1.4504884E7, branchMisses=867501.0}, Data{energy=1510494.0, instructions=7.2224784E7, durations=7.5708198E7, cycles=8.6274356E7, caches=2533600.0, cacheMisses=26813.0, branches=1.4570831E7, branchMisses=888163.0}, Data{energy=1443173.0, instructions=7.2824666E7, durations=7.5566901E7, cycles=8.7503809E7, caches=2582404.0, cacheMisses=29249.0, branches=1.4670525E7, branchMisses=910910.0}, Data{energy=1443294.0, instructions=7.1301223E7, durations=7.2048413E7, cycles=8.5639331E7, caches=2521789.0, cacheMisses=28834.0, branches=1.4399387E7, branchMisses=886521.0}, Data{energy=1424495.0, instructions=7.1285737E7, durations=7.3026011E7, cycles=8.4256616E7, caches=2456788.0, cacheMisses=26234.0, branches=1.43973E7, branchMisses=887203.0}]}, dataV2={com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy=[Data{energy=656309.0, instructions=2.3027084E7, durations=3.2549782E7, cycles=2.7239829E7, caches=701559.0, cacheMisses=5575.0, branches=4586355.0, branchMisses=282105.0}, Data{energy=550536.0, instructions=2.3017597E7, durations=2.7812207E7, cycles=2.7724609E7, caches=741740.0, cacheMisses=5590.0, branches=4580490.0, branchMisses=288895.0}, Data{energy=530517.0, instructions=2.3105511E7, durations=2.6561084E7, cycles=2.7393197E7, caches=705811.0, cacheMisses=5112.0, branches=4601560.0, branchMisses=284924.0}, Data{energy=572569.0, instructions=2.3172507E7, durations=2.8078633E7, cycles=2.8029772E7, caches=750610.0, cacheMisses=5076.0, branches=4613014.0, branchMisses=294700.0}, Data{energy=574095.0, instructions=2.2680117E7, durations=2.9276687E7, cycles=2.6830612E7, caches=689959.0, cacheMisses=4861.0, branches=4516965.0, branchMisses=279123.0}], com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls=[Data{energy=1507015.0, instructions=7.1922329E7, durations=7.4437753E7, cycles=8.5349975E7, caches=2496582.0, cacheMisses=29601.0, branches=1.4513726E7, branchMisses=880682.0}, Data{energy=1670894.0, instructions=7.227346E7, durations=8.4116983E7, cycles=8.5061863E7, caches=2481002.0, cacheMisses=30875.0, branches=1.4565859E7, branchMisses=876103.0}, Data{energy=1528988.0, instructions=7.2033614E7, durations=7.6559339E7, cycles=8.468899E7, caches=2473813.0, cacheMisses=26764.0, branches=1.4537393E7, branchMisses=872426.0}, Data{energy=1568539.0, instructions=7.2431226E7, durations=7.8107648E7, cycles=8.5749245E7, caches=2532947.0, cacheMisses=25804.0, branches=1.4591351E7, branchMisses=885581.0}, Data{energy=1755916.0, instructions=7.257373E7, durations=8.691282E7, cycles=8.6468364E7, caches=2554236.0, cacheMisses=28848.0, branches=1.4609983E7, branchMisses=890238.0}]}, deltas={com.google.gson.functional.TypeHierarchyAdapterTest#testTypeHierarchy=Data{energy=-40710.0, instructions=-48036.0, durations=-2451523.0, cycles=-594911.0, caches=-23898.0, cacheMisses=-136.0, branches=-5241.0, branchMisses=-7621.0}, com.google.gson.functional.NullObjectAndFieldTest#testExplicitDeserializationOfNulls=Data{energy=125245.0, instructions=321974.0, durations=2540747.0, cycles=-289356.0, caches=-25207.0, cacheMisses=1772.0, branches=60975.0, branchMisses=-6521.0}}, consideredTestsNames={}, execLinesAdditions=null, execLinesDeletions=null, deltaOmega=null, scorePerLineV1=null, scorePerLineV2=null, ownConsumptionReports={selection={instructions=2308322, package-0/dram|uJ=161604475, package-0|uJ=2160647179, cycles=3712914, duration|ns=104598686406, branches=431145, dram|mW=1544, cache-misses=18412, device|mW=22201, package|uJ=2160647179, branch-misses=28560, package-0/dram|mW=1544, dram|uJ=161604475, cache-reference=92542, device|uJ=2322251654, package-0|mW=20656, package|mW=20656}, instrumentation={instructions=17446645406, package-0/dram|uJ=22098479, package-0|uJ=299684657, cycles=13495331278, duration|ns=14539150477, branches=3203580788, dram|mW=1519, cache-misses=14063422, device|mW=22132, package|uJ=299684657, branch-misses=83579777, package-0/dram|mW=1519, dram|uJ=22098479, cache-reference=274120156, device|uJ=321783136, package-0|mW=20612, package|mW=20612}, delta={instructions=92505420, package-0/dram|uJ=6857950, package-0|uJ=107110260, cycles=126867642, duration|ns=5280878343, branches=17821885, dram|mW=1298, cache-misses=392149, device|mW=21581, package|uJ=107110260, branch-misses=1097307, package-0/dram|mW=1298, dram|uJ=6857950, cache-reference=3221616, device|uJ=113968210, package-0|mW=20282, package|mW=20282}}, reportEnum=NONE}
[INFO] /tmp/v1/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
[INFO] /tmp/v2/gson/src/main/java/com/google/gson/internal/$Gson$Types.java
{com.google.gson.internal.$Gson$Types=[343, 347, 343, 365, 360, 366, 353, 373, 391, 396, 417, 423, 348, 350, 361, 369, 377, 391, 403, 408, 411, 411]}
{com.google.gson.internal.$Gson$Types=[348, 415, 338, 342, 348, 436, 338, 353, 437, 437, 352, 353, 347, 351, 360, 354, 347, 361, 366, 373, 355, 361, 361, 373, 363, 372, 382, 373, 382, 405, 377, 391, 405, 392, 391, 382, 396, 428, 391, 396, 428, 396, 383, 402, 418, 418, 404, 407, 424, 424, 409]}
[INFO] /tmp/v1/gson/src/test/java/com/google/gson/JsonArrayTest.java
[INFO] /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
[INFO] Build modified Tests /tmp/v2/gson/src/test/java/com/google/gson/JsonArrayTest.java
[info] DeltaOmega Data{energy=0.0, instructions=0.0, durations=0.0, cycles=0.0, caches=0.0, cacheMisses=0.0, branches=0.0, branchMisses=0.0}
java.lang.NullPointerException
	at org.powerapi.jjoules.EnergySample.buildReport(EnergySample.java:103)
	at org.powerapi.jjoules.EnergySample.stop(EnergySample.java:135)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo.stopMonitoring(DiffJJoulesMojo.java:246)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo.stopMonitoring(DiffJJoulesMojo.java:242)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo.end(DiffJJoulesMojo.java:363)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo.end(DiffJJoulesMojo.java:359)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo.commitMarking(DiffJJoulesMojo.java:313)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo._run(DiffJJoulesMojo.java:263)
	at fr.davidson.diff.jjoules.DiffJJoulesMojo.execute(DiffJJoulesMojo.java:224)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:956)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:192)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  04:33 min
[INFO] Finished at: 2021-09-24T16:22:42+02:00
[INFO] ------------------------------------------------------------------------
