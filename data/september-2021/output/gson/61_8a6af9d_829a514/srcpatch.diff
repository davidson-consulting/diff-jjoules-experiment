diff -ru /tmp/v1/gson/src/main/java/com/google/gson/JsonStreamParser.java /tmp/v2/gson/src/main/java/com/google/gson/JsonStreamParser.java
--- /tmp/v1/gson/src/main/java/com/google/gson/JsonStreamParser.java	2021-09-30 16:04:19.847061452 +0200
+++ /tmp/v2/gson/src/main/java/com/google/gson/JsonStreamParser.java	2021-09-30 11:43:34.414619237 +0200
@@ -29,8 +29,9 @@
 
 /**
  * A streaming parser that allows reading of multiple {@link JsonElement}s from the specified reader
- * asynchronously.
- * 
+ * asynchronously. The JSON data is parsed in lenient mode, see also
+ * {@link JsonReader#setLenient(boolean)}.
+ *
  * <p>This class is conditionally thread-safe (see Item 70, Effective Java second edition). To
  * properly use this class across multiple threads, you will need to add some external
  * synchronization. For example:
@@ -72,10 +73,12 @@
   }
   
   /**
-   * Returns the next available {@link JsonElement} on the reader. Null if none available.
-   * 
-   * @return the next available {@link JsonElement} on the reader. Null if none available.
-   * @throws JsonParseException if the incoming stream is malformed JSON.
+   * Returns the next available {@link JsonElement} on the reader. Throws a
+   * {@link NoSuchElementException} if no element is available.
+   *
+   * @return the next available {@code JsonElement} on the reader.
+   * @throws JsonSyntaxException if the incoming stream is malformed JSON.
+   * @throws NoSuchElementException if no {@code JsonElement} is available.
    * @since 1.4
    */
   public JsonElement next() throws JsonParseException {
@@ -97,6 +100,7 @@
   /**
    * Returns true if a {@link JsonElement} is available on the input for consumption
    * @return true if a {@link JsonElement} is available on the input, false otherwise
+   * @throws JsonSyntaxException if the incoming stream is malformed JSON.
    * @since 1.4
    */
   public boolean hasNext() {
